/*! modernizr 3.6.0 (Custom Build) | MIT *
 * https://modernizr.com/download/?-pointerevents-touchevents-setclasses-shiv !*/
!function (e, t, n) {
    function o(e) {
        var t = d.className, n = Modernizr._config.classPrefix || "";
        if (m && (t = t.baseVal), Modernizr._config.enableJSClass) {
            var o = new RegExp("(^|\\s)" + n + "no-js(\\s|$)");
            t = t.replace(o, "$1" + n + "js$2")
        }
        Modernizr._config.enableClasses && (t += " " + n + e.join(" " + n), m ? d.className.baseVal = t : d.className = t)
    }

    function r(e, t) {
        return typeof e === t
    }

    function a() {
        var e, t, n, o, a, i, s;
        for (var c in f) if (f.hasOwnProperty(c)) {
            if (e = [], t = f[c], t.name && (e.push(t.name.toLowerCase()), t.options && t.options.aliases && t.options.aliases.length)) for (n = 0; n < t.options.aliases.length; n++) e.push(t.options.aliases[n].toLowerCase());
            for (o = r(t.fn, "function") ? t.fn() : t.fn, a = 0; a < e.length; a++) i = e[a], s = i.split("."), 1 === s.length ? Modernizr[s[0]] = o : (!Modernizr[s[0]] || Modernizr[s[0]] instanceof Boolean || (Modernizr[s[0]] = new Boolean(Modernizr[s[0]])), Modernizr[s[0]][s[1]] = o), l.push((o ? "" : "no-") + s.join("-"))
        }
    }

    function i() {
        return "function" != typeof t.createElement ? t.createElement(arguments[0]) : m ? t.createElementNS.call(t, "http://www.w3.org/2000/svg", arguments[0]) : t.createElement.apply(t, arguments)
    }

    function s() {
        var e = t.body;
        return e || (e = i(m ? "svg" : "body"), e.fake = !0), e
    }

    function c(e, n, o, r) {
        var a, c, l, f, u = "modernizr", m = i("div"), p = s();
        if (parseInt(o, 10)) for (; o--;) l = i("div"), l.id = r ? r[o] : u + (o + 1), m.appendChild(l);
        return a = i("style"), a.type = "text/css", a.id = "s" + u, (p.fake ? p : m).appendChild(a), p.appendChild(m), a.styleSheet ? a.styleSheet.cssText = e : a.appendChild(t.createTextNode(e)), m.id = u, p.fake && (p.style.background = "", p.style.overflow = "hidden", f = d.style.overflow, d.style.overflow = "hidden", d.appendChild(p)), c = n(m, e), p.fake ? (p.parentNode.removeChild(p), d.style.overflow = f, d.offsetHeight) : m.parentNode.removeChild(m), !!c
    }

    var l = [], f = [], u = {
        _version: "3.6.0",
        _config: {classPrefix: "", enableClasses: !0, enableJSClass: !0, usePrefixes: !0},
        _q: [],
        on: function (e, t) {
            var n = this;
            setTimeout(function () {
                t(n[e])
            }, 0)
        },
        addTest: function (e, t, n) {
            f.push({name: e, fn: t, options: n})
        },
        addAsyncTest: function (e) {
            f.push({name: null, fn: e})
        }
    }, Modernizr = function () {
    };
    Modernizr.prototype = u, Modernizr = new Modernizr;
    var d = t.documentElement, m = "svg" === d.nodeName.toLowerCase();
    m || !function (e, t) {
        function n(e, t) {
            var n = e.createElement("p"), o = e.getElementsByTagName("head")[0] || e.documentElement;
            return n.innerHTML = "x<style>" + t + "</style>", o.insertBefore(n.lastChild, o.firstChild)
        }

        function o() {
            var e = E.elements;
            return "string" == typeof e ? e.split(" ") : e
        }

        function r(e, t) {
            var n = E.elements;
            "string" != typeof n && (n = n.join(" ")), "string" != typeof e && (e = e.join(" ")), E.elements = n + " " + e, l(t)
        }

        function a(e) {
            var t = y[e[v]];
            return t || (t = {}, g++, e[v] = g, y[g] = t), t
        }

        function i(e, n, o) {
            if (n || (n = t), u) return n.createElement(e);
            o || (o = a(n));
            var r;
            return r = o.cache[e] ? o.cache[e].cloneNode() : h.test(e) ? (o.cache[e] = o.createElem(e)).cloneNode() : o.createElem(e), !r.canHaveChildren || p.test(e) || r.tagUrn ? r : o.frag.appendChild(r)
        }

        function s(e, n) {
            if (e || (e = t), u) return e.createDocumentFragment();
            n = n || a(e);
            for (var r = n.frag.cloneNode(), i = 0, s = o(), c = s.length; c > i; i++) r.createElement(s[i]);
            return r
        }

        function c(e, t) {
            t.cache || (t.cache = {}, t.createElem = e.createElement, t.createFrag = e.createDocumentFragment, t.frag = t.createFrag()), e.createElement = function (n) {
                return E.shivMethods ? i(n, e, t) : t.createElem(n)
            }, e.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + o().join().replace(/[\w\-:]+/g, function (e) {
                return t.createElem(e), t.frag.createElement(e), 'c("' + e + '")'
            }) + ");return n}")(E, t.frag)
        }

        function l(e) {
            e || (e = t);
            var o = a(e);
            return !E.shivCSS || f || o.hasCSS || (o.hasCSS = !!n(e, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")), u || c(e, o), e
        }

        var f, u, d = "3.7.3", m = e.html5 || {},
            p = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,
            h = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,
            v = "_html5shiv", g = 0, y = {};
        !function () {
            try {
                var e = t.createElement("a");
                e.innerHTML = "<xyz></xyz>", f = "hidden" in e, u = 1 == e.childNodes.length || function () {
                    t.createElement("a");
                    var e = t.createDocumentFragment();
                    return "undefined" == typeof e.cloneNode || "undefined" == typeof e.createDocumentFragment || "undefined" == typeof e.createElement
                }()
            } catch (n) {
                f = !0, u = !0
            }
        }();
        var E = {
            elements: m.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video",
            version: d,
            shivCSS: m.shivCSS !== !1,
            supportsUnknownElements: u,
            shivMethods: m.shivMethods !== !1,
            type: "default",
            shivDocument: l,
            createElement: i,
            createDocumentFragment: s,
            addElements: r
        };
        e.html5 = E, l(t), "object" == typeof module && module.exports && (module.exports = E)
    }("undefined" != typeof e ? e : this, t);
    var p = u._config.usePrefixes ? " -webkit- -moz- -o- -ms- ".split(" ") : ["", ""];
    u._prefixes = p;
    var h = "Moz O ms Webkit", v = u._config.usePrefixes ? h.toLowerCase().split(" ") : [];
    u._domPrefixes = v;
    var g = function () {
        function e(e, t) {
            var r;
            return e ? (t && "string" != typeof t || (t = i(t || "div")), e = "on" + e, r = e in t, !r && o && (t.setAttribute || (t = i("div")), t.setAttribute(e, ""), r = "function" == typeof t[e], t[e] !== n && (t[e] = n), t.removeAttribute(e)), r) : !1
        }

        var o = !("onblur" in t.documentElement);
        return e
    }();
    u.hasEvent = g, Modernizr.addTest("pointerevents", function () {
        var e = !1, t = v.length;
        for (e = Modernizr.hasEvent("pointerdown"); t-- && !e;) g(v[t] + "pointerdown") && (e = !0);
        return e
    });
    var y = u.testStyles = c;
    Modernizr.addTest("touchevents", function () {
        var n;
        if ("ontouchstart" in e || e.DocumentTouch && t instanceof DocumentTouch) n = !0; else {
            var o = ["@media (", p.join("touch-enabled),("), "heartz", ")", "{#modernizr{top:9px;position:absolute}}"].join("");
            y(o, function (e) {
                n = 9 === e.offsetTop
            })
        }
        return n
    }), a(), o(l), delete u.addTest, delete u.addAsyncTest;
    for (var E = 0; E < Modernizr._q.length; E++) Modernizr._q[E]();
    e.Modernizr = Modernizr
}(window, document);

/*! jQuery v3.2.1 | (c) JS Foundation and other contributors | jquery.org/license */
!function (a, b) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function (a) {
        if (!a.document) throw new Error("jQuery requires a window with a document");
        return b(a)
    } : b(a)
}("undefined" != typeof window ? window : this, function (a, b) {
    "use strict";
    var c = [], d = a.document, e = Object.getPrototypeOf, f = c.slice, g = c.concat, h = c.push, i = c.indexOf, j = {},
        k = j.toString, l = j.hasOwnProperty, m = l.toString, n = m.call(Object), o = {};

    function p(a, b) {
        b = b || d;
        var c = b.createElement("script");
        c.text = a, b.head.appendChild(c).parentNode.removeChild(c)
    }

    var q = "3.2.1", r = function (a, b) {
        return new r.fn.init(a, b)
    }, s = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, t = /^-ms-/, u = /-([a-z])/g, v = function (a, b) {
        return b.toUpperCase()
    };
    r.fn = r.prototype = {
        jquery: q, constructor: r, length: 0, toArray: function () {
            return f.call(this)
        }, get: function (a) {
            return null == a ? f.call(this) : a < 0 ? this[a + this.length] : this[a]
        }, pushStack: function (a) {
            var b = r.merge(this.constructor(), a);
            return b.prevObject = this, b
        }, each: function (a) {
            return r.each(this, a)
        }, map: function (a) {
            return this.pushStack(r.map(this, function (b, c) {
                return a.call(b, c, b)
            }))
        }, slice: function () {
            return this.pushStack(f.apply(this, arguments))
        }, first: function () {
            return this.eq(0)
        }, last: function () {
            return this.eq(-1)
        }, eq: function (a) {
            var b = this.length, c = +a + (a < 0 ? b : 0);
            return this.pushStack(c >= 0 && c < b ? [this[c]] : [])
        }, end: function () {
            return this.prevObject || this.constructor()
        }, push: h, sort: c.sort, splice: c.splice
    }, r.extend = r.fn.extend = function () {
        var a, b, c, d, e, f, g = arguments[0] || {}, h = 1, i = arguments.length, j = !1;
        for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || r.isFunction(g) || (g = {}), h === i && (g = this, h--); h < i; h++) if (null != (a = arguments[h])) for (b in a) c = g[b], d = a[b], g !== d && (j && d && (r.isPlainObject(d) || (e = Array.isArray(d))) ? (e ? (e = !1, f = c && Array.isArray(c) ? c : []) : f = c && r.isPlainObject(c) ? c : {}, g[b] = r.extend(j, f, d)) : void 0 !== d && (g[b] = d));
        return g
    }, r.extend({
        expando: "jQuery" + (q + Math.random()).replace(/\D/g, ""), isReady: !0, error: function (a) {
            throw new Error(a)
        }, noop: function () {
        }, isFunction: function (a) {
            return "function" === r.type(a)
        }, isWindow: function (a) {
            return null != a && a === a.window
        }, isNumeric: function (a) {
            var b = r.type(a);
            return ("number" === b || "string" === b) && !isNaN(a - parseFloat(a))
        }, isPlainObject: function (a) {
            var b, c;
            return !(!a || "[object Object]" !== k.call(a)) && (!(b = e(a)) || (c = l.call(b, "constructor") && b.constructor, "function" == typeof c && m.call(c) === n))
        }, isEmptyObject: function (a) {
            var b;
            for (b in a) return !1;
            return !0
        }, type: function (a) {
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? j[k.call(a)] || "object" : typeof a
        }, globalEval: function (a) {
            p(a)
        }, camelCase: function (a) {
            return a.replace(t, "ms-").replace(u, v)
        }, each: function (a, b) {
            var c, d = 0;
            if (w(a)) {
                for (c = a.length; d < c; d++) if (b.call(a[d], d, a[d]) === !1) break
            } else for (d in a) if (b.call(a[d], d, a[d]) === !1) break;
            return a
        }, trim: function (a) {
            return null == a ? "" : (a + "").replace(s, "")
        }, makeArray: function (a, b) {
            var c = b || [];
            return null != a && (w(Object(a)) ? r.merge(c, "string" == typeof a ? [a] : a) : h.call(c, a)), c
        }, inArray: function (a, b, c) {
            return null == b ? -1 : i.call(b, a, c)
        }, merge: function (a, b) {
            for (var c = +b.length, d = 0, e = a.length; d < c; d++) a[e++] = b[d];
            return a.length = e, a
        }, grep: function (a, b, c) {
            for (var d, e = [], f = 0, g = a.length, h = !c; f < g; f++) d = !b(a[f], f), d !== h && e.push(a[f]);
            return e
        }, map: function (a, b, c) {
            var d, e, f = 0, h = [];
            if (w(a)) for (d = a.length; f < d; f++) e = b(a[f], f, c), null != e && h.push(e); else for (f in a) e = b(a[f], f, c), null != e && h.push(e);
            return g.apply([], h)
        }, guid: 1, proxy: function (a, b) {
            var c, d, e;
            if ("string" == typeof b && (c = a[b], b = a, a = c), r.isFunction(a)) return d = f.call(arguments, 2), e = function () {
                return a.apply(b || this, d.concat(f.call(arguments)))
            }, e.guid = a.guid = a.guid || r.guid++, e
        }, now: Date.now, support: o
    }), "function" == typeof Symbol && (r.fn[Symbol.iterator] = c[Symbol.iterator]), r.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (a, b) {
        j["[object " + b + "]"] = b.toLowerCase()
    });

    function w(a) {
        var b = !!a && "length" in a && a.length, c = r.type(a);
        return "function" !== c && !r.isWindow(a) && ("array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a)
    }

    var x = function (a) {
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + 1 * new Date, v = a.document, w = 0,
            x = 0, y = ha(), z = ha(), A = ha(), B = function (a, b) {
                return a === b && (l = !0), 0
            }, C = {}.hasOwnProperty, D = [], E = D.pop, F = D.push, G = D.push, H = D.slice, I = function (a, b) {
                for (var c = 0, d = a.length; c < d; c++) if (a[c] === b) return c;
                return -1
            },
            J = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            K = "[\\x20\\t\\r\\n\\f]", L = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",
            M = "\\[" + K + "*(" + L + ")(?:" + K + "*([*^$|!~]?=)" + K + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + L + "))|)" + K + "*\\]",
            N = ":(" + L + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + M + ")*)|.*)\\)|)",
            O = new RegExp(K + "+", "g"), P = new RegExp("^" + K + "+|((?:^|[^\\\\])(?:\\\\.)*)" + K + "+$", "g"),
            Q = new RegExp("^" + K + "*," + K + "*"), R = new RegExp("^" + K + "*([>+~]|" + K + ")" + K + "*"),
            S = new RegExp("=" + K + "*([^\\]'\"]*?)" + K + "*\\]", "g"), T = new RegExp(N),
            U = new RegExp("^" + L + "$"), V = {
                ID: new RegExp("^#(" + L + ")"),
                CLASS: new RegExp("^\\.(" + L + ")"),
                TAG: new RegExp("^(" + L + "|[*])"),
                ATTR: new RegExp("^" + M),
                PSEUDO: new RegExp("^" + N),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + K + "*(even|odd|(([+-]|)(\\d*)n|)" + K + "*(?:([+-]|)" + K + "*(\\d+)|))" + K + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + J + ")$", "i"),
                needsContext: new RegExp("^" + K + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + K + "*((?:-\\d)?\\d*)" + K + "*\\)|)(?=[^-]|$)", "i")
            }, W = /^(?:input|select|textarea|button)$/i, X = /^h\d$/i, Y = /^[^{]+\{\s*\[native \w/,
            Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, $ = /[+~]/,
            _ = new RegExp("\\\\([\\da-f]{1,6}" + K + "?|(" + K + ")|.)", "ig"), aa = function (a, b, c) {
                var d = "0x" + b - 65536;
                return d !== d || c ? b : d < 0 ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320)
            }, ba = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ca = function (a, b) {
                return b ? "\0" === a ? "\ufffd" : a.slice(0, -1) + "\\" + a.charCodeAt(a.length - 1).toString(16) + " " : "\\" + a
            }, da = function () {
                m()
            }, ea = ta(function (a) {
                return a.disabled === !0 && ("form" in a || "label" in a)
            }, {dir: "parentNode", next: "legend"});
        try {
            G.apply(D = H.call(v.childNodes), v.childNodes), D[v.childNodes.length].nodeType
        } catch (fa) {
            G = {
                apply: D.length ? function (a, b) {
                    F.apply(a, H.call(b))
                } : function (a, b) {
                    var c = a.length, d = 0;
                    while (a[c++] = b[d++]) ;
                    a.length = c - 1
                }
            }
        }

        function ga(a, b, d, e) {
            var f, h, j, k, l, o, r, s = b && b.ownerDocument, w = b ? b.nodeType : 9;
            if (d = d || [], "string" != typeof a || !a || 1 !== w && 9 !== w && 11 !== w) return d;
            if (!e && ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, p)) {
                if (11 !== w && (l = Z.exec(a))) if (f = l[1]) {
                    if (9 === w) {
                        if (!(j = b.getElementById(f))) return d;
                        if (j.id === f) return d.push(j), d
                    } else if (s && (j = s.getElementById(f)) && t(b, j) && j.id === f) return d.push(j), d
                } else {
                    if (l[2]) return G.apply(d, b.getElementsByTagName(a)), d;
                    if ((f = l[3]) && c.getElementsByClassName && b.getElementsByClassName) return G.apply(d, b.getElementsByClassName(f)), d
                }
                if (c.qsa && !A[a + " "] && (!q || !q.test(a))) {
                    if (1 !== w) s = b, r = a; else if ("object" !== b.nodeName.toLowerCase()) {
                        (k = b.getAttribute("id")) ? k = k.replace(ba, ca) : b.setAttribute("id", k = u), o = g(a), h = o.length;
                        while (h--) o[h] = "#" + k + " " + sa(o[h]);
                        r = o.join(","), s = $.test(a) && qa(b.parentNode) || b
                    }
                    if (r) try {
                        return G.apply(d, s.querySelectorAll(r)), d
                    } catch (x) {
                    } finally {
                        k === u && b.removeAttribute("id")
                    }
                }
            }
            return i(a.replace(P, "$1"), b, d, e)
        }

        function ha() {
            var a = [];

            function b(c, e) {
                return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e
            }

            return b
        }

        function ia(a) {
            return a[u] = !0, a
        }

        function ja(a) {
            var b = n.createElement("fieldset");
            try {
                return !!a(b)
            } catch (c) {
                return !1
            } finally {
                b.parentNode && b.parentNode.removeChild(b), b = null
            }
        }

        function ka(a, b) {
            var c = a.split("|"), e = c.length;
            while (e--) d.attrHandle[c[e]] = b
        }

        function la(a, b) {
            var c = b && a, d = c && 1 === a.nodeType && 1 === b.nodeType && a.sourceIndex - b.sourceIndex;
            if (d) return d;
            if (c) while (c = c.nextSibling) if (c === b) return -1;
            return a ? 1 : -1
        }

        function ma(a) {
            return function (b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a
            }
        }

        function na(a) {
            return function (b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a
            }
        }

        function oa(a) {
            return function (b) {
                return "form" in b ? b.parentNode && b.disabled === !1 ? "label" in b ? "label" in b.parentNode ? b.parentNode.disabled === a : b.disabled === a : b.isDisabled === a || b.isDisabled !== !a && ea(b) === a : b.disabled === a : "label" in b && b.disabled === a
            }
        }

        function pa(a) {
            return ia(function (b) {
                return b = +b, ia(function (c, d) {
                    var e, f = a([], c.length, b), g = f.length;
                    while (g--) c[e = f[g]] && (c[e] = !(d[e] = c[e]))
                })
            })
        }

        function qa(a) {
            return a && "undefined" != typeof a.getElementsByTagName && a
        }

        c = ga.support = {}, f = ga.isXML = function (a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return !!b && "HTML" !== b.nodeName
        }, m = ga.setDocument = function (a) {
            var b, e, g = a ? a.ownerDocument || a : v;
            return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = n.documentElement, p = !f(n), v !== n && (e = n.defaultView) && e.top !== e && (e.addEventListener ? e.addEventListener("unload", da, !1) : e.attachEvent && e.attachEvent("onunload", da)), c.attributes = ja(function (a) {
                return a.className = "i", !a.getAttribute("className")
            }), c.getElementsByTagName = ja(function (a) {
                return a.appendChild(n.createComment("")), !a.getElementsByTagName("*").length
            }), c.getElementsByClassName = Y.test(n.getElementsByClassName), c.getById = ja(function (a) {
                return o.appendChild(a).id = u, !n.getElementsByName || !n.getElementsByName(u).length
            }), c.getById ? (d.filter.ID = function (a) {
                var b = a.replace(_, aa);
                return function (a) {
                    return a.getAttribute("id") === b
                }
            }, d.find.ID = function (a, b) {
                if ("undefined" != typeof b.getElementById && p) {
                    var c = b.getElementById(a);
                    return c ? [c] : []
                }
            }) : (d.filter.ID = function (a) {
                var b = a.replace(_, aa);
                return function (a) {
                    var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");
                    return c && c.value === b
                }
            }, d.find.ID = function (a, b) {
                if ("undefined" != typeof b.getElementById && p) {
                    var c, d, e, f = b.getElementById(a);
                    if (f) {
                        if (c = f.getAttributeNode("id"), c && c.value === a) return [f];
                        e = b.getElementsByName(a), d = 0;
                        while (f = e[d++]) if (c = f.getAttributeNode("id"), c && c.value === a) return [f]
                    }
                    return []
                }
            }), d.find.TAG = c.getElementsByTagName ? function (a, b) {
                return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0
            } : function (a, b) {
                var c, d = [], e = 0, f = b.getElementsByTagName(a);
                if ("*" === a) {
                    while (c = f[e++]) 1 === c.nodeType && d.push(c);
                    return d
                }
                return f
            }, d.find.CLASS = c.getElementsByClassName && function (a, b) {
                if ("undefined" != typeof b.getElementsByClassName && p) return b.getElementsByClassName(a)
            }, r = [], q = [], (c.qsa = Y.test(n.querySelectorAll)) && (ja(function (a) {
                o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\r\\' msallowcapture=''><option selected=''></option></select>", a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + K + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || q.push("\\[" + K + "*(?:value|" + J + ")"), a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]")
            }), ja(function (a) {
                a.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var b = n.createElement("input");
                b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + K + "*[*^$|!~]?="), 2 !== a.querySelectorAll(":enabled").length && q.push(":enabled", ":disabled"), o.appendChild(a).disabled = !0, 2 !== a.querySelectorAll(":disabled").length && q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), q.push(",.*:")
            })), (c.matchesSelector = Y.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ja(function (a) {
                c.disconnectedMatch = s.call(a, "*"), s.call(a, "[s!='']:x"), r.push("!=", N)
            }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), b = Y.test(o.compareDocumentPosition), t = b || Y.test(o.contains) ? function (a, b) {
                var c = 9 === a.nodeType ? a.documentElement : a, d = b && b.parentNode;
                return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)))
            } : function (a, b) {
                if (b) while (b = b.parentNode) if (b === a) return !0;
                return !1
            }, B = b ? function (a, b) {
                if (a === b) return l = !0, 0;
                var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === n || a.ownerDocument === v && t(v, a) ? -1 : b === n || b.ownerDocument === v && t(v, b) ? 1 : k ? I(k, a) - I(k, b) : 0 : 4 & d ? -1 : 1)
            } : function (a, b) {
                if (a === b) return l = !0, 0;
                var c, d = 0, e = a.parentNode, f = b.parentNode, g = [a], h = [b];
                if (!e || !f) return a === n ? -1 : b === n ? 1 : e ? -1 : f ? 1 : k ? I(k, a) - I(k, b) : 0;
                if (e === f) return la(a, b);
                c = a;
                while (c = c.parentNode) g.unshift(c);
                c = b;
                while (c = c.parentNode) h.unshift(c);
                while (g[d] === h[d]) d++;
                return d ? la(g[d], h[d]) : g[d] === v ? -1 : h[d] === v ? 1 : 0
            }, n) : n
        }, ga.matches = function (a, b) {
            return ga(a, null, null, b)
        }, ga.matchesSelector = function (a, b) {
            if ((a.ownerDocument || a) !== n && m(a), b = b.replace(S, "='$1']"), c.matchesSelector && p && !A[b + " "] && (!r || !r.test(b)) && (!q || !q.test(b))) try {
                var d = s.call(a, b);
                if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d
            } catch (e) {
            }
            return ga(b, n, null, [a]).length > 0
        }, ga.contains = function (a, b) {
            return (a.ownerDocument || a) !== n && m(a), t(a, b)
        }, ga.attr = function (a, b) {
            (a.ownerDocument || a) !== n && m(a);
            var e = d.attrHandle[b.toLowerCase()],
                f = e && C.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;
            return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null
        }, ga.escape = function (a) {
            return (a + "").replace(ba, ca)
        }, ga.error = function (a) {
            throw new Error("Syntax error, unrecognized expression: " + a)
        }, ga.uniqueSort = function (a) {
            var b, d = [], e = 0, f = 0;
            if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {
                while (b = a[f++]) b === a[f] && (e = d.push(f));
                while (e--) a.splice(d[e], 1)
            }
            return k = null, a
        }, e = ga.getText = function (a) {
            var b, c = "", d = 0, f = a.nodeType;
            if (f) {
                if (1 === f || 9 === f || 11 === f) {
                    if ("string" == typeof a.textContent) return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling) c += e(a)
                } else if (3 === f || 4 === f) return a.nodeValue
            } else while (b = a[d++]) c += e(b);
            return c
        }, d = ga.selectors = {
            cacheLength: 50,
            createPseudo: ia,
            match: V,
            attrHandle: {},
            find: {},
            relative: {
                ">": {dir: "parentNode", first: !0},
                " ": {dir: "parentNode"},
                "+": {dir: "previousSibling", first: !0},
                "~": {dir: "previousSibling"}
            },
            preFilter: {
                ATTR: function (a) {
                    return a[1] = a[1].replace(_, aa), a[3] = (a[3] || a[4] || a[5] || "").replace(_, aa), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4)
                }, CHILD: function (a) {
                    return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || ga.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && ga.error(a[0]), a
                }, PSEUDO: function (a) {
                    var b, c = !a[6] && a[2];
                    return V.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && T.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3))
                }
            },
            filter: {
                TAG: function (a) {
                    var b = a.replace(_, aa).toLowerCase();
                    return "*" === a ? function () {
                        return !0
                    } : function (a) {
                        return a.nodeName && a.nodeName.toLowerCase() === b
                    }
                }, CLASS: function (a) {
                    var b = y[a + " "];
                    return b || (b = new RegExp("(^|" + K + ")" + a + "(" + K + "|$)")) && y(a, function (a) {
                        return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "")
                    })
                }, ATTR: function (a, b, c) {
                    return function (d) {
                        var e = ga.attr(d, a);
                        return null == e ? "!=" === b : !b || (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(O, " ") + " ").indexOf(c) > -1 : "|=" === b && (e === c || e.slice(0, c.length + 1) === c + "-"))
                    }
                }, CHILD: function (a, b, c, d, e) {
                    var f = "nth" !== a.slice(0, 3), g = "last" !== a.slice(-4), h = "of-type" === b;
                    return 1 === d && 0 === e ? function (a) {
                        return !!a.parentNode
                    } : function (b, c, i) {
                        var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling", q = b.parentNode,
                            r = h && b.nodeName.toLowerCase(), s = !i && !h, t = !1;
                        if (q) {
                            if (f) {
                                while (p) {
                                    m = b;
                                    while (m = m[p]) if (h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) return !1;
                                    o = p = "only" === a && !o && "nextSibling"
                                }
                                return !0
                            }
                            if (o = [g ? q.firstChild : q.lastChild], g && s) {
                                m = q, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n && j[2], m = n && q.childNodes[n];
                                while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) if (1 === m.nodeType && ++t && m === b) {
                                    k[a] = [w, n, t];
                                    break
                                }
                            } else if (s && (m = b, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n), t === !1) while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) if ((h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) && ++t && (s && (l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), k[a] = [w, t]), m === b)) break;
                            return t -= e, t === d || t % d === 0 && t / d >= 0
                        }
                    }
                }, PSEUDO: function (a, b) {
                    var c, e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || ga.error("unsupported pseudo: " + a);
                    return e[u] ? e(b) : e.length > 1 ? (c = [a, a, "", b], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ia(function (a, c) {
                        var d, f = e(a, b), g = f.length;
                        while (g--) d = I(a, f[g]), a[d] = !(c[d] = f[g])
                    }) : function (a) {
                        return e(a, 0, c)
                    }) : e
                }
            },
            pseudos: {
                not: ia(function (a) {
                    var b = [], c = [], d = h(a.replace(P, "$1"));
                    return d[u] ? ia(function (a, b, c, e) {
                        var f, g = d(a, null, e, []), h = a.length;
                        while (h--) (f = g[h]) && (a[h] = !(b[h] = f))
                    }) : function (a, e, f) {
                        return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop()
                    }
                }), has: ia(function (a) {
                    return function (b) {
                        return ga(a, b).length > 0
                    }
                }), contains: ia(function (a) {
                    return a = a.replace(_, aa), function (b) {
                        return (b.textContent || b.innerText || e(b)).indexOf(a) > -1
                    }
                }), lang: ia(function (a) {
                    return U.test(a || "") || ga.error("unsupported lang: " + a), a = a.replace(_, aa).toLowerCase(), function (b) {
                        var c;
                        do if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-"); while ((b = b.parentNode) && 1 === b.nodeType);
                        return !1
                    }
                }), target: function (b) {
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id
                }, root: function (a) {
                    return a === o
                }, focus: function (a) {
                    return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex)
                }, enabled: oa(!1), disabled: oa(!0), checked: function (a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked || "option" === b && !!a.selected
                }, selected: function (a) {
                    return a.parentNode && a.parentNode.selectedIndex, a.selected === !0
                }, empty: function (a) {
                    for (a = a.firstChild; a; a = a.nextSibling) if (a.nodeType < 6) return !1;
                    return !0
                }, parent: function (a) {
                    return !d.pseudos.empty(a)
                }, header: function (a) {
                    return X.test(a.nodeName)
                }, input: function (a) {
                    return W.test(a.nodeName)
                }, button: function (a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type || "button" === b
                }, text: function (a) {
                    var b;
                    return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase())
                }, first: pa(function () {
                    return [0]
                }), last: pa(function (a, b) {
                    return [b - 1]
                }), eq: pa(function (a, b, c) {
                    return [c < 0 ? c + b : c]
                }), even: pa(function (a, b) {
                    for (var c = 0; c < b; c += 2) a.push(c);
                    return a
                }), odd: pa(function (a, b) {
                    for (var c = 1; c < b; c += 2) a.push(c);
                    return a
                }), lt: pa(function (a, b, c) {
                    for (var d = c < 0 ? c + b : c; --d >= 0;) a.push(d);
                    return a
                }), gt: pa(function (a, b, c) {
                    for (var d = c < 0 ? c + b : c; ++d < b;) a.push(d);
                    return a
                })
            }
        }, d.pseudos.nth = d.pseudos.eq;
        for (b in{radio: !0, checkbox: !0, file: !0, password: !0, image: !0}) d.pseudos[b] = ma(b);
        for (b in{submit: !0, reset: !0}) d.pseudos[b] = na(b);

        function ra() {
        }

        ra.prototype = d.filters = d.pseudos, d.setFilters = new ra, g = ga.tokenize = function (a, b) {
            var c, e, f, g, h, i, j, k = z[a + " "];
            if (k) return b ? 0 : k.slice(0);
            h = a, i = [], j = d.preFilter;
            while (h) {
                c && !(e = Q.exec(h)) || (e && (h = h.slice(e[0].length) || h), i.push(f = [])), c = !1, (e = R.exec(h)) && (c = e.shift(), f.push({
                    value: c,
                    type: e[0].replace(P, " ")
                }), h = h.slice(c.length));
                for (g in d.filter) !(e = V[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), f.push({
                    value: c,
                    type: g,
                    matches: e
                }), h = h.slice(c.length));
                if (!c) break
            }
            return b ? h.length : h ? ga.error(a) : z(a, i).slice(0)
        };

        function sa(a) {
            for (var b = 0, c = a.length, d = ""; b < c; b++) d += a[b].value;
            return d
        }

        function ta(a, b, c) {
            var d = b.dir, e = b.next, f = e || d, g = c && "parentNode" === f, h = x++;
            return b.first ? function (b, c, e) {
                while (b = b[d]) if (1 === b.nodeType || g) return a(b, c, e);
                return !1
            } : function (b, c, i) {
                var j, k, l, m = [w, h];
                if (i) {
                    while (b = b[d]) if ((1 === b.nodeType || g) && a(b, c, i)) return !0
                } else while (b = b[d]) if (1 === b.nodeType || g) if (l = b[u] || (b[u] = {}), k = l[b.uniqueID] || (l[b.uniqueID] = {}), e && e === b.nodeName.toLowerCase()) b = b[d] || b; else {
                    if ((j = k[f]) && j[0] === w && j[1] === h) return m[2] = j[2];
                    if (k[f] = m, m[2] = a(b, c, i)) return !0
                }
                return !1
            }
        }

        function ua(a) {
            return a.length > 1 ? function (b, c, d) {
                var e = a.length;
                while (e--) if (!a[e](b, c, d)) return !1;
                return !0
            } : a[0]
        }

        function va(a, b, c) {
            for (var d = 0, e = b.length; d < e; d++) ga(a, b[d], c);
            return c
        }

        function wa(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; h < i; h++) (f = a[h]) && (c && !c(f, d, e) || (g.push(f), j && b.push(h)));
            return g
        }

        function xa(a, b, c, d, e, f) {
            return d && !d[u] && (d = xa(d)), e && !e[u] && (e = xa(e, f)), ia(function (f, g, h, i) {
                var j, k, l, m = [], n = [], o = g.length, p = f || va(b || "*", h.nodeType ? [h] : h, []),
                    q = !a || !f && b ? p : wa(p, m, a, h, i), r = c ? e || (f ? a : o || d) ? [] : g : q;
                if (c && c(q, r, h, i), d) {
                    j = wa(r, n), d(j, [], h, i), k = j.length;
                    while (k--) (l = j[k]) && (r[n[k]] = !(q[n[k]] = l))
                }
                if (f) {
                    if (e || a) {
                        if (e) {
                            j = [], k = r.length;
                            while (k--) (l = r[k]) && j.push(q[k] = l);
                            e(null, r = [], j, i)
                        }
                        k = r.length;
                        while (k--) (l = r[k]) && (j = e ? I(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l))
                    }
                } else r = wa(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : G.apply(g, r)
            })
        }

        function ya(a) {
            for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = ta(function (a) {
                return a === b
            }, h, !0), l = ta(function (a) {
                return I(b, a) > -1
            }, h, !0), m = [function (a, c, d) {
                var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));
                return b = null, e
            }]; i < f; i++) if (c = d.relative[a[i].type]) m = [ta(ua(m), c)]; else {
                if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {
                    for (e = ++i; e < f; e++) if (d.relative[a[e].type]) break;
                    return xa(i > 1 && ua(m), i > 1 && sa(a.slice(0, i - 1).concat({value: " " === a[i - 2].type ? "*" : ""})).replace(P, "$1"), c, i < e && ya(a.slice(i, e)), e < f && ya(a = a.slice(e)), e < f && sa(a))
                }
                m.push(c)
            }
            return ua(m)
        }

        function za(a, b) {
            var c = b.length > 0, e = a.length > 0, f = function (f, g, h, i, k) {
                var l, o, q, r = 0, s = "0", t = f && [], u = [], v = j, x = f || e && d.find.TAG("*", k),
                    y = w += null == v ? 1 : Math.random() || .1, z = x.length;
                for (k && (j = g === n || g || k); s !== z && null != (l = x[s]); s++) {
                    if (e && l) {
                        o = 0, g || l.ownerDocument === n || (m(l), h = !p);
                        while (q = a[o++]) if (q(l, g || n, h)) {
                            i.push(l);
                            break
                        }
                        k && (w = y)
                    }
                    c && ((l = !q && l) && r--, f && t.push(l))
                }
                if (r += s, c && s !== r) {
                    o = 0;
                    while (q = b[o++]) q(t, u, g, h);
                    if (f) {
                        if (r > 0) while (s--) t[s] || u[s] || (u[s] = E.call(i));
                        u = wa(u)
                    }
                    G.apply(i, u), k && !f && u.length > 0 && r + b.length > 1 && ga.uniqueSort(i)
                }
                return k && (w = y, j = v), t
            };
            return c ? ia(f) : f
        }

        return h = ga.compile = function (a, b) {
            var c, d = [], e = [], f = A[a + " "];
            if (!f) {
                b || (b = g(a)), c = b.length;
                while (c--) f = ya(b[c]), f[u] ? d.push(f) : e.push(f);
                f = A(a, za(e, d)), f.selector = a
            }
            return f
        }, i = ga.select = function (a, b, c, e) {
            var f, i, j, k, l, m = "function" == typeof a && a, n = !e && g(a = m.selector || a);
            if (c = c || [], 1 === n.length) {
                if (i = n[0] = n[0].slice(0), i.length > 2 && "ID" === (j = i[0]).type && 9 === b.nodeType && p && d.relative[i[1].type]) {
                    if (b = (d.find.ID(j.matches[0].replace(_, aa), b) || [])[0], !b) return c;
                    m && (b = b.parentNode), a = a.slice(i.shift().value.length)
                }
                f = V.needsContext.test(a) ? 0 : i.length;
                while (f--) {
                    if (j = i[f], d.relative[k = j.type]) break;
                    if ((l = d.find[k]) && (e = l(j.matches[0].replace(_, aa), $.test(i[0].type) && qa(b.parentNode) || b))) {
                        if (i.splice(f, 1), a = e.length && sa(i), !a) return G.apply(c, e), c;
                        break
                    }
                }
            }
            return (m || h(a, n))(e, b, !p, c, !b || $.test(a) && qa(b.parentNode) || b), c
        }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, m(), c.sortDetached = ja(function (a) {
            return 1 & a.compareDocumentPosition(n.createElement("fieldset"))
        }), ja(function (a) {
            return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href")
        }) || ka("type|href|height|width", function (a, b, c) {
            if (!c) return a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2)
        }), c.attributes && ja(function (a) {
            return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value")
        }) || ka("value", function (a, b, c) {
            if (!c && "input" === a.nodeName.toLowerCase()) return a.defaultValue
        }), ja(function (a) {
            return null == a.getAttribute("disabled")
        }) || ka(J, function (a, b, c) {
            var d;
            if (!c) return a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null
        }), ga
    }(a);
    r.find = x, r.expr = x.selectors, r.expr[":"] = r.expr.pseudos, r.uniqueSort = r.unique = x.uniqueSort, r.text = x.getText, r.isXMLDoc = x.isXML, r.contains = x.contains, r.escapeSelector = x.escape;
    var y = function (a, b, c) {
        var d = [], e = void 0 !== c;
        while ((a = a[b]) && 9 !== a.nodeType) if (1 === a.nodeType) {
            if (e && r(a).is(c)) break;
            d.push(a)
        }
        return d
    }, z = function (a, b) {
        for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
        return c
    }, A = r.expr.match.needsContext;

    function B(a, b) {
        return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase()
    }

    var C = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i, D = /^.[^:#\[\.,]*$/;

    function E(a, b, c) {
        return r.isFunction(b) ? r.grep(a, function (a, d) {
            return !!b.call(a, d, a) !== c
        }) : b.nodeType ? r.grep(a, function (a) {
            return a === b !== c
        }) : "string" != typeof b ? r.grep(a, function (a) {
            return i.call(b, a) > -1 !== c
        }) : D.test(b) ? r.filter(b, a, c) : (b = r.filter(b, a), r.grep(a, function (a) {
            return i.call(b, a) > -1 !== c && 1 === a.nodeType
        }))
    }

    r.filter = function (a, b, c) {
        var d = b[0];
        return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? r.find.matchesSelector(d, a) ? [d] : [] : r.find.matches(a, r.grep(b, function (a) {
            return 1 === a.nodeType
        }))
    }, r.fn.extend({
        find: function (a) {
            var b, c, d = this.length, e = this;
            if ("string" != typeof a) return this.pushStack(r(a).filter(function () {
                for (b = 0; b < d; b++) if (r.contains(e[b], this)) return !0
            }));
            for (c = this.pushStack([]), b = 0; b < d; b++) r.find(a, e[b], c);
            return d > 1 ? r.uniqueSort(c) : c
        }, filter: function (a) {
            return this.pushStack(E(this, a || [], !1))
        }, not: function (a) {
            return this.pushStack(E(this, a || [], !0))
        }, is: function (a) {
            return !!E(this, "string" == typeof a && A.test(a) ? r(a) : a || [], !1).length
        }
    });
    var F, G = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, H = r.fn.init = function (a, b, c) {
        var e, f;
        if (!a) return this;
        if (c = c || F, "string" == typeof a) {
            if (e = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : G.exec(a), !e || !e[1] && b) return !b || b.jquery ? (b || c).find(a) : this.constructor(b).find(a);
            if (e[1]) {
                if (b = b instanceof r ? b[0] : b, r.merge(this, r.parseHTML(e[1], b && b.nodeType ? b.ownerDocument || b : d, !0)), C.test(e[1]) && r.isPlainObject(b)) for (e in b) r.isFunction(this[e]) ? this[e](b[e]) : this.attr(e, b[e]);
                return this
            }
            return f = d.getElementById(e[2]), f && (this[0] = f, this.length = 1), this
        }
        return a.nodeType ? (this[0] = a, this.length = 1, this) : r.isFunction(a) ? void 0 !== c.ready ? c.ready(a) : a(r) : r.makeArray(a, this)
    };
    H.prototype = r.fn, F = r(d);
    var I = /^(?:parents|prev(?:Until|All))/, J = {children: !0, contents: !0, next: !0, prev: !0};
    r.fn.extend({
        has: function (a) {
            var b = r(a, this), c = b.length;
            return this.filter(function () {
                for (var a = 0; a < c; a++) if (r.contains(this, b[a])) return !0
            })
        }, closest: function (a, b) {
            var c, d = 0, e = this.length, f = [], g = "string" != typeof a && r(a);
            if (!A.test(a)) for (; d < e; d++) for (c = this[d]; c && c !== b; c = c.parentNode) if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && r.find.matchesSelector(c, a))) {
                f.push(c);
                break
            }
            return this.pushStack(f.length > 1 ? r.uniqueSort(f) : f)
        }, index: function (a) {
            return a ? "string" == typeof a ? i.call(r(a), this[0]) : i.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        }, add: function (a, b) {
            return this.pushStack(r.uniqueSort(r.merge(this.get(), r(a, b))))
        }, addBack: function (a) {
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
        }
    });

    function K(a, b) {
        while ((a = a[b]) && 1 !== a.nodeType) ;
        return a
    }

    r.each({
        parent: function (a) {
            var b = a.parentNode;
            return b && 11 !== b.nodeType ? b : null
        }, parents: function (a) {
            return y(a, "parentNode")
        }, parentsUntil: function (a, b, c) {
            return y(a, "parentNode", c)
        }, next: function (a) {
            return K(a, "nextSibling")
        }, prev: function (a) {
            return K(a, "previousSibling")
        }, nextAll: function (a) {
            return y(a, "nextSibling")
        }, prevAll: function (a) {
            return y(a, "previousSibling")
        }, nextUntil: function (a, b, c) {
            return y(a, "nextSibling", c)
        }, prevUntil: function (a, b, c) {
            return y(a, "previousSibling", c)
        }, siblings: function (a) {
            return z((a.parentNode || {}).firstChild, a)
        }, children: function (a) {
            return z(a.firstChild)
        }, contents: function (a) {
            return B(a, "iframe") ? a.contentDocument : (B(a, "template") && (a = a.content || a), r.merge([], a.childNodes))
        }
    }, function (a, b) {
        r.fn[a] = function (c, d) {
            var e = r.map(this, b, c);
            return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = r.filter(d, e)), this.length > 1 && (J[a] || r.uniqueSort(e), I.test(a) && e.reverse()), this.pushStack(e)
        }
    });
    var L = /[^\x20\t\r\n\f]+/g;

    function M(a) {
        var b = {};
        return r.each(a.match(L) || [], function (a, c) {
            b[c] = !0
        }), b
    }

    r.Callbacks = function (a) {
        a = "string" == typeof a ? M(a) : r.extend({}, a);
        var b, c, d, e, f = [], g = [], h = -1, i = function () {
            for (e = e || a.once, d = b = !0; g.length; h = -1) {
                c = g.shift();
                while (++h < f.length) f[h].apply(c[0], c[1]) === !1 && a.stopOnFalse && (h = f.length, c = !1)
            }
            a.memory || (c = !1), b = !1, e && (f = c ? [] : "")
        }, j = {
            add: function () {
                return f && (c && !b && (h = f.length - 1, g.push(c)), function d(b) {
                    r.each(b, function (b, c) {
                        r.isFunction(c) ? a.unique && j.has(c) || f.push(c) : c && c.length && "string" !== r.type(c) && d(c)
                    })
                }(arguments), c && !b && i()), this
            }, remove: function () {
                return r.each(arguments, function (a, b) {
                    var c;
                    while ((c = r.inArray(b, f, c)) > -1) f.splice(c, 1), c <= h && h--
                }), this
            }, has: function (a) {
                return a ? r.inArray(a, f) > -1 : f.length > 0
            }, empty: function () {
                return f && (f = []), this
            }, disable: function () {
                return e = g = [], f = c = "", this
            }, disabled: function () {
                return !f
            }, lock: function () {
                return e = g = [], c || b || (f = c = ""), this
            }, locked: function () {
                return !!e
            }, fireWith: function (a, c) {
                return e || (c = c || [], c = [a, c.slice ? c.slice() : c], g.push(c), b || i()), this
            }, fire: function () {
                return j.fireWith(this, arguments), this
            }, fired: function () {
                return !!d
            }
        };
        return j
    };

    function N(a) {
        return a
    }

    function O(a) {
        throw a
    }

    function P(a, b, c, d) {
        var e;
        try {
            a && r.isFunction(e = a.promise) ? e.call(a).done(b).fail(c) : a && r.isFunction(e = a.then) ? e.call(a, b, c) : b.apply(void 0, [a].slice(d))
        } catch (a) {
            c.apply(void 0, [a])
        }
    }

    r.extend({
        Deferred: function (b) {
            var c = [["notify", "progress", r.Callbacks("memory"), r.Callbacks("memory"), 2], ["resolve", "done", r.Callbacks("once memory"), r.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", r.Callbacks("once memory"), r.Callbacks("once memory"), 1, "rejected"]],
                d = "pending", e = {
                    state: function () {
                        return d
                    }, always: function () {
                        return f.done(arguments).fail(arguments), this
                    }, "catch": function (a) {
                        return e.then(null, a)
                    }, pipe: function () {
                        var a = arguments;
                        return r.Deferred(function (b) {
                            r.each(c, function (c, d) {
                                var e = r.isFunction(a[d[4]]) && a[d[4]];
                                f[d[1]](function () {
                                    var a = e && e.apply(this, arguments);
                                    a && r.isFunction(a.promise) ? a.promise().progress(b.notify).done(b.resolve).fail(b.reject) : b[d[0] + "With"](this, e ? [a] : arguments)
                                })
                            }), a = null
                        }).promise()
                    }, then: function (b, d, e) {
                        var f = 0;

                        function g(b, c, d, e) {
                            return function () {
                                var h = this, i = arguments, j = function () {
                                    var a, j;
                                    if (!(b < f)) {
                                        if (a = d.apply(h, i), a === c.promise()) throw new TypeError("Thenable self-resolution");
                                        j = a && ("object" == typeof a || "function" == typeof a) && a.then, r.isFunction(j) ? e ? j.call(a, g(f, c, N, e), g(f, c, O, e)) : (f++, j.call(a, g(f, c, N, e), g(f, c, O, e), g(f, c, N, c.notifyWith))) : (d !== N && (h = void 0, i = [a]), (e || c.resolveWith)(h, i))
                                    }
                                }, k = e ? j : function () {
                                    try {
                                        j()
                                    } catch (a) {
                                        r.Deferred.exceptionHook && r.Deferred.exceptionHook(a, k.stackTrace), b + 1 >= f && (d !== O && (h = void 0, i = [a]), c.rejectWith(h, i))
                                    }
                                };
                                b ? k() : (r.Deferred.getStackHook && (k.stackTrace = r.Deferred.getStackHook()), a.setTimeout(k))
                            }
                        }

                        return r.Deferred(function (a) {
                            c[0][3].add(g(0, a, r.isFunction(e) ? e : N, a.notifyWith)), c[1][3].add(g(0, a, r.isFunction(b) ? b : N)), c[2][3].add(g(0, a, r.isFunction(d) ? d : O))
                        }).promise()
                    }, promise: function (a) {
                        return null != a ? r.extend(a, e) : e
                    }
                }, f = {};
            return r.each(c, function (a, b) {
                var g = b[2], h = b[5];
                e[b[1]] = g.add, h && g.add(function () {
                    d = h
                }, c[3 - a][2].disable, c[0][2].lock), g.add(b[3].fire), f[b[0]] = function () {
                    return f[b[0] + "With"](this === f ? void 0 : this, arguments), this
                }, f[b[0] + "With"] = g.fireWith
            }), e.promise(f), b && b.call(f, f), f
        }, when: function (a) {
            var b = arguments.length, c = b, d = Array(c), e = f.call(arguments), g = r.Deferred(), h = function (a) {
                return function (c) {
                    d[a] = this, e[a] = arguments.length > 1 ? f.call(arguments) : c, --b || g.resolveWith(d, e)
                }
            };
            if (b <= 1 && (P(a, g.done(h(c)).resolve, g.reject, !b), "pending" === g.state() || r.isFunction(e[c] && e[c].then))) return g.then();
            while (c--) P(e[c], h(c), g.reject);
            return g.promise()
        }
    });
    var Q = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    r.Deferred.exceptionHook = function (b, c) {
        a.console && a.console.warn && b && Q.test(b.name) && a.console.warn("jQuery.Deferred exception: " + b.message, b.stack, c)
    }, r.readyException = function (b) {
        a.setTimeout(function () {
            throw b
        })
    };
    var R = r.Deferred();
    r.fn.ready = function (a) {
        return R.then(a)["catch"](function (a) {
            r.readyException(a)
        }), this
    }, r.extend({
        isReady: !1, readyWait: 1, ready: function (a) {
            (a === !0 ? --r.readyWait : r.isReady) || (r.isReady = !0, a !== !0 && --r.readyWait > 0 || R.resolveWith(d, [r]))
        }
    }), r.ready.then = R.then;

    function S() {
        d.removeEventListener("DOMContentLoaded", S),
            a.removeEventListener("load", S), r.ready()
    }

    "complete" === d.readyState || "loading" !== d.readyState && !d.documentElement.doScroll ? a.setTimeout(r.ready) : (d.addEventListener("DOMContentLoaded", S), a.addEventListener("load", S));
    var T = function (a, b, c, d, e, f, g) {
        var h = 0, i = a.length, j = null == c;
        if ("object" === r.type(c)) {
            e = !0;
            for (h in c) T(a, b, h, c[h], !0, f, g)
        } else if (void 0 !== d && (e = !0, r.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function (a, b, c) {
            return j.call(r(a), c)
        })), b)) for (; h < i; h++) b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
        return e ? a : j ? b.call(a) : i ? b(a[0], c) : f
    }, U = function (a) {
        return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType
    };

    function V() {
        this.expando = r.expando + V.uid++
    }

    V.uid = 1, V.prototype = {
        cache: function (a) {
            var b = a[this.expando];
            return b || (b = {}, U(a) && (a.nodeType ? a[this.expando] = b : Object.defineProperty(a, this.expando, {
                value: b,
                configurable: !0
            }))), b
        }, set: function (a, b, c) {
            var d, e = this.cache(a);
            if ("string" == typeof b) e[r.camelCase(b)] = c; else for (d in b) e[r.camelCase(d)] = b[d];
            return e
        }, get: function (a, b) {
            return void 0 === b ? this.cache(a) : a[this.expando] && a[this.expando][r.camelCase(b)]
        }, access: function (a, b, c) {
            return void 0 === b || b && "string" == typeof b && void 0 === c ? this.get(a, b) : (this.set(a, b, c), void 0 !== c ? c : b)
        }, remove: function (a, b) {
            var c, d = a[this.expando];
            if (void 0 !== d) {
                if (void 0 !== b) {
                    Array.isArray(b) ? b = b.map(r.camelCase) : (b = r.camelCase(b), b = b in d ? [b] : b.match(L) || []), c = b.length;
                    while (c--) delete d[b[c]]
                }
                (void 0 === b || r.isEmptyObject(d)) && (a.nodeType ? a[this.expando] = void 0 : delete a[this.expando])
            }
        }, hasData: function (a) {
            var b = a[this.expando];
            return void 0 !== b && !r.isEmptyObject(b)
        }
    };
    var W = new V, X = new V, Y = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, Z = /[A-Z]/g;

    function $(a) {
        return "true" === a || "false" !== a && ("null" === a ? null : a === +a + "" ? +a : Y.test(a) ? JSON.parse(a) : a)
    }

    function _(a, b, c) {
        var d;
        if (void 0 === c && 1 === a.nodeType) if (d = "data-" + b.replace(Z, "-$&").toLowerCase(), c = a.getAttribute(d), "string" == typeof c) {
            try {
                c = $(c)
            } catch (e) {
            }
            X.set(a, b, c)
        } else c = void 0;
        return c
    }

    r.extend({
        hasData: function (a) {
            return X.hasData(a) || W.hasData(a)
        }, data: function (a, b, c) {
            return X.access(a, b, c)
        }, removeData: function (a, b) {
            X.remove(a, b)
        }, _data: function (a, b, c) {
            return W.access(a, b, c)
        }, _removeData: function (a, b) {
            W.remove(a, b)
        }
    }), r.fn.extend({
        data: function (a, b) {
            var c, d, e, f = this[0], g = f && f.attributes;
            if (void 0 === a) {
                if (this.length && (e = X.get(f), 1 === f.nodeType && !W.get(f, "hasDataAttrs"))) {
                    c = g.length;
                    while (c--) g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = r.camelCase(d.slice(5)), _(f, d, e[d])));
                    W.set(f, "hasDataAttrs", !0)
                }
                return e
            }
            return "object" == typeof a ? this.each(function () {
                X.set(this, a)
            }) : T(this, function (b) {
                var c;
                if (f && void 0 === b) {
                    if (c = X.get(f, a), void 0 !== c) return c;
                    if (c = _(f, a), void 0 !== c) return c
                } else this.each(function () {
                    X.set(this, a, b)
                })
            }, null, b, arguments.length > 1, null, !0)
        }, removeData: function (a) {
            return this.each(function () {
                X.remove(this, a)
            })
        }
    }), r.extend({
        queue: function (a, b, c) {
            var d;
            if (a) return b = (b || "fx") + "queue", d = W.get(a, b), c && (!d || Array.isArray(c) ? d = W.access(a, b, r.makeArray(c)) : d.push(c)), d || []
        }, dequeue: function (a, b) {
            b = b || "fx";
            var c = r.queue(a, b), d = c.length, e = c.shift(), f = r._queueHooks(a, b), g = function () {
                r.dequeue(a, b)
            };
            "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire()
        }, _queueHooks: function (a, b) {
            var c = b + "queueHooks";
            return W.get(a, c) || W.access(a, c, {
                empty: r.Callbacks("once memory").add(function () {
                    W.remove(a, [b + "queue", c])
                })
            })
        }
    }), r.fn.extend({
        queue: function (a, b) {
            var c = 2;
            return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? r.queue(this[0], a) : void 0 === b ? this : this.each(function () {
                var c = r.queue(this, a, b);
                r._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && r.dequeue(this, a)
            })
        }, dequeue: function (a) {
            return this.each(function () {
                r.dequeue(this, a)
            })
        }, clearQueue: function (a) {
            return this.queue(a || "fx", [])
        }, promise: function (a, b) {
            var c, d = 1, e = r.Deferred(), f = this, g = this.length, h = function () {
                --d || e.resolveWith(f, [f])
            };
            "string" != typeof a && (b = a, a = void 0), a = a || "fx";
            while (g--) c = W.get(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));
            return h(), e.promise(b)
        }
    });
    var aa = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, ba = new RegExp("^(?:([+-])=|)(" + aa + ")([a-z%]*)$", "i"),
        ca = ["Top", "Right", "Bottom", "Left"], da = function (a, b) {
            return a = b || a, "none" === a.style.display || "" === a.style.display && r.contains(a.ownerDocument, a) && "none" === r.css(a, "display")
        }, ea = function (a, b, c, d) {
            var e, f, g = {};
            for (f in b) g[f] = a.style[f], a.style[f] = b[f];
            e = c.apply(a, d || []);
            for (f in b) a.style[f] = g[f];
            return e
        };

    function fa(a, b, c, d) {
        var e, f = 1, g = 20, h = d ? function () {
                return d.cur()
            } : function () {
                return r.css(a, b, "")
            }, i = h(), j = c && c[3] || (r.cssNumber[b] ? "" : "px"),
            k = (r.cssNumber[b] || "px" !== j && +i) && ba.exec(r.css(a, b));
        if (k && k[3] !== j) {
            j = j || k[3], c = c || [], k = +i || 1;
            do f = f || ".5", k /= f, r.style(a, b, k + j); while (f !== (f = h() / i) && 1 !== f && --g)
        }
        return c && (k = +k || +i || 0, e = c[1] ? k + (c[1] + 1) * c[2] : +c[2], d && (d.unit = j, d.start = k, d.end = e)), e
    }

    var ga = {};

    function ha(a) {
        var b, c = a.ownerDocument, d = a.nodeName, e = ga[d];
        return e ? e : (b = c.body.appendChild(c.createElement(d)), e = r.css(b, "display"), b.parentNode.removeChild(b), "none" === e && (e = "block"), ga[d] = e, e)
    }

    function ia(a, b) {
        for (var c, d, e = [], f = 0, g = a.length; f < g; f++) d = a[f], d.style && (c = d.style.display, b ? ("none" === c && (e[f] = W.get(d, "display") || null, e[f] || (d.style.display = "")), "" === d.style.display && da(d) && (e[f] = ha(d))) : "none" !== c && (e[f] = "none", W.set(d, "display", c)));
        for (f = 0; f < g; f++) null != e[f] && (a[f].style.display = e[f]);
        return a
    }

    r.fn.extend({
        show: function () {
            return ia(this, !0)
        }, hide: function () {
            return ia(this)
        }, toggle: function (a) {
            return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function () {
                da(this) ? r(this).show() : r(this).hide()
            })
        }
    });
    var ja = /^(?:checkbox|radio)$/i, ka = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i, la = /^$|\/(?:java|ecma)script/i, ma = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    };
    ma.optgroup = ma.option, ma.tbody = ma.tfoot = ma.colgroup = ma.caption = ma.thead, ma.th = ma.td;

    function na(a, b) {
        var c;
        return c = "undefined" != typeof a.getElementsByTagName ? a.getElementsByTagName(b || "*") : "undefined" != typeof a.querySelectorAll ? a.querySelectorAll(b || "*") : [], void 0 === b || b && B(a, b) ? r.merge([a], c) : c
    }

    function oa(a, b) {
        for (var c = 0, d = a.length; c < d; c++) W.set(a[c], "globalEval", !b || W.get(b[c], "globalEval"))
    }

    var pa = /<|&#?\w+;/;

    function qa(a, b, c, d, e) {
        for (var f, g, h, i, j, k, l = b.createDocumentFragment(), m = [], n = 0, o = a.length; n < o; n++) if (f = a[n], f || 0 === f) if ("object" === r.type(f)) r.merge(m, f.nodeType ? [f] : f); else if (pa.test(f)) {
            g = g || l.appendChild(b.createElement("div")), h = (ka.exec(f) || ["", ""])[1].toLowerCase(), i = ma[h] || ma._default, g.innerHTML = i[1] + r.htmlPrefilter(f) + i[2], k = i[0];
            while (k--) g = g.lastChild;
            r.merge(m, g.childNodes), g = l.firstChild, g.textContent = ""
        } else m.push(b.createTextNode(f));
        l.textContent = "", n = 0;
        while (f = m[n++]) if (d && r.inArray(f, d) > -1) e && e.push(f); else if (j = r.contains(f.ownerDocument, f), g = na(l.appendChild(f), "script"), j && oa(g), c) {
            k = 0;
            while (f = g[k++]) la.test(f.type || "") && c.push(f)
        }
        return l
    }

    !function () {
        var a = d.createDocumentFragment(), b = a.appendChild(d.createElement("div")), c = d.createElement("input");
        c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), b.appendChild(c), o.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = "<textarea>x</textarea>", o.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue
    }();
    var ra = d.documentElement, sa = /^key/, ta = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
        ua = /^([^.]*)(?:\.(.+)|)/;

    function va() {
        return !0
    }

    function wa() {
        return !1
    }

    function xa() {
        try {
            return d.activeElement
        } catch (a) {
        }
    }

    function ya(a, b, c, d, e, f) {
        var g, h;
        if ("object" == typeof b) {
            "string" != typeof c && (d = d || c, c = void 0);
            for (h in b) ya(a, h, c, d, b[h], f);
            return a
        }
        if (null == d && null == e ? (e = c, d = c = void 0) : null == e && ("string" == typeof c ? (e = d, d = void 0) : (e = d, d = c, c = void 0)), e === !1) e = wa; else if (!e) return a;
        return 1 === f && (g = e, e = function (a) {
            return r().off(a), g.apply(this, arguments)
        }, e.guid = g.guid || (g.guid = r.guid++)), a.each(function () {
            r.event.add(this, b, e, d, c)
        })
    }

    r.event = {
        global: {}, add: function (a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, n, o, p, q = W.get(a);
            if (q) {
                c.handler && (f = c, c = f.handler, e = f.selector), e && r.find.matchesSelector(ra, e), c.guid || (c.guid = r.guid++), (i = q.events) || (i = q.events = {}), (g = q.handle) || (g = q.handle = function (b) {
                    return "undefined" != typeof r && r.event.triggered !== b.type ? r.event.dispatch.apply(a, arguments) : void 0
                }), b = (b || "").match(L) || [""], j = b.length;
                while (j--) h = ua.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n && (l = r.event.special[n] || {}, n = (e ? l.delegateType : l.bindType) || n, l = r.event.special[n] || {}, k = r.extend({
                    type: n,
                    origType: p,
                    data: d,
                    handler: c,
                    guid: c.guid,
                    selector: e,
                    needsContext: e && r.expr.match.needsContext.test(e),
                    namespace: o.join(".")
                }, f), (m = i[n]) || (m = i[n] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, o, g) !== !1 || a.addEventListener && a.addEventListener(n, g)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), r.event.global[n] = !0)
            }
        }, remove: function (a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, n, o, p, q = W.hasData(a) && W.get(a);
            if (q && (i = q.events)) {
                b = (b || "").match(L) || [""], j = b.length;
                while (j--) if (h = ua.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n) {
                    l = r.event.special[n] || {}, n = (d ? l.delegateType : l.bindType) || n, m = i[n] || [], h = h[2] && new RegExp("(^|\\.)" + o.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length;
                    while (f--) k = m[f], !e && p !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
                    g && !m.length && (l.teardown && l.teardown.call(a, o, q.handle) !== !1 || r.removeEvent(a, n, q.handle), delete i[n])
                } else for (n in i) r.event.remove(a, n + b[j], c, d, !0);
                r.isEmptyObject(i) && W.remove(a, "handle events")
            }
        }, dispatch: function (a) {
            var b = r.event.fix(a), c, d, e, f, g, h, i = new Array(arguments.length),
                j = (W.get(this, "events") || {})[b.type] || [], k = r.event.special[b.type] || {};
            for (i[0] = b, c = 1; c < arguments.length; c++) i[c] = arguments[c];
            if (b.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, b) !== !1) {
                h = r.event.handlers.call(this, b, j), c = 0;
                while ((f = h[c++]) && !b.isPropagationStopped()) {
                    b.currentTarget = f.elem, d = 0;
                    while ((g = f.handlers[d++]) && !b.isImmediatePropagationStopped()) b.rnamespace && !b.rnamespace.test(g.namespace) || (b.handleObj = g, b.data = g.data, e = ((r.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), void 0 !== e && (b.result = e) === !1 && (b.preventDefault(), b.stopPropagation()))
                }
                return k.postDispatch && k.postDispatch.call(this, b), b.result
            }
        }, handlers: function (a, b) {
            var c, d, e, f, g, h = [], i = b.delegateCount, j = a.target;
            if (i && j.nodeType && !("click" === a.type && a.button >= 1)) for (; j !== this; j = j.parentNode || this) if (1 === j.nodeType && ("click" !== a.type || j.disabled !== !0)) {
                for (f = [], g = {}, c = 0; c < i; c++) d = b[c], e = d.selector + " ", void 0 === g[e] && (g[e] = d.needsContext ? r(e, this).index(j) > -1 : r.find(e, this, null, [j]).length), g[e] && f.push(d);
                f.length && h.push({elem: j, handlers: f})
            }
            return j = this, i < b.length && h.push({elem: j, handlers: b.slice(i)}), h
        }, addProp: function (a, b) {
            Object.defineProperty(r.Event.prototype, a, {
                enumerable: !0,
                configurable: !0,
                get: r.isFunction(b) ? function () {
                    if (this.originalEvent) return b(this.originalEvent)
                } : function () {
                    if (this.originalEvent) return this.originalEvent[a]
                },
                set: function (b) {
                    Object.defineProperty(this, a, {enumerable: !0, configurable: !0, writable: !0, value: b})
                }
            })
        }, fix: function (a) {
            return a[r.expando] ? a : new r.Event(a)
        }, special: {
            load: {noBubble: !0}, focus: {
                trigger: function () {
                    if (this !== xa() && this.focus) return this.focus(), !1
                }, delegateType: "focusin"
            }, blur: {
                trigger: function () {
                    if (this === xa() && this.blur) return this.blur(), !1
                }, delegateType: "focusout"
            }, click: {
                trigger: function () {
                    if ("checkbox" === this.type && this.click && B(this, "input")) return this.click(), !1
                }, _default: function (a) {
                    return B(a.target, "a")
                }
            }, beforeunload: {
                postDispatch: function (a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result)
                }
            }
        }
    }, r.removeEvent = function (a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c)
    }, r.Event = function (a, b) {
        return this instanceof r.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? va : wa, this.target = a.target && 3 === a.target.nodeType ? a.target.parentNode : a.target, this.currentTarget = a.currentTarget, this.relatedTarget = a.relatedTarget) : this.type = a, b && r.extend(this, b), this.timeStamp = a && a.timeStamp || r.now(), void (this[r.expando] = !0)) : new r.Event(a, b)
    }, r.Event.prototype = {
        constructor: r.Event,
        isDefaultPrevented: wa,
        isPropagationStopped: wa,
        isImmediatePropagationStopped: wa,
        isSimulated: !1,
        preventDefault: function () {
            var a = this.originalEvent;
            this.isDefaultPrevented = va, a && !this.isSimulated && a.preventDefault()
        },
        stopPropagation: function () {
            var a = this.originalEvent;
            this.isPropagationStopped = va, a && !this.isSimulated && a.stopPropagation()
        },
        stopImmediatePropagation: function () {
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = va, a && !this.isSimulated && a.stopImmediatePropagation(), this.stopPropagation()
        }
    }, r.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        "char": !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: function (a) {
            var b = a.button;
            return null == a.which && sa.test(a.type) ? null != a.charCode ? a.charCode : a.keyCode : !a.which && void 0 !== b && ta.test(a.type) ? 1 & b ? 1 : 2 & b ? 3 : 4 & b ? 2 : 0 : a.which
        }
    }, r.event.addProp), r.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function (a, b) {
        r.event.special[a] = {
            delegateType: b, bindType: b, handle: function (a) {
                var c, d = this, e = a.relatedTarget, f = a.handleObj;
                return e && (e === d || r.contains(d, e)) || (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c
            }
        }
    }), r.fn.extend({
        on: function (a, b, c, d) {
            return ya(this, a, b, c, d)
        }, one: function (a, b, c, d) {
            return ya(this, a, b, c, d, 1)
        }, off: function (a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) return d = a.handleObj, r(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;
            if ("object" == typeof a) {
                for (e in a) this.off(e, b, a[e]);
                return this
            }
            return b !== !1 && "function" != typeof b || (c = b, b = void 0), c === !1 && (c = wa), this.each(function () {
                r.event.remove(this, a, c, b)
            })
        }
    });
    var za = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,
        Aa = /<script|<style|<link/i, Ba = /checked\s*(?:[^=]|=\s*.checked.)/i, Ca = /^true\/(.*)/,
        Da = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

    function Ea(a, b) {
        return B(a, "table") && B(11 !== b.nodeType ? b : b.firstChild, "tr") ? r(">tbody", a)[0] || a : a
    }

    function Fa(a) {
        return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a
    }

    function Ga(a) {
        var b = Ca.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"), a
    }

    function Ha(a, b) {
        var c, d, e, f, g, h, i, j;
        if (1 === b.nodeType) {
            if (W.hasData(a) && (f = W.access(a), g = W.set(b, f), j = f.events)) {
                delete g.handle, g.events = {};
                for (e in j) for (c = 0, d = j[e].length; c < d; c++) r.event.add(b, e, j[e][c])
            }
            X.hasData(a) && (h = X.access(a), i = r.extend({}, h), X.set(b, i))
        }
    }

    function Ia(a, b) {
        var c = b.nodeName.toLowerCase();
        "input" === c && ja.test(a.type) ? b.checked = a.checked : "input" !== c && "textarea" !== c || (b.defaultValue = a.defaultValue)
    }

    function Ja(a, b, c, d) {
        b = g.apply([], b);
        var e, f, h, i, j, k, l = 0, m = a.length, n = m - 1, q = b[0], s = r.isFunction(q);
        if (s || m > 1 && "string" == typeof q && !o.checkClone && Ba.test(q)) return a.each(function (e) {
            var f = a.eq(e);
            s && (b[0] = q.call(this, e, f.html())), Ja(f, b, c, d)
        });
        if (m && (e = qa(b, a[0].ownerDocument, !1, a, d), f = e.firstChild, 1 === e.childNodes.length && (e = f), f || d)) {
            for (h = r.map(na(e, "script"), Fa), i = h.length; l < m; l++) j = e, l !== n && (j = r.clone(j, !0, !0), i && r.merge(h, na(j, "script"))), c.call(a[l], j, l);
            if (i) for (k = h[h.length - 1].ownerDocument, r.map(h, Ga), l = 0; l < i; l++) j = h[l], la.test(j.type || "") && !W.access(j, "globalEval") && r.contains(k, j) && (j.src ? r._evalUrl && r._evalUrl(j.src) : p(j.textContent.replace(Da, ""), k))
        }
        return a
    }

    function Ka(a, b, c) {
        for (var d, e = b ? r.filter(b, a) : a, f = 0; null != (d = e[f]); f++) c || 1 !== d.nodeType || r.cleanData(na(d)), d.parentNode && (c && r.contains(d.ownerDocument, d) && oa(na(d, "script")), d.parentNode.removeChild(d));
        return a
    }

    r.extend({
        htmlPrefilter: function (a) {
            return a.replace(za, "<$1></$2>")
        }, clone: function (a, b, c) {
            var d, e, f, g, h = a.cloneNode(!0), i = r.contains(a.ownerDocument, a);
            if (!(o.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || r.isXMLDoc(a))) for (g = na(h), f = na(a), d = 0, e = f.length; d < e; d++) Ia(f[d], g[d]);
            if (b) if (c) for (f = f || na(a), g = g || na(h), d = 0, e = f.length; d < e; d++) Ha(f[d], g[d]); else Ha(a, h);
            return g = na(h, "script"), g.length > 0 && oa(g, !i && na(a, "script")), h
        }, cleanData: function (a) {
            for (var b, c, d, e = r.event.special, f = 0; void 0 !== (c = a[f]); f++) if (U(c)) {
                if (b = c[W.expando]) {
                    if (b.events) for (d in b.events) e[d] ? r.event.remove(c, d) : r.removeEvent(c, d, b.handle);
                    c[W.expando] = void 0
                }
                c[X.expando] && (c[X.expando] = void 0)
            }
        }
    }), r.fn.extend({
        detach: function (a) {
            return Ka(this, a, !0)
        }, remove: function (a) {
            return Ka(this, a)
        }, text: function (a) {
            return T(this, function (a) {
                return void 0 === a ? r.text(this) : this.empty().each(function () {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = a)
                })
            }, null, a, arguments.length)
        }, append: function () {
            return Ja(this, arguments, function (a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = Ea(this, a);
                    b.appendChild(a)
                }
            })
        }, prepend: function () {
            return Ja(this, arguments, function (a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = Ea(this, a);
                    b.insertBefore(a, b.firstChild)
                }
            })
        }, before: function () {
            return Ja(this, arguments, function (a) {
                this.parentNode && this.parentNode.insertBefore(a, this)
            })
        }, after: function () {
            return Ja(this, arguments, function (a) {
                this.parentNode && this.parentNode.insertBefore(a, this.nextSibling)
            })
        }, empty: function () {
            for (var a, b = 0; null != (a = this[b]); b++) 1 === a.nodeType && (r.cleanData(na(a, !1)), a.textContent = "");
            return this
        }, clone: function (a, b) {
            return a = null != a && a, b = null == b ? a : b, this.map(function () {
                return r.clone(this, a, b)
            })
        }, html: function (a) {
            return T(this, function (a) {
                var b = this[0] || {}, c = 0, d = this.length;
                if (void 0 === a && 1 === b.nodeType) return b.innerHTML;
                if ("string" == typeof a && !Aa.test(a) && !ma[(ka.exec(a) || ["", ""])[1].toLowerCase()]) {
                    a = r.htmlPrefilter(a);
                    try {
                        for (; c < d; c++) b = this[c] || {}, 1 === b.nodeType && (r.cleanData(na(b, !1)), b.innerHTML = a);
                        b = 0
                    } catch (e) {
                    }
                }
                b && this.empty().append(a)
            }, null, a, arguments.length)
        }, replaceWith: function () {
            var a = [];
            return Ja(this, arguments, function (b) {
                var c = this.parentNode;
                r.inArray(this, a) < 0 && (r.cleanData(na(this)), c && c.replaceChild(b, this))
            }, a)
        }
    }), r.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function (a, b) {
        r.fn[a] = function (a) {
            for (var c, d = [], e = r(a), f = e.length - 1, g = 0; g <= f; g++) c = g === f ? this : this.clone(!0), r(e[g])[b](c), h.apply(d, c.get());
            return this.pushStack(d)
        }
    });
    var La = /^margin/, Ma = new RegExp("^(" + aa + ")(?!px)[a-z%]+$", "i"), Na = function (b) {
        var c = b.ownerDocument.defaultView;
        return c && c.opener || (c = a), c.getComputedStyle(b)
    };
    !function () {
        function b() {
            if (i) {
                i.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%", i.innerHTML = "", ra.appendChild(h);
                var b = a.getComputedStyle(i);
                c = "1%" !== b.top, g = "2px" === b.marginLeft, e = "4px" === b.width, i.style.marginRight = "50%", f = "4px" === b.marginRight, ra.removeChild(h), i = null
            }
        }

        var c, e, f, g, h = d.createElement("div"), i = d.createElement("div");
        i.style && (i.style.backgroundClip = "content-box", i.cloneNode(!0).style.backgroundClip = "", o.clearCloneStyle = "content-box" === i.style.backgroundClip, h.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute", h.appendChild(i), r.extend(o, {
            pixelPosition: function () {
                return b(), c
            }, boxSizingReliable: function () {
                return b(), e
            }, pixelMarginRight: function () {
                return b(), f
            }, reliableMarginLeft: function () {
                return b(), g
            }
        }))
    }();

    function Oa(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || Na(a), c && (g = c.getPropertyValue(b) || c[b], "" !== g || r.contains(a.ownerDocument, a) || (g = r.style(a, b)), !o.pixelMarginRight() && Ma.test(g) && La.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 !== g ? g + "" : g
    }

    function Pa(a, b) {
        return {
            get: function () {
                return a() ? void delete this.get : (this.get = b).apply(this, arguments)
            }
        }
    }

    var Qa = /^(none|table(?!-c[ea]).+)/, Ra = /^--/,
        Sa = {position: "absolute", visibility: "hidden", display: "block"},
        Ta = {letterSpacing: "0", fontWeight: "400"}, Ua = ["Webkit", "Moz", "ms"], Va = d.createElement("div").style;

    function Wa(a) {
        if (a in Va) return a;
        var b = a[0].toUpperCase() + a.slice(1), c = Ua.length;
        while (c--) if (a = Ua[c] + b, a in Va) return a
    }

    function Xa(a) {
        var b = r.cssProps[a];
        return b || (b = r.cssProps[a] = Wa(a) || a), b
    }

    function Ya(a, b, c) {
        var d = ba.exec(b);
        return d ? Math.max(0, d[2] - (c || 0)) + (d[3] || "px") : b
    }

    function Za(a, b, c, d, e) {
        var f, g = 0;
        for (f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0; f < 4; f += 2) "margin" === c && (g += r.css(a, c + ca[f], !0, e)), d ? ("content" === c && (g -= r.css(a, "padding" + ca[f], !0, e)), "margin" !== c && (g -= r.css(a, "border" + ca[f] + "Width", !0, e))) : (g += r.css(a, "padding" + ca[f], !0, e), "padding" !== c && (g += r.css(a, "border" + ca[f] + "Width", !0, e)));
        return g
    }

    function $a(a, b, c) {
        var d, e = Na(a), f = Oa(a, b, e), g = "border-box" === r.css(a, "boxSizing", !1, e);
        return Ma.test(f) ? f : (d = g && (o.boxSizingReliable() || f === a.style[b]), "auto" === f && (f = a["offset" + b[0].toUpperCase() + b.slice(1)]), f = parseFloat(f) || 0, f + Za(a, b, c || (g ? "border" : "content"), d, e) + "px")
    }

    r.extend({
        cssHooks: {
            opacity: {
                get: function (a, b) {
                    if (b) {
                        var c = Oa(a, "opacity");
                        return "" === c ? "1" : c
                    }
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {"float": "cssFloat"},
        style: function (a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e, f, g, h = r.camelCase(b), i = Ra.test(b), j = a.style;
                return i || (b = Xa(h)), g = r.cssHooks[b] || r.cssHooks[h], void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : j[b] : (f = typeof c, "string" === f && (e = ba.exec(c)) && e[1] && (c = fa(a, b, e), f = "number"), null != c && c === c && ("number" === f && (c += e && e[3] || (r.cssNumber[h] ? "" : "px")), o.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (j[b] = "inherit"), g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i ? j.setProperty(b, c) : j[b] = c)), void 0)
            }
        },
        css: function (a, b, c, d) {
            var e, f, g, h = r.camelCase(b), i = Ra.test(b);
            return i || (b = Xa(h)), g = r.cssHooks[b] || r.cssHooks[h], g && "get" in g && (e = g.get(a, !0, c)), void 0 === e && (e = Oa(a, b, d)), "normal" === e && b in Ta && (e = Ta[b]), "" === c || c ? (f = parseFloat(e), c === !0 || isFinite(f) ? f || 0 : e) : e
        }
    }), r.each(["height", "width"], function (a, b) {
        r.cssHooks[b] = {
            get: function (a, c, d) {
                if (c) return !Qa.test(r.css(a, "display")) || a.getClientRects().length && a.getBoundingClientRect().width ? $a(a, b, d) : ea(a, Sa, function () {
                    return $a(a, b, d)
                })
            }, set: function (a, c, d) {
                var e, f = d && Na(a), g = d && Za(a, b, d, "border-box" === r.css(a, "boxSizing", !1, f), f);
                return g && (e = ba.exec(c)) && "px" !== (e[3] || "px") && (a.style[b] = c, c = r.css(a, b)), Ya(a, c, g)
            }
        }
    }), r.cssHooks.marginLeft = Pa(o.reliableMarginLeft, function (a, b) {
        if (b) return (parseFloat(Oa(a, "marginLeft")) || a.getBoundingClientRect().left - ea(a, {marginLeft: 0}, function () {
            return a.getBoundingClientRect().left
        })) + "px"
    }), r.each({margin: "", padding: "", border: "Width"}, function (a, b) {
        r.cssHooks[a + b] = {
            expand: function (c) {
                for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; d < 4; d++) e[a + ca[d] + b] = f[d] || f[d - 2] || f[0];
                return e
            }
        }, La.test(a) || (r.cssHooks[a + b].set = Ya)
    }), r.fn.extend({
        css: function (a, b) {
            return T(this, function (a, b, c) {
                var d, e, f = {}, g = 0;
                if (Array.isArray(b)) {
                    for (d = Na(a), e = b.length; g < e; g++) f[b[g]] = r.css(a, b[g], !1, d);
                    return f
                }
                return void 0 !== c ? r.style(a, b, c) : r.css(a, b)
            }, a, b, arguments.length > 1)
        }
    });

    function _a(a, b, c, d, e) {
        return new _a.prototype.init(a, b, c, d, e)
    }

    r.Tween = _a, _a.prototype = {
        constructor: _a, init: function (a, b, c, d, e, f) {
            this.elem = a, this.prop = c, this.easing = e || r.easing._default, this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (r.cssNumber[c] ? "" : "px")
        }, cur: function () {
            var a = _a.propHooks[this.prop];
            return a && a.get ? a.get(this) : _a.propHooks._default.get(this)
        }, run: function (a) {
            var b, c = _a.propHooks[this.prop];
            return this.options.duration ? this.pos = b = r.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : _a.propHooks._default.set(this), this
        }
    }, _a.prototype.init.prototype = _a.prototype, _a.propHooks = {
        _default: {
            get: function (a) {
                var b;
                return 1 !== a.elem.nodeType || null != a.elem[a.prop] && null == a.elem.style[a.prop] ? a.elem[a.prop] : (b = r.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0)
            }, set: function (a) {
                r.fx.step[a.prop] ? r.fx.step[a.prop](a) : 1 !== a.elem.nodeType || null == a.elem.style[r.cssProps[a.prop]] && !r.cssHooks[a.prop] ? a.elem[a.prop] = a.now : r.style(a.elem, a.prop, a.now + a.unit)
            }
        }
    }, _a.propHooks.scrollTop = _a.propHooks.scrollLeft = {
        set: function (a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)
        }
    }, r.easing = {
        linear: function (a) {
            return a
        }, swing: function (a) {
            return .5 - Math.cos(a * Math.PI) / 2
        }, _default: "swing"
    }, r.fx = _a.prototype.init, r.fx.step = {};
    var ab, bb, cb = /^(?:toggle|show|hide)$/, db = /queueHooks$/;

    function eb() {
        bb && (d.hidden === !1 && a.requestAnimationFrame ? a.requestAnimationFrame(eb) : a.setTimeout(eb, r.fx.interval), r.fx.tick())
    }

    function fb() {
        return a.setTimeout(function () {
            ab = void 0
        }), ab = r.now()
    }

    function gb(a, b) {
        var c, d = 0, e = {height: a};
        for (b = b ? 1 : 0; d < 4; d += 2 - b) c = ca[d], e["margin" + c] = e["padding" + c] = a;
        return b && (e.opacity = e.width = a), e
    }

    function hb(a, b, c) {
        for (var d, e = (kb.tweeners[b] || []).concat(kb.tweeners["*"]), f = 0, g = e.length; f < g; f++) if (d = e[f].call(c, b, a)) return d
    }

    function ib(a, b, c) {
        var d, e, f, g, h, i, j, k, l = "width" in b || "height" in b, m = this, n = {}, o = a.style,
            p = a.nodeType && da(a), q = W.get(a, "fxshow");
        c.queue || (g = r._queueHooks(a, "fx"), null == g.unqueued && (g.unqueued = 0, h = g.empty.fire, g.empty.fire = function () {
            g.unqueued || h()
        }), g.unqueued++, m.always(function () {
            m.always(function () {
                g.unqueued--, r.queue(a, "fx").length || g.empty.fire()
            })
        }));
        for (d in b) if (e = b[d], cb.test(e)) {
            if (delete b[d], f = f || "toggle" === e, e === (p ? "hide" : "show")) {
                if ("show" !== e || !q || void 0 === q[d]) continue;
                p = !0
            }
            n[d] = q && q[d] || r.style(a, d)
        }
        if (i = !r.isEmptyObject(b), i || !r.isEmptyObject(n)) {
            l && 1 === a.nodeType && (c.overflow = [o.overflow, o.overflowX, o.overflowY], j = q && q.display, null == j && (j = W.get(a, "display")), k = r.css(a, "display"), "none" === k && (j ? k = j : (ia([a], !0), j = a.style.display || j, k = r.css(a, "display"), ia([a]))), ("inline" === k || "inline-block" === k && null != j) && "none" === r.css(a, "float") && (i || (m.done(function () {
                o.display = j
            }), null == j && (k = o.display, j = "none" === k ? "" : k)), o.display = "inline-block")), c.overflow && (o.overflow = "hidden", m.always(function () {
                o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2]
            })), i = !1;
            for (d in n) i || (q ? "hidden" in q && (p = q.hidden) : q = W.access(a, "fxshow", {display: j}), f && (q.hidden = !p), p && ia([a], !0), m.done(function () {
                p || ia([a]), W.remove(a, "fxshow");
                for (d in n) r.style(a, d, n[d])
            })), i = hb(p ? q[d] : 0, d, m), d in q || (q[d] = i.start, p && (i.end = i.start, i.start = 0))
        }
    }

    function jb(a, b) {
        var c, d, e, f, g;
        for (c in a) if (d = r.camelCase(c), e = b[d], f = a[c], Array.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = r.cssHooks[d], g && "expand" in g) {
            f = g.expand(f), delete a[d];
            for (c in f) c in a || (a[c] = f[c], b[c] = e)
        } else b[d] = e
    }

    function kb(a, b, c) {
        var d, e, f = 0, g = kb.prefilters.length, h = r.Deferred().always(function () {
            delete i.elem
        }), i = function () {
            if (e) return !1;
            for (var b = ab || fb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; g < i; g++) j.tweens[g].run(f);
            return h.notifyWith(a, [j, f, c]), f < 1 && i ? c : (i || h.notifyWith(a, [j, 1, 0]), h.resolveWith(a, [j]), !1)
        }, j = h.promise({
            elem: a,
            props: r.extend({}, b),
            opts: r.extend(!0, {specialEasing: {}, easing: r.easing._default}, c),
            originalProperties: b,
            originalOptions: c,
            startTime: ab || fb(),
            duration: c.duration,
            tweens: [],
            createTween: function (b, c) {
                var d = r.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                return j.tweens.push(d), d
            },
            stop: function (b) {
                var c = 0, d = b ? j.tweens.length : 0;
                if (e) return this;
                for (e = !0; c < d; c++) j.tweens[c].run(1);
                return b ? (h.notifyWith(a, [j, 1, 0]), h.resolveWith(a, [j, b])) : h.rejectWith(a, [j, b]), this
            }
        }), k = j.props;
        for (jb(k, j.opts.specialEasing); f < g; f++) if (d = kb.prefilters[f].call(j, a, k, j.opts)) return r.isFunction(d.stop) && (r._queueHooks(j.elem, j.opts.queue).stop = r.proxy(d.stop, d)), d;
        return r.map(k, hb, j), r.isFunction(j.opts.start) && j.opts.start.call(a, j), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always), r.fx.timer(r.extend(i, {
            elem: a,
            anim: j,
            queue: j.opts.queue
        })), j
    }

    r.Animation = r.extend(kb, {
        tweeners: {
            "*": [function (a, b) {
                var c = this.createTween(a, b);
                return fa(c.elem, a, ba.exec(b), c), c
            }]
        }, tweener: function (a, b) {
            r.isFunction(a) ? (b = a, a = ["*"]) : a = a.match(L);
            for (var c, d = 0, e = a.length; d < e; d++) c = a[d], kb.tweeners[c] = kb.tweeners[c] || [], kb.tweeners[c].unshift(b)
        }, prefilters: [ib], prefilter: function (a, b) {
            b ? kb.prefilters.unshift(a) : kb.prefilters.push(a)
        }
    }), r.speed = function (a, b, c) {
        var d = a && "object" == typeof a ? r.extend({}, a) : {
            complete: c || !c && b || r.isFunction(a) && a,
            duration: a,
            easing: c && b || b && !r.isFunction(b) && b
        };
        return r.fx.off ? d.duration = 0 : "number" != typeof d.duration && (d.duration in r.fx.speeds ? d.duration = r.fx.speeds[d.duration] : d.duration = r.fx.speeds._default), null != d.queue && d.queue !== !0 || (d.queue = "fx"), d.old = d.complete, d.complete = function () {
            r.isFunction(d.old) && d.old.call(this), d.queue && r.dequeue(this, d.queue)
        }, d
    }, r.fn.extend({
        fadeTo: function (a, b, c, d) {
            return this.filter(da).css("opacity", 0).show().end().animate({opacity: b}, a, c, d)
        }, animate: function (a, b, c, d) {
            var e = r.isEmptyObject(a), f = r.speed(b, c, d), g = function () {
                var b = kb(this, r.extend({}, a), f);
                (e || W.get(this, "finish")) && b.stop(!0)
            };
            return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g)
        }, stop: function (a, b, c) {
            var d = function (a) {
                var b = a.stop;
                delete a.stop, b(c)
            };
            return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function () {
                var b = !0, e = null != a && a + "queueHooks", f = r.timers, g = W.get(this);
                if (e) g[e] && g[e].stop && d(g[e]); else for (e in g) g[e] && g[e].stop && db.test(e) && d(g[e]);
                for (e = f.length; e--;) f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1));
                !b && c || r.dequeue(this, a)
            })
        }, finish: function (a) {
            return a !== !1 && (a = a || "fx"), this.each(function () {
                var b, c = W.get(this), d = c[a + "queue"], e = c[a + "queueHooks"], f = r.timers, g = d ? d.length : 0;
                for (c.finish = !0, r.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;) f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1));
                for (b = 0; b < g; b++) d[b] && d[b].finish && d[b].finish.call(this);
                delete c.finish
            })
        }
    }), r.each(["toggle", "show", "hide"], function (a, b) {
        var c = r.fn[b];
        r.fn[b] = function (a, d, e) {
            return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(gb(b, !0), a, d, e)
        }
    }), r.each({
        slideDown: gb("show"),
        slideUp: gb("hide"),
        slideToggle: gb("toggle"),
        fadeIn: {opacity: "show"},
        fadeOut: {opacity: "hide"},
        fadeToggle: {opacity: "toggle"}
    }, function (a, b) {
        r.fn[a] = function (a, c, d) {
            return this.animate(b, a, c, d)
        }
    }), r.timers = [], r.fx.tick = function () {
        var a, b = 0, c = r.timers;
        for (ab = r.now(); b < c.length; b++) a = c[b], a() || c[b] !== a || c.splice(b--, 1);
        c.length || r.fx.stop(), ab = void 0
    }, r.fx.timer = function (a) {
        r.timers.push(a), r.fx.start()
    }, r.fx.interval = 13, r.fx.start = function () {
        bb || (bb = !0, eb())
    }, r.fx.stop = function () {
        bb = null
    }, r.fx.speeds = {slow: 600, fast: 200, _default: 400}, r.fn.delay = function (b, c) {
        return b = r.fx ? r.fx.speeds[b] || b : b, c = c || "fx", this.queue(c, function (c, d) {
            var e = a.setTimeout(c, b);
            d.stop = function () {
                a.clearTimeout(e)
            }
        })
    }, function () {
        var a = d.createElement("input"), b = d.createElement("select"), c = b.appendChild(d.createElement("option"));
        a.type = "checkbox", o.checkOn = "" !== a.value, o.optSelected = c.selected, a = d.createElement("input"), a.value = "t", a.type = "radio", o.radioValue = "t" === a.value
    }();
    var lb, mb = r.expr.attrHandle;
    r.fn.extend({
        attr: function (a, b) {
            return T(this, r.attr, a, b, arguments.length > 1)
        }, removeAttr: function (a) {
            return this.each(function () {
                r.removeAttr(this, a)
            })
        }
    }), r.extend({
        attr: function (a, b, c) {
            var d, e, f = a.nodeType;
            if (3 !== f && 8 !== f && 2 !== f) return "undefined" == typeof a.getAttribute ? r.prop(a, b, c) : (1 === f && r.isXMLDoc(a) || (e = r.attrHooks[b.toLowerCase()] || (r.expr.match.bool.test(b) ? lb : void 0)), void 0 !== c ? null === c ? void r.removeAttr(a, b) : e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : (a.setAttribute(b, c + ""), c) : e && "get" in e && null !== (d = e.get(a, b)) ? d : (d = r.find.attr(a, b),
                null == d ? void 0 : d))
        }, attrHooks: {
            type: {
                set: function (a, b) {
                    if (!o.radioValue && "radio" === b && B(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b), c && (a.value = c), b
                    }
                }
            }
        }, removeAttr: function (a, b) {
            var c, d = 0, e = b && b.match(L);
            if (e && 1 === a.nodeType) while (c = e[d++]) a.removeAttribute(c)
        }
    }), lb = {
        set: function (a, b, c) {
            return b === !1 ? r.removeAttr(a, c) : a.setAttribute(c, c), c
        }
    }, r.each(r.expr.match.bool.source.match(/\w+/g), function (a, b) {
        var c = mb[b] || r.find.attr;
        mb[b] = function (a, b, d) {
            var e, f, g = b.toLowerCase();
            return d || (f = mb[g], mb[g] = e, e = null != c(a, b, d) ? g : null, mb[g] = f), e
        }
    });
    var nb = /^(?:input|select|textarea|button)$/i, ob = /^(?:a|area)$/i;
    r.fn.extend({
        prop: function (a, b) {
            return T(this, r.prop, a, b, arguments.length > 1)
        }, removeProp: function (a) {
            return this.each(function () {
                delete this[r.propFix[a] || a]
            })
        }
    }), r.extend({
        prop: function (a, b, c) {
            var d, e, f = a.nodeType;
            if (3 !== f && 8 !== f && 2 !== f) return 1 === f && r.isXMLDoc(a) || (b = r.propFix[b] || b, e = r.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b]
        }, propHooks: {
            tabIndex: {
                get: function (a) {
                    var b = r.find.attr(a, "tabindex");
                    return b ? parseInt(b, 10) : nb.test(a.nodeName) || ob.test(a.nodeName) && a.href ? 0 : -1
                }
            }
        }, propFix: {"for": "htmlFor", "class": "className"}
    }), o.optSelected || (r.propHooks.selected = {
        get: function (a) {
            var b = a.parentNode;
            return b && b.parentNode && b.parentNode.selectedIndex, null
        }, set: function (a) {
            var b = a.parentNode;
            b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex)
        }
    }), r.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
        r.propFix[this.toLowerCase()] = this
    });

    function pb(a) {
        var b = a.match(L) || [];
        return b.join(" ")
    }

    function qb(a) {
        return a.getAttribute && a.getAttribute("class") || ""
    }

    r.fn.extend({
        addClass: function (a) {
            var b, c, d, e, f, g, h, i = 0;
            if (r.isFunction(a)) return this.each(function (b) {
                r(this).addClass(a.call(this, b, qb(this)))
            });
            if ("string" == typeof a && a) {
                b = a.match(L) || [];
                while (c = this[i++]) if (e = qb(c), d = 1 === c.nodeType && " " + pb(e) + " ") {
                    g = 0;
                    while (f = b[g++]) d.indexOf(" " + f + " ") < 0 && (d += f + " ");
                    h = pb(d), e !== h && c.setAttribute("class", h)
                }
            }
            return this
        }, removeClass: function (a) {
            var b, c, d, e, f, g, h, i = 0;
            if (r.isFunction(a)) return this.each(function (b) {
                r(this).removeClass(a.call(this, b, qb(this)))
            });
            if (!arguments.length) return this.attr("class", "");
            if ("string" == typeof a && a) {
                b = a.match(L) || [];
                while (c = this[i++]) if (e = qb(c), d = 1 === c.nodeType && " " + pb(e) + " ") {
                    g = 0;
                    while (f = b[g++]) while (d.indexOf(" " + f + " ") > -1) d = d.replace(" " + f + " ", " ");
                    h = pb(d), e !== h && c.setAttribute("class", h)
                }
            }
            return this
        }, toggleClass: function (a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : r.isFunction(a) ? this.each(function (c) {
                r(this).toggleClass(a.call(this, c, qb(this), b), b)
            }) : this.each(function () {
                var b, d, e, f;
                if ("string" === c) {
                    d = 0, e = r(this), f = a.match(L) || [];
                    while (b = f[d++]) e.hasClass(b) ? e.removeClass(b) : e.addClass(b)
                } else void 0 !== a && "boolean" !== c || (b = qb(this), b && W.set(this, "__className__", b), this.setAttribute && this.setAttribute("class", b || a === !1 ? "" : W.get(this, "__className__") || ""))
            })
        }, hasClass: function (a) {
            var b, c, d = 0;
            b = " " + a + " ";
            while (c = this[d++]) if (1 === c.nodeType && (" " + pb(qb(c)) + " ").indexOf(b) > -1) return !0;
            return !1
        }
    });
    var rb = /\r/g;
    r.fn.extend({
        val: function (a) {
            var b, c, d, e = this[0];
            {
                if (arguments.length) return d = r.isFunction(a), this.each(function (c) {
                    var e;
                    1 === this.nodeType && (e = d ? a.call(this, c, r(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : Array.isArray(e) && (e = r.map(e, function (a) {
                        return null == a ? "" : a + ""
                    })), b = r.valHooks[this.type] || r.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e))
                });
                if (e) return b = r.valHooks[e.type] || r.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(rb, "") : null == c ? "" : c)
            }
        }
    }), r.extend({
        valHooks: {
            option: {
                get: function (a) {
                    var b = r.find.attr(a, "value");
                    return null != b ? b : pb(r.text(a))
                }
            }, select: {
                get: function (a) {
                    var b, c, d, e = a.options, f = a.selectedIndex, g = "select-one" === a.type, h = g ? null : [],
                        i = g ? f + 1 : e.length;
                    for (d = f < 0 ? i : g ? f : 0; d < i; d++) if (c = e[d], (c.selected || d === f) && !c.disabled && (!c.parentNode.disabled || !B(c.parentNode, "optgroup"))) {
                        if (b = r(c).val(), g) return b;
                        h.push(b)
                    }
                    return h
                }, set: function (a, b) {
                    var c, d, e = a.options, f = r.makeArray(b), g = e.length;
                    while (g--) d = e[g], (d.selected = r.inArray(r.valHooks.option.get(d), f) > -1) && (c = !0);
                    return c || (a.selectedIndex = -1), f
                }
            }
        }
    }), r.each(["radio", "checkbox"], function () {
        r.valHooks[this] = {
            set: function (a, b) {
                if (Array.isArray(b)) return a.checked = r.inArray(r(a).val(), b) > -1
            }
        }, o.checkOn || (r.valHooks[this].get = function (a) {
            return null === a.getAttribute("value") ? "on" : a.value
        })
    });
    var sb = /^(?:focusinfocus|focusoutblur)$/;
    r.extend(r.event, {
        trigger: function (b, c, e, f) {
            var g, h, i, j, k, m, n, o = [e || d], p = l.call(b, "type") ? b.type : b,
                q = l.call(b, "namespace") ? b.namespace.split(".") : [];
            if (h = i = e = e || d, 3 !== e.nodeType && 8 !== e.nodeType && !sb.test(p + r.event.triggered) && (p.indexOf(".") > -1 && (q = p.split("."), p = q.shift(), q.sort()), k = p.indexOf(":") < 0 && "on" + p, b = b[r.expando] ? b : new r.Event(p, "object" == typeof b && b), b.isTrigger = f ? 2 : 3, b.namespace = q.join("."), b.rnamespace = b.namespace ? new RegExp("(^|\\.)" + q.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = e), c = null == c ? [b] : r.makeArray(c, [b]), n = r.event.special[p] || {}, f || !n.trigger || n.trigger.apply(e, c) !== !1)) {
                if (!f && !n.noBubble && !r.isWindow(e)) {
                    for (j = n.delegateType || p, sb.test(j + p) || (h = h.parentNode); h; h = h.parentNode) o.push(h), i = h;
                    i === (e.ownerDocument || d) && o.push(i.defaultView || i.parentWindow || a)
                }
                g = 0;
                while ((h = o[g++]) && !b.isPropagationStopped()) b.type = g > 1 ? j : n.bindType || p, m = (W.get(h, "events") || {})[b.type] && W.get(h, "handle"), m && m.apply(h, c), m = k && h[k], m && m.apply && U(h) && (b.result = m.apply(h, c), b.result === !1 && b.preventDefault());
                return b.type = p, f || b.isDefaultPrevented() || n._default && n._default.apply(o.pop(), c) !== !1 || !U(e) || k && r.isFunction(e[p]) && !r.isWindow(e) && (i = e[k], i && (e[k] = null), r.event.triggered = p, e[p](), r.event.triggered = void 0, i && (e[k] = i)), b.result
            }
        }, simulate: function (a, b, c) {
            var d = r.extend(new r.Event, c, {type: a, isSimulated: !0});
            r.event.trigger(d, null, b)
        }
    }), r.fn.extend({
        trigger: function (a, b) {
            return this.each(function () {
                r.event.trigger(a, b, this)
            })
        }, triggerHandler: function (a, b) {
            var c = this[0];
            if (c) return r.event.trigger(a, b, c, !0)
        }
    }), r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (a, b) {
        r.fn[b] = function (a, c) {
            return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
        }
    }), r.fn.extend({
        hover: function (a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        }
    }), o.focusin = "onfocusin" in a, o.focusin || r.each({focus: "focusin", blur: "focusout"}, function (a, b) {
        var c = function (a) {
            r.event.simulate(b, a.target, r.event.fix(a))
        };
        r.event.special[b] = {
            setup: function () {
                var d = this.ownerDocument || this, e = W.access(d, b);
                e || d.addEventListener(a, c, !0), W.access(d, b, (e || 0) + 1)
            }, teardown: function () {
                var d = this.ownerDocument || this, e = W.access(d, b) - 1;
                e ? W.access(d, b, e) : (d.removeEventListener(a, c, !0), W.remove(d, b))
            }
        }
    });
    var tb = a.location, ub = r.now(), vb = /\?/;
    r.parseXML = function (b) {
        var c;
        if (!b || "string" != typeof b) return null;
        try {
            c = (new a.DOMParser).parseFromString(b, "text/xml")
        } catch (d) {
            c = void 0
        }
        return c && !c.getElementsByTagName("parsererror").length || r.error("Invalid XML: " + b), c
    };
    var wb = /\[\]$/, xb = /\r?\n/g, yb = /^(?:submit|button|image|reset|file)$/i,
        zb = /^(?:input|select|textarea|keygen)/i;

    function Ab(a, b, c, d) {
        var e;
        if (Array.isArray(b)) r.each(b, function (b, e) {
            c || wb.test(a) ? d(a, e) : Ab(a + "[" + ("object" == typeof e && null != e ? b : "") + "]", e, c, d)
        }); else if (c || "object" !== r.type(b)) d(a, b); else for (e in b) Ab(a + "[" + e + "]", b[e], c, d)
    }

    r.param = function (a, b) {
        var c, d = [], e = function (a, b) {
            var c = r.isFunction(b) ? b() : b;
            d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(null == c ? "" : c)
        };
        if (Array.isArray(a) || a.jquery && !r.isPlainObject(a)) r.each(a, function () {
            e(this.name, this.value)
        }); else for (c in a) Ab(c, a[c], b, e);
        return d.join("&")
    }, r.fn.extend({
        serialize: function () {
            return r.param(this.serializeArray())
        }, serializeArray: function () {
            return this.map(function () {
                var a = r.prop(this, "elements");
                return a ? r.makeArray(a) : this
            }).filter(function () {
                var a = this.type;
                return this.name && !r(this).is(":disabled") && zb.test(this.nodeName) && !yb.test(a) && (this.checked || !ja.test(a))
            }).map(function (a, b) {
                var c = r(this).val();
                return null == c ? null : Array.isArray(c) ? r.map(c, function (a) {
                    return {name: b.name, value: a.replace(xb, "\r\n")}
                }) : {name: b.name, value: c.replace(xb, "\r\n")}
            }).get()
        }
    });
    var Bb = /%20/g, Cb = /#.*$/, Db = /([?&])_=[^&]*/, Eb = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        Fb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Gb = /^(?:GET|HEAD)$/, Hb = /^\/\//, Ib = {},
        Jb = {}, Kb = "*/".concat("*"), Lb = d.createElement("a");
    Lb.href = tb.href;

    function Mb(a) {
        return function (b, c) {
            "string" != typeof b && (c = b, b = "*");
            var d, e = 0, f = b.toLowerCase().match(L) || [];
            if (r.isFunction(c)) while (d = f[e++]) "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c)
        }
    }

    function Nb(a, b, c, d) {
        var e = {}, f = a === Jb;

        function g(h) {
            var i;
            return e[h] = !0, r.each(a[h] || [], function (a, h) {
                var j = h(b, c, d);
                return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1)
            }), i
        }

        return g(b.dataTypes[0]) || !e["*"] && g("*")
    }

    function Ob(a, b) {
        var c, d, e = r.ajaxSettings.flatOptions || {};
        for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
        return d && r.extend(!0, a, d), a
    }

    function Pb(a, b, c) {
        var d, e, f, g, h = a.contents, i = a.dataTypes;
        while ("*" === i[0]) i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));
        if (d) for (e in h) if (h[e] && h[e].test(d)) {
            i.unshift(e);
            break
        }
        if (i[0] in c) f = i[0]; else {
            for (e in c) {
                if (!i[0] || a.converters[e + " " + i[0]]) {
                    f = e;
                    break
                }
                g || (g = e)
            }
            f = f || g
        }
        if (f) return f !== i[0] && i.unshift(f), c[f]
    }

    function Qb(a, b, c, d) {
        var e, f, g, h, i, j = {}, k = a.dataTypes.slice();
        if (k[1]) for (g in a.converters) j[g.toLowerCase()] = a.converters[g];
        f = k.shift();
        while (f) if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift()) if ("*" === f) f = i; else if ("*" !== i && i !== f) {
            if (g = j[i + " " + f] || j["* " + f], !g) for (e in j) if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));
                break
            }
            if (g !== !0) if (g && a["throws"]) b = g(b); else try {
                b = g(b)
            } catch (l) {
                return {state: "parsererror", error: g ? l : "No conversion from " + i + " to " + f}
            }
        }
        return {state: "success", data: b}
    }

    r.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: tb.href,
            type: "GET",
            isLocal: Fb.test(tb.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Kb,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/},
            responseFields: {xml: "responseXML", text: "responseText", json: "responseJSON"},
            converters: {"* text": String, "text html": !0, "text json": JSON.parse, "text xml": r.parseXML},
            flatOptions: {url: !0, context: !0}
        },
        ajaxSetup: function (a, b) {
            return b ? Ob(Ob(a, r.ajaxSettings), b) : Ob(r.ajaxSettings, a)
        },
        ajaxPrefilter: Mb(Ib),
        ajaxTransport: Mb(Jb),
        ajax: function (b, c) {
            "object" == typeof b && (c = b, b = void 0), c = c || {};
            var e, f, g, h, i, j, k, l, m, n, o = r.ajaxSetup({}, c), p = o.context || o,
                q = o.context && (p.nodeType || p.jquery) ? r(p) : r.event, s = r.Deferred(),
                t = r.Callbacks("once memory"), u = o.statusCode || {}, v = {}, w = {}, x = "canceled", y = {
                    readyState: 0, getResponseHeader: function (a) {
                        var b;
                        if (k) {
                            if (!h) {
                                h = {};
                                while (b = Eb.exec(g)) h[b[1].toLowerCase()] = b[2]
                            }
                            b = h[a.toLowerCase()]
                        }
                        return null == b ? null : b
                    }, getAllResponseHeaders: function () {
                        return k ? g : null
                    }, setRequestHeader: function (a, b) {
                        return null == k && (a = w[a.toLowerCase()] = w[a.toLowerCase()] || a, v[a] = b), this
                    }, overrideMimeType: function (a) {
                        return null == k && (o.mimeType = a), this
                    }, statusCode: function (a) {
                        var b;
                        if (a) if (k) y.always(a[y.status]); else for (b in a) u[b] = [u[b], a[b]];
                        return this
                    }, abort: function (a) {
                        var b = a || x;
                        return e && e.abort(b), A(0, b), this
                    }
                };
            if (s.promise(y), o.url = ((b || o.url || tb.href) + "").replace(Hb, tb.protocol + "//"), o.type = c.method || c.type || o.method || o.type, o.dataTypes = (o.dataType || "*").toLowerCase().match(L) || [""], null == o.crossDomain) {
                j = d.createElement("a");
                try {
                    j.href = o.url, j.href = j.href, o.crossDomain = Lb.protocol + "//" + Lb.host != j.protocol + "//" + j.host
                } catch (z) {
                    o.crossDomain = !0
                }
            }
            if (o.data && o.processData && "string" != typeof o.data && (o.data = r.param(o.data, o.traditional)), Nb(Ib, o, c, y), k) return y;
            l = r.event && o.global, l && 0 === r.active++ && r.event.trigger("ajaxStart"), o.type = o.type.toUpperCase(), o.hasContent = !Gb.test(o.type), f = o.url.replace(Cb, ""), o.hasContent ? o.data && o.processData && 0 === (o.contentType || "").indexOf("application/x-www-form-urlencoded") && (o.data = o.data.replace(Bb, "+")) : (n = o.url.slice(f.length), o.data && (f += (vb.test(f) ? "&" : "?") + o.data, delete o.data), o.cache === !1 && (f = f.replace(Db, "$1"), n = (vb.test(f) ? "&" : "?") + "_=" + ub++ + n), o.url = f + n), o.ifModified && (r.lastModified[f] && y.setRequestHeader("If-Modified-Since", r.lastModified[f]), r.etag[f] && y.setRequestHeader("If-None-Match", r.etag[f])), (o.data && o.hasContent && o.contentType !== !1 || c.contentType) && y.setRequestHeader("Content-Type", o.contentType), y.setRequestHeader("Accept", o.dataTypes[0] && o.accepts[o.dataTypes[0]] ? o.accepts[o.dataTypes[0]] + ("*" !== o.dataTypes[0] ? ", " + Kb + "; q=0.01" : "") : o.accepts["*"]);
            for (m in o.headers) y.setRequestHeader(m, o.headers[m]);
            if (o.beforeSend && (o.beforeSend.call(p, y, o) === !1 || k)) return y.abort();
            if (x = "abort", t.add(o.complete), y.done(o.success), y.fail(o.error), e = Nb(Jb, o, c, y)) {
                if (y.readyState = 1, l && q.trigger("ajaxSend", [y, o]), k) return y;
                o.async && o.timeout > 0 && (i = a.setTimeout(function () {
                    y.abort("timeout")
                }, o.timeout));
                try {
                    k = !1, e.send(v, A)
                } catch (z) {
                    if (k) throw z;
                    A(-1, z)
                }
            } else A(-1, "No Transport");

            function A(b, c, d, h) {
                var j, m, n, v, w, x = c;
                k || (k = !0, i && a.clearTimeout(i), e = void 0, g = h || "", y.readyState = b > 0 ? 4 : 0, j = b >= 200 && b < 300 || 304 === b, d && (v = Pb(o, y, d)), v = Qb(o, v, y, j), j ? (o.ifModified && (w = y.getResponseHeader("Last-Modified"), w && (r.lastModified[f] = w), w = y.getResponseHeader("etag"), w && (r.etag[f] = w)), 204 === b || "HEAD" === o.type ? x = "nocontent" : 304 === b ? x = "notmodified" : (x = v.state, m = v.data, n = v.error, j = !n)) : (n = x, !b && x || (x = "error", b < 0 && (b = 0))), y.status = b, y.statusText = (c || x) + "", j ? s.resolveWith(p, [m, x, y]) : s.rejectWith(p, [y, x, n]), y.statusCode(u), u = void 0, l && q.trigger(j ? "ajaxSuccess" : "ajaxError", [y, o, j ? m : n]), t.fireWith(p, [y, x]), l && (q.trigger("ajaxComplete", [y, o]), --r.active || r.event.trigger("ajaxStop")))
            }

            return y
        },
        getJSON: function (a, b, c) {
            return r.get(a, b, c, "json")
        },
        getScript: function (a, b) {
            return r.get(a, void 0, b, "script")
        }
    }), r.each(["get", "post"], function (a, b) {
        r[b] = function (a, c, d, e) {
            return r.isFunction(c) && (e = e || d, d = c, c = void 0), r.ajax(r.extend({
                url: a,
                type: b,
                dataType: e,
                data: c,
                success: d
            }, r.isPlainObject(a) && a))
        }
    }), r._evalUrl = function (a) {
        return r.ajax({url: a, type: "GET", dataType: "script", cache: !0, async: !1, global: !1, "throws": !0})
    }, r.fn.extend({
        wrapAll: function (a) {
            var b;
            return this[0] && (r.isFunction(a) && (a = a.call(this[0])), b = r(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), b.map(function () {
                var a = this;
                while (a.firstElementChild) a = a.firstElementChild;
                return a
            }).append(this)), this
        }, wrapInner: function (a) {
            return r.isFunction(a) ? this.each(function (b) {
                r(this).wrapInner(a.call(this, b))
            }) : this.each(function () {
                var b = r(this), c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        }, wrap: function (a) {
            var b = r.isFunction(a);
            return this.each(function (c) {
                r(this).wrapAll(b ? a.call(this, c) : a)
            })
        }, unwrap: function (a) {
            return this.parent(a).not("body").each(function () {
                r(this).replaceWith(this.childNodes)
            }), this
        }
    }), r.expr.pseudos.hidden = function (a) {
        return !r.expr.pseudos.visible(a)
    }, r.expr.pseudos.visible = function (a) {
        return !!(a.offsetWidth || a.offsetHeight || a.getClientRects().length)
    }, r.ajaxSettings.xhr = function () {
        try {
            return new a.XMLHttpRequest
        } catch (b) {
        }
    };
    var Rb = {0: 200, 1223: 204}, Sb = r.ajaxSettings.xhr();
    o.cors = !!Sb && "withCredentials" in Sb, o.ajax = Sb = !!Sb, r.ajaxTransport(function (b) {
        var c, d;
        if (o.cors || Sb && !b.crossDomain) return {
            send: function (e, f) {
                var g, h = b.xhr();
                if (h.open(b.type, b.url, b.async, b.username, b.password), b.xhrFields) for (g in b.xhrFields) h[g] = b.xhrFields[g];
                b.mimeType && h.overrideMimeType && h.overrideMimeType(b.mimeType), b.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest");
                for (g in e) h.setRequestHeader(g, e[g]);
                c = function (a) {
                    return function () {
                        c && (c = d = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, "abort" === a ? h.abort() : "error" === a ? "number" != typeof h.status ? f(0, "error") : f(h.status, h.statusText) : f(Rb[h.status] || h.status, h.statusText, "text" !== (h.responseType || "text") || "string" != typeof h.responseText ? {binary: h.response} : {text: h.responseText}, h.getAllResponseHeaders()))
                    }
                }, h.onload = c(), d = h.onerror = c("error"), void 0 !== h.onabort ? h.onabort = d : h.onreadystatechange = function () {
                    4 === h.readyState && a.setTimeout(function () {
                        c && d()
                    })
                }, c = c("abort");
                try {
                    h.send(b.hasContent && b.data || null)
                } catch (i) {
                    if (c) throw i
                }
            }, abort: function () {
                c && c()
            }
        }
    }), r.ajaxPrefilter(function (a) {
        a.crossDomain && (a.contents.script = !1)
    }), r.ajaxSetup({
        accepts: {script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},
        contents: {script: /\b(?:java|ecma)script\b/},
        converters: {
            "text script": function (a) {
                return r.globalEval(a), a
            }
        }
    }), r.ajaxPrefilter("script", function (a) {
        void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET")
    }), r.ajaxTransport("script", function (a) {
        if (a.crossDomain) {
            var b, c;
            return {
                send: function (e, f) {
                    b = r("<script>").prop({charset: a.scriptCharset, src: a.url}).on("load error", c = function (a) {
                        b.remove(), c = null, a && f("error" === a.type ? 404 : 200, a.type)
                    }), d.head.appendChild(b[0])
                }, abort: function () {
                    c && c()
                }
            }
        }
    });
    var Tb = [], Ub = /(=)\?(?=&|$)|\?\?/;
    r.ajaxSetup({
        jsonp: "callback", jsonpCallback: function () {
            var a = Tb.pop() || r.expando + "_" + ub++;
            return this[a] = !0, a
        }
    }), r.ajaxPrefilter("json jsonp", function (b, c, d) {
        var e, f, g,
            h = b.jsonp !== !1 && (Ub.test(b.url) ? "url" : "string" == typeof b.data && 0 === (b.contentType || "").indexOf("application/x-www-form-urlencoded") && Ub.test(b.data) && "data");
        if (h || "jsonp" === b.dataTypes[0]) return e = b.jsonpCallback = r.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(Ub, "$1" + e) : b.jsonp !== !1 && (b.url += (vb.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function () {
            return g || r.error(e + " was not called"), g[0]
        }, b.dataTypes[0] = "json", f = a[e], a[e] = function () {
            g = arguments
        }, d.always(function () {
            void 0 === f ? r(a).removeProp(e) : a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Tb.push(e)), g && r.isFunction(f) && f(g[0]), g = f = void 0
        }), "script"
    }), o.createHTMLDocument = function () {
        var a = d.implementation.createHTMLDocument("").body;
        return a.innerHTML = "<form></form><form></form>", 2 === a.childNodes.length
    }(), r.parseHTML = function (a, b, c) {
        if ("string" != typeof a) return [];
        "boolean" == typeof b && (c = b, b = !1);
        var e, f, g;
        return b || (o.createHTMLDocument ? (b = d.implementation.createHTMLDocument(""), e = b.createElement("base"), e.href = d.location.href, b.head.appendChild(e)) : b = d), f = C.exec(a), g = !c && [], f ? [b.createElement(f[1])] : (f = qa([a], b, g), g && g.length && r(g).remove(), r.merge([], f.childNodes))
    }, r.fn.load = function (a, b, c) {
        var d, e, f, g = this, h = a.indexOf(" ");
        return h > -1 && (d = pb(a.slice(h)), a = a.slice(0, h)), r.isFunction(b) ? (c = b, b = void 0) : b && "object" == typeof b && (e = "POST"), g.length > 0 && r.ajax({
            url: a,
            type: e || "GET",
            dataType: "html",
            data: b
        }).done(function (a) {
            f = arguments, g.html(d ? r("<div>").append(r.parseHTML(a)).find(d) : a)
        }).always(c && function (a, b) {
            g.each(function () {
                c.apply(this, f || [a.responseText, b, a])
            })
        }), this
    }, r.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (a, b) {
        r.fn[b] = function (a) {
            return this.on(b, a)
        }
    }), r.expr.pseudos.animated = function (a) {
        return r.grep(r.timers, function (b) {
            return a === b.elem
        }).length
    }, r.offset = {
        setOffset: function (a, b, c) {
            var d, e, f, g, h, i, j, k = r.css(a, "position"), l = r(a), m = {};
            "static" === k && (a.style.position = "relative"), h = l.offset(), f = r.css(a, "top"), i = r.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), r.isFunction(b) && (b = b.call(a, c, r.extend({}, h))), null != b.top && (m.top = b.top - h.top + g), null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m)
        }
    }, r.fn.extend({
        offset: function (a) {
            if (arguments.length) return void 0 === a ? this : this.each(function (b) {
                r.offset.setOffset(this, a, b)
            });
            var b, c, d, e, f = this[0];
            if (f) return f.getClientRects().length ? (d = f.getBoundingClientRect(), b = f.ownerDocument, c = b.documentElement, e = b.defaultView, {
                top: d.top + e.pageYOffset - c.clientTop,
                left: d.left + e.pageXOffset - c.clientLeft
            }) : {top: 0, left: 0}
        }, position: function () {
            if (this[0]) {
                var a, b, c = this[0], d = {top: 0, left: 0};
                return "fixed" === r.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), B(a[0], "html") || (d = a.offset()), d = {
                    top: d.top + r.css(a[0], "borderTopWidth", !0),
                    left: d.left + r.css(a[0], "borderLeftWidth", !0)
                }), {top: b.top - d.top - r.css(c, "marginTop", !0), left: b.left - d.left - r.css(c, "marginLeft", !0)}
            }
        }, offsetParent: function () {
            return this.map(function () {
                var a = this.offsetParent;
                while (a && "static" === r.css(a, "position")) a = a.offsetParent;
                return a || ra
            })
        }
    }), r.each({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function (a, b) {
        var c = "pageYOffset" === b;
        r.fn[a] = function (d) {
            return T(this, function (a, d, e) {
                var f;
                return r.isWindow(a) ? f = a : 9 === a.nodeType && (f = a.defaultView), void 0 === e ? f ? f[b] : a[d] : void (f ? f.scrollTo(c ? f.pageXOffset : e, c ? e : f.pageYOffset) : a[d] = e)
            }, a, d, arguments.length)
        }
    }), r.each(["top", "left"], function (a, b) {
        r.cssHooks[b] = Pa(o.pixelPosition, function (a, c) {
            if (c) return c = Oa(a, b), Ma.test(c) ? r(a).position()[b] + "px" : c
        })
    }), r.each({Height: "height", Width: "width"}, function (a, b) {
        r.each({padding: "inner" + a, content: b, "": "outer" + a}, function (c, d) {
            r.fn[d] = function (e, f) {
                var g = arguments.length && (c || "boolean" != typeof e),
                    h = c || (e === !0 || f === !0 ? "margin" : "border");
                return T(this, function (b, c, e) {
                    var f;
                    return r.isWindow(b) ? 0 === d.indexOf("outer") ? b["inner" + a] : b.document.documentElement["client" + a] : 9 === b.nodeType ? (f = b.documentElement, Math.max(b.body["scroll" + a], f["scroll" + a], b.body["offset" + a], f["offset" + a], f["client" + a])) : void 0 === e ? r.css(b, c, h) : r.style(b, c, e, h)
                }, b, g ? e : void 0, g)
            }
        })
    }), r.fn.extend({
        bind: function (a, b, c) {
            return this.on(a, null, b, c)
        }, unbind: function (a, b) {
            return this.off(a, null, b)
        }, delegate: function (a, b, c, d) {
            return this.on(b, a, c, d)
        }, undelegate: function (a, b, c) {
            return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c)
        }
    }), r.holdReady = function (a) {
        a ? r.readyWait++ : r.ready(!0)
    }, r.isArray = Array.isArray, r.parseJSON = JSON.parse, r.nodeName = B, "function" == typeof define && define.amd && define("jquery", [], function () {
        return r
    });
    var Vb = a.jQuery, Wb = a.$;
    return r.noConflict = function (b) {
        return a.$ === r && (a.$ = Wb), b && a.jQuery === r && (a.jQuery = Vb), r
    }, b || (a.jQuery = a.$ = r), r
});

/*!
 * @copyright Copyright (c) 2017 IcoMoon.io
 * @license   Licensed under MIT license
 *            See https://github.com/Keyamoon/svgxuse
 * @version   1.2.6
 */
(function () {
    if ("undefined" !== typeof window && window.addEventListener) {
        var e = Object.create(null), l, d = function () {
            clearTimeout(l);
            l = setTimeout(n, 100)
        }, m = function () {
        }, t = function () {
            window.addEventListener("resize", d, !1);
            window.addEventListener("orientationchange", d, !1);
            if (window.MutationObserver) {
                var k = new MutationObserver(d);
                k.observe(document.documentElement, {childList: !0, subtree: !0, attributes: !0});
                m = function () {
                    try {
                        k.disconnect(), window.removeEventListener("resize", d, !1), window.removeEventListener("orientationchange",
                            d, !1)
                    } catch (v) {
                    }
                }
            } else document.documentElement.addEventListener("DOMSubtreeModified", d, !1), m = function () {
                document.documentElement.removeEventListener("DOMSubtreeModified", d, !1);
                window.removeEventListener("resize", d, !1);
                window.removeEventListener("orientationchange", d, !1)
            }
        }, u = function (k) {
            function e(a) {
                if (void 0 !== a.protocol) var c = a; else c = document.createElement("a"), c.href = a;
                return c.protocol.replace(/:/g, "") + c.host
            }

            if (window.XMLHttpRequest) {
                var d = new XMLHttpRequest;
                var m = e(location);
                k = e(k);
                d = void 0 ===
                d.withCredentials && "" !== k && k !== m ? XDomainRequest || void 0 : XMLHttpRequest
            }
            return d
        };
        var n = function () {
            function d() {
                --q;
                0 === q && (m(), t())
            }

            function l(a) {
                return function () {
                    !0 !== e[a.base] && (a.useEl.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", "#" + a.hash), a.useEl.hasAttribute("href") && a.useEl.setAttribute("href", "#" + a.hash))
                }
            }

            function p(a) {
                return function () {
                    var c = document.body, b = document.createElement("x");
                    a.onload = null;
                    b.innerHTML = a.responseText;
                    if (b = b.getElementsByTagName("svg")[0]) b.setAttribute("aria-hidden",
                        "true"), b.style.position = "absolute", b.style.width = 0, b.style.height = 0, b.style.overflow = "hidden", c.insertBefore(b, c.firstChild);
                    d()
                }
            }

            function n(a) {
                return function () {
                    a.onerror = null;
                    a.ontimeout = null;
                    d()
                }
            }

            var a, c, q = 0;
            m();
            var f = document.getElementsByTagName("use");
            for (c = 0; c < f.length; c += 1) {
                try {
                    var g = f[c].getBoundingClientRect()
                } catch (w) {
                    g = !1
                }
                var h = (a = f[c].getAttribute("href") || f[c].getAttributeNS("http://www.w3.org/1999/xlink", "href") || f[c].getAttribute("xlink:href")) && a.split ? a.split("#") : ["", ""];
                var b =
                    h[0];
                h = h[1];
                var r = g && 0 === g.left && 0 === g.right && 0 === g.top && 0 === g.bottom;
                g && 0 === g.width && 0 === g.height && !r ? (f[c].hasAttribute("href") && f[c].setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", a), b.length && (a = e[b], !0 !== a && setTimeout(l({
                    useEl: f[c],
                    base: b,
                    hash: h
                }), 0), void 0 === a && (h = u(b), void 0 !== h && (a = new h, e[b] = a, a.onload = p(a), a.onerror = n(a), a.ontimeout = n(a), a.open("GET", b), a.send(), q += 1)))) : r ? b.length && e[b] && setTimeout(l({
                    useEl: f[c],
                    base: b,
                    hash: h
                }), 0) : void 0 === e[b] ? e[b] = !0 : e[b].onload && (e[b].abort(),
                    delete e[b].onload, e[b] = !0)
            }
            f = "";
            q += 1;
            d()
        };
        var p = function () {
            window.removeEventListener("load", p, !1);
            l = setTimeout(n, 0)
        };
        "complete" !== document.readyState ? window.addEventListener("load", p, !1) : p()
    }
})();

/**
 * Minified by jsDelivr using UglifyJS v3.3.25.
 * Original file: /npm/js-cookie@2.2.0/src/js.cookie.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function (e) {
    var n = !1;
    if ("function" == typeof define && define.amd && (define(e), n = !0), "object" == typeof exports && (module.exports = e(), n = !0), !n) {
        var o = window.Cookies, t = window.Cookies = e();
        t.noConflict = function () {
            return window.Cookies = o, t
        }
    }
}(function () {
    function g() {
        for (var e = 0, n = {}; e < arguments.length; e++) {
            var o = arguments[e];
            for (var t in o) n[t] = o[t]
        }
        return n
    }

    return function e(l) {
        function C(e, n, o) {
            var t;
            if ("undefined" != typeof document) {
                if (1 < arguments.length) {
                    if ("number" == typeof (o = g({path: "/"}, C.defaults, o)).expires) {
                        var r = new Date;
                        r.setMilliseconds(r.getMilliseconds() + 864e5 * o.expires), o.expires = r
                    }
                    o.expires = o.expires ? o.expires.toUTCString() : "";
                    try {
                        t = JSON.stringify(n), /^[\{\[]/.test(t) && (n = t)
                    } catch (e) {
                    }
                    n = l.write ? l.write(n, e) : encodeURIComponent(String(n)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent), e = (e = (e = encodeURIComponent(String(e))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape);
                    var i = "";
                    for (var c in o) o[c] && (i += "; " + c, !0 !== o[c] && (i += "=" + o[c]));
                    return document.cookie = e + "=" + n + i
                }
                e || (t = {});
                for (var a = document.cookie ? document.cookie.split("; ") : [], s = /(%[0-9A-Z]{2})+/g, f = 0; f < a.length; f++) {
                    var p = a[f].split("="), d = p.slice(1).join("=");
                    this.json || '"' !== d.charAt(0) || (d = d.slice(1, -1));
                    try {
                        var u = p[0].replace(s, decodeURIComponent);
                        if (d = l.read ? l.read(d, u) : l(d, u) || d.replace(s, decodeURIComponent), this.json) try {
                            d = JSON.parse(d)
                        } catch (e) {
                        }
                        if (e === u) {
                            t = d;
                            break
                        }
                        e || (t[u] = d)
                    } catch (e) {
                    }
                }
                return t
            }
        }

        return (C.set = C).get = function (e) {
            return C.call(C, e)
        }, C.getJSON = function () {
            return C.apply({json: !0}, [].slice.call(arguments))
        }, C.defaults = {}, C.remove = function (e, n) {
            C(e, "", g(n, {expires: -1}))
        }, C.withConverter = e, C
    }(function () {
    })
});
//# sourceMappingURL=/sm/31d5cd1b58ce5e6231e4ea03a69b2801a53e76e98152bc29dc82a494ed0a1ee6.map
/*!
 * jQuery Mousewheel 3.1.13
 *
 * Copyright 2015 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
!function (a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : "object" == typeof exports ? module.exports = a : a(jQuery)
}(function (a) {
    function b(b) {
        var g = b || window.event, h = i.call(arguments, 1), j = 0, l = 0, m = 0, n = 0, o = 0, p = 0;
        if (b = a.event.fix(g), b.type = "mousewheel", "detail" in g && (m = -1 * g.detail), "wheelDelta" in g && (m = g.wheelDelta), "wheelDeltaY" in g && (m = g.wheelDeltaY), "wheelDeltaX" in g && (l = -1 * g.wheelDeltaX), "axis" in g && g.axis === g.HORIZONTAL_AXIS && (l = -1 * m, m = 0), j = 0 === m ? l : m, "deltaY" in g && (m = -1 * g.deltaY, j = m), "deltaX" in g && (l = g.deltaX, 0 === m && (j = -1 * l)), 0 !== m || 0 !== l) {
            if (1 === g.deltaMode) {
                var q = a.data(this, "mousewheel-line-height");
                j *= q, m *= q, l *= q
            } else if (2 === g.deltaMode) {
                var r = a.data(this, "mousewheel-page-height");
                j *= r, m *= r, l *= r
            }
            if (n = Math.max(Math.abs(m), Math.abs(l)), (!f || f > n) && (f = n, d(g, n) && (f /= 40)), d(g, n) && (j /= 40, l /= 40, m /= 40), j = Math[j >= 1 ? "floor" : "ceil"](j / f), l = Math[l >= 1 ? "floor" : "ceil"](l / f), m = Math[m >= 1 ? "floor" : "ceil"](m / f), k.settings.normalizeOffset && this.getBoundingClientRect) {
                var s = this.getBoundingClientRect();
                o = b.clientX - s.left, p = b.clientY - s.top
            }
            return b.deltaX = l, b.deltaY = m, b.deltaFactor = f, b.offsetX = o, b.offsetY = p, b.deltaMode = 0, h.unshift(b, j, l, m), e && clearTimeout(e), e = setTimeout(c, 200), (a.event.dispatch || a.event.handle).apply(this, h)
        }
    }

    function c() {
        f = null
    }

    function d(a, b) {
        return k.settings.adjustOldDeltas && "mousewheel" === a.type && b % 120 === 0
    }

    var e, f, g = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"],
        h = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"],
        i = Array.prototype.slice;
    if (a.event.fixHooks) for (var j = g.length; j;) a.event.fixHooks[g[--j]] = a.event.mouseHooks;
    var k = a.event.special.mousewheel = {
        version: "3.1.12", setup: function () {
            if (this.addEventListener) for (var c = h.length; c;) this.addEventListener(h[--c], b, !1); else this.onmousewheel = b;
            a.data(this, "mousewheel-line-height", k.getLineHeight(this)), a.data(this, "mousewheel-page-height", k.getPageHeight(this))
        }, teardown: function () {
            if (this.removeEventListener) for (var c = h.length; c;) this.removeEventListener(h[--c], b, !1); else this.onmousewheel = null;
            a.removeData(this, "mousewheel-line-height"), a.removeData(this, "mousewheel-page-height")
        }, getLineHeight: function (b) {
            var c = a(b), d = c["offsetParent" in a.fn ? "offsetParent" : "parent"]();
            return d.length || (d = a("body")), parseInt(d.css("fontSize"), 10) || parseInt(c.css("fontSize"), 10) || 16
        }, getPageHeight: function (b) {
            return a(b).height()
        }, settings: {adjustOldDeltas: !0, normalizeOffset: !0}
    };
    a.fn.extend({
        mousewheel: function (a) {
            return a ? this.bind("mousewheel", a) : this.trigger("mousewheel")
        }, unmousewheel: function (a) {
            return this.unbind("mousewheel", a)
        }
    })
});
/**
 * Swiper 4.0.3
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * http://www.idangero.us/swiper/
 *
 * Copyright 2014-2017 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: October 27, 2017
 */
!function (e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : e.Swiper = t()
}(this, function () {
    "use strict";

    function e(e, t) {
        var a = [], i = 0;
        if (e && !t && e instanceof r) return e;
        if (e) if ("string" == typeof e) {
            var s, n, o = e.trim();
            if (o.indexOf("<") >= 0 && o.indexOf(">") >= 0) {
                var l = "div";
                for (0 === o.indexOf("<li") && (l = "ul"), 0 === o.indexOf("<tr") && (l = "tbody"), 0 !== o.indexOf("<td") && 0 !== o.indexOf("<th") || (l = "tr"), 0 === o.indexOf("<tbody") && (l = "table"), 0 === o.indexOf("<option") && (l = "select"), (n = document.createElement(l)).innerHTML = o, i = 0; i < n.childNodes.length; i += 1) a.push(n.childNodes[i])
            } else for (s = t || "#" !== e[0] || e.match(/[ .<>:~]/) ? (t || document).querySelectorAll(e.trim()) : [document.getElementById(e.trim().split("#")[1])], i = 0; i < s.length; i += 1) s[i] && a.push(s[i])
        } else if (e.nodeType || e === window || e === document) a.push(e); else if (e.length > 0 && e[0].nodeType) for (i = 0; i < e.length; i += 1) a.push(e[i]);
        return new r(a)
    }

    function t(e) {
        for (var t = [], a = 0; a < e.length; a += 1) -1 === t.indexOf(e[a]) && t.push(e[a]);
        return t
    }

    function a() {
        var e = "onwheel" in d;
        if (!e) {
            var t = d.createElement("div");
            t.setAttribute("onwheel", "return;"), e = "function" == typeof t.onwheel
        }
        return !e && d.implementation && d.implementation.hasFeature && !0 !== d.implementation.hasFeature("", "") && (e = d.implementation.hasFeature("Events.wheel", "3.0")), e
    }

    var i, s = i = "undefined" == typeof window ? {
        navigator: {userAgent: ""},
        location: {},
        history: {},
        addEventListener: function () {
        },
        removeEventListener: function () {
        },
        getComputedStyle: function () {
            return {}
        },
        Image: function () {
        },
        Date: function () {
        }
    } : window, r = function (e) {
        for (var t = this, a = 0; a < e.length; a += 1) t[a] = e[a];
        return t.length = e.length, this
    };
    e.fn = r.prototype, e.Class = r, e.Dom7 = r;
    "resize scroll".split(" ");
    var n = {
        addClass: function (e) {
            var t = this;
            if (void 0 === e) return this;
            for (var a = e.split(" "), i = 0; i < a.length; i += 1) for (var s = 0; s < this.length; s += 1) void 0 !== t[s].classList && t[s].classList.add(a[i]);
            return this
        }, removeClass: function (e) {
            for (var t = this, a = e.split(" "), i = 0; i < a.length; i += 1) for (var s = 0; s < this.length; s += 1) void 0 !== t[s].classList && t[s].classList.remove(a[i]);
            return this
        }, hasClass: function (e) {
            return !!this[0] && this[0].classList.contains(e)
        }, toggleClass: function (e) {
            for (var t = this, a = e.split(" "), i = 0; i < a.length; i += 1) for (var s = 0; s < this.length; s += 1) void 0 !== t[s].classList && t[s].classList.toggle(a[i]);
            return this
        }, attr: function (e, t) {
            var a = arguments, i = this;
            if (1 !== arguments.length || "string" != typeof e) {
                for (var s = 0; s < this.length; s += 1) if (2 === a.length) i[s].setAttribute(e, t); else for (var r in e) i[s][r] = e[r], i[s].setAttribute(r, e[r]);
                return this
            }
            if (this[0]) return this[0].getAttribute(e)
        }, removeAttr: function (e) {
            for (var t = this, a = 0; a < this.length; a += 1) t[a].removeAttribute(e);
            return this
        }, data: function (e, t) {
            var a, i = this;
            if (void 0 !== t) {
                for (var s = 0; s < this.length; s += 1) (a = i[s]).dom7ElementDataStorage || (a.dom7ElementDataStorage = {}), a.dom7ElementDataStorage[e] = t;
                return this
            }
            if (a = this[0]) {
                if (a.dom7ElementDataStorage && e in a.dom7ElementDataStorage) return a.dom7ElementDataStorage[e];
                var r = a.getAttribute("data-" + e);
                if (r) return r
            }
        }, transform: function (e) {
            for (var t = this, a = 0; a < this.length; a += 1) {
                var i = t[a].style;
                i.webkitTransform = e, i.transform = e
            }
            return this
        }, transition: function (e) {
            var t = this;
            "string" != typeof e && (e += "ms");
            for (var a = 0; a < this.length; a += 1) {
                var i = t[a].style;
                i.webkitTransitionDuration = e, i.transitionDuration = e
            }
            return this
        }, on: function () {
            function t(t) {
                var a = t.target;
                if (a) {
                    var i = t.target.dom7EventData || [];
                    if (i.unshift(t), e(a).is(o)) l.apply(a, i); else for (var s = e(a).parents(), r = 0; r < s.length; r += 1) e(s[r]).is(o) && l.apply(s[r], i)
                }
            }

            function a(e) {
                var t = e && e.target ? e.target.dom7EventData || [] : [];
                t.unshift(e), l.apply(this, t)
            }

            for (var i = this, s = [], r = arguments.length; r--;) s[r] = arguments[r];
            var n = s[0], o = s[1], l = s[2], d = s[3];
            if ("function" == typeof s[1]) {
                var p;
                n = (p = s)[0], l = p[1], d = p[2], o = void 0
            }
            d || (d = !1);
            for (var c, u = n.split(" "), h = 0; h < this.length; h += 1) {
                var v = i[h];
                if (o) for (c = 0; c < u.length; c += 1) v.dom7LiveListeners || (v.dom7LiveListeners = []), v.dom7LiveListeners.push({
                    type: n,
                    listener: l,
                    proxyListener: t
                }), v.addEventListener(u[c], t, d); else for (c = 0; c < u.length; c += 1) v.dom7Listeners || (v.dom7Listeners = []), v.dom7Listeners.push({
                    type: n,
                    listener: l,
                    proxyListener: a
                }), v.addEventListener(u[c], a, d)
            }
            return this
        }, off: function () {
            for (var e = this, t = [], a = arguments.length; a--;) t[a] = arguments[a];
            var i = t[0], s = t[1], r = t[2], n = t[3];
            if ("function" == typeof t[1]) {
                var o;
                i = (o = t)[0], r = o[1], n = o[2], s = void 0
            }
            n || (n = !1);
            for (var l = i.split(" "), d = 0; d < l.length; d += 1) for (var p = 0; p < this.length; p += 1) {
                var c = e[p];
                if (s) {
                    if (c.dom7LiveListeners) for (var u = 0; u < c.dom7LiveListeners.length; u += 1) r ? c.dom7LiveListeners[u].listener === r && c.removeEventListener(l[d], c.dom7LiveListeners[u].proxyListener, n) : c.dom7LiveListeners[u].type === l[d] && c.removeEventListener(l[d], c.dom7LiveListeners[u].proxyListener, n)
                } else if (c.dom7Listeners) for (var h = 0; h < c.dom7Listeners.length; h += 1) r ? c.dom7Listeners[h].listener === r && c.removeEventListener(l[d], c.dom7Listeners[h].proxyListener, n) : c.dom7Listeners[h].type === l[d] && c.removeEventListener(l[d], c.dom7Listeners[h].proxyListener, n)
            }
            return this
        }, trigger: function () {
            for (var e = this, t = [], a = arguments.length; a--;) t[a] = arguments[a];
            for (var i = t[0].split(" "), s = t[1], r = 0; r < i.length; r += 1) for (var n = 0; n < this.length; n += 1) {
                var o = void 0;
                try {
                    o = new window.CustomEvent(i[r], {detail: s, bubbles: !0, cancelable: !0})
                } catch (e) {
                    (o = document.createEvent("Event")).initEvent(i[r], !0, !0), o.detail = s
                }
                e[n].dom7EventData = t.filter(function (e, t) {
                    return t > 0
                }), e[n].dispatchEvent(o), e[n].dom7EventData = [], delete e[n].dom7EventData
            }
            return this
        }, transitionEnd: function (e) {
            function t(r) {
                if (r.target === this) for (e.call(this, r), a = 0; a < i.length; a += 1) s.off(i[a], t)
            }

            var a, i = ["webkitTransitionEnd", "transitionend"], s = this;
            if (e) for (a = 0; a < i.length; a += 1) s.on(i[a], t);
            return this
        }, outerWidth: function (e) {
            if (this.length > 0) {
                if (e) {
                    var t = this.styles();
                    return this[0].offsetWidth + parseFloat(t.getPropertyValue("margin-right")) + parseFloat(t.getPropertyValue("margin-left"))
                }
                return this[0].offsetWidth
            }
            return null
        }, outerHeight: function (e) {
            if (this.length > 0) {
                if (e) {
                    var t = this.styles();
                    return this[0].offsetHeight + parseFloat(t.getPropertyValue("margin-top")) + parseFloat(t.getPropertyValue("margin-bottom"))
                }
                return this[0].offsetHeight
            }
            return null
        }, offset: function () {
            if (this.length > 0) {
                var e = this[0], t = e.getBoundingClientRect(), a = document.body, i = e.clientTop || a.clientTop || 0,
                    s = e.clientLeft || a.clientLeft || 0, r = e === window ? window.scrollY : e.scrollTop,
                    n = e === window ? window.scrollX : e.scrollLeft;
                return {top: t.top + r - i, left: t.left + n - s}
            }
            return null
        }, css: function (e, t) {
            var a, i = this;
            if (1 === arguments.length) {
                if ("string" != typeof e) {
                    for (a = 0; a < this.length; a += 1) for (var s in e) i[a].style[s] = e[s];
                    return this
                }
                if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(e)
            }
            if (2 === arguments.length && "string" == typeof e) {
                for (a = 0; a < this.length; a += 1) i[a].style[e] = t;
                return this
            }
            return this
        }, each: function (e) {
            var t = this;
            if (!e) return this;
            for (var a = 0; a < this.length; a += 1) if (!1 === e.call(t[a], a, t[a])) return t;
            return this
        }, html: function (e) {
            var t = this;
            if (void 0 === e) return this[0] ? this[0].innerHTML : void 0;
            for (var a = 0; a < this.length; a += 1) t[a].innerHTML = e;
            return this
        }, text: function (e) {
            var t = this;
            if (void 0 === e) return this[0] ? this[0].textContent.trim() : null;
            for (var a = 0; a < this.length; a += 1) t[a].textContent = e;
            return this
        }, is: function (t) {
            var a, i, s = this[0];
            if (!s || void 0 === t) return !1;
            if ("string" == typeof t) {
                if (s.matches) return s.matches(t);
                if (s.webkitMatchesSelector) return s.webkitMatchesSelector(t);
                if (s.msMatchesSelector) return s.msMatchesSelector(t);
                for (a = e(t), i = 0; i < a.length; i += 1) if (a[i] === s) return !0;
                return !1
            }
            if (t === document) return s === document;
            if (t === window) return s === window;
            if (t.nodeType || t instanceof r) {
                for (a = t.nodeType ? [t] : t, i = 0; i < a.length; i += 1) if (a[i] === s) return !0;
                return !1
            }
            return !1
        }, index: function () {
            var e, t = this[0];
            if (t) {
                for (e = 0; null !== (t = t.previousSibling);) 1 === t.nodeType && (e += 1);
                return e
            }
        }, eq: function (e) {
            if (void 0 === e) return this;
            var t, a = this.length;
            return e > a - 1 ? new r([]) : e < 0 ? (t = a + e, new r(t < 0 ? [] : [this[t]])) : new r([this[e]])
        }, append: function () {
            for (var e = this, t = [], a = arguments.length; a--;) t[a] = arguments[a];
            for (var i, s = 0; s < t.length; s += 1) {
                i = t[s];
                for (var n = 0; n < this.length; n += 1) if ("string" == typeof i) {
                    var o = document.createElement("div");
                    for (o.innerHTML = i; o.firstChild;) e[n].appendChild(o.firstChild)
                } else if (i instanceof r) for (var l = 0; l < i.length; l += 1) e[n].appendChild(i[l]); else e[n].appendChild(i)
            }
            return this
        }, prepend: function (e) {
            var t, a, i = this;
            for (t = 0; t < this.length; t += 1) if ("string" == typeof e) {
                var s = document.createElement("div");
                for (s.innerHTML = e, a = s.childNodes.length - 1; a >= 0; a -= 1) i[t].insertBefore(s.childNodes[a], i[t].childNodes[0])
            } else if (e instanceof r) for (a = 0; a < e.length; a += 1) i[t].insertBefore(e[a], i[t].childNodes[0]); else i[t].insertBefore(e, i[t].childNodes[0]);
            return this
        }, next: function (t) {
            return new r(this.length > 0 ? t ? this[0].nextElementSibling && e(this[0].nextElementSibling).is(t) ? [this[0].nextElementSibling] : [] : this[0].nextElementSibling ? [this[0].nextElementSibling] : [] : [])
        }, nextAll: function (t) {
            var a = [], i = this[0];
            if (!i) return new r([]);
            for (; i.nextElementSibling;) {
                var s = i.nextElementSibling;
                t ? e(s).is(t) && a.push(s) : a.push(s), i = s
            }
            return new r(a)
        }, prev: function (t) {
            if (this.length > 0) {
                var a = this[0];
                return new r(t ? a.previousElementSibling && e(a.previousElementSibling).is(t) ? [a.previousElementSibling] : [] : a.previousElementSibling ? [a.previousElementSibling] : [])
            }
            return new r([])
        }, prevAll: function (t) {
            var a = [], i = this[0];
            if (!i) return new r([]);
            for (; i.previousElementSibling;) {
                var s = i.previousElementSibling;
                t ? e(s).is(t) && a.push(s) : a.push(s), i = s
            }
            return new r(a)
        }, parent: function (a) {
            for (var i = this, s = [], r = 0; r < this.length; r += 1) null !== i[r].parentNode && (a ? e(i[r].parentNode).is(a) && s.push(i[r].parentNode) : s.push(i[r].parentNode));
            return e(t(s))
        }, parents: function (a) {
            for (var i = this, s = [], r = 0; r < this.length; r += 1) for (var n = i[r].parentNode; n;) a ? e(n).is(a) && s.push(n) : s.push(n), n = n.parentNode;
            return e(t(s))
        }, closest: function (e) {
            var t = this;
            return void 0 === e ? new r([]) : (t.is(e) || (t = t.parents(e).eq(0)), t)
        }, find: function (e) {
            for (var t = this, a = [], i = 0; i < this.length; i += 1) for (var s = t[i].querySelectorAll(e), n = 0; n < s.length; n += 1) a.push(s[n]);
            return new r(a)
        }, children: function (a) {
            for (var i = this, s = [], n = 0; n < this.length; n += 1) for (var o = i[n].childNodes, l = 0; l < o.length; l += 1) a ? 1 === o[l].nodeType && e(o[l]).is(a) && s.push(o[l]) : 1 === o[l].nodeType && s.push(o[l]);
            return new r(t(s))
        }, remove: function () {
            for (var e = this, t = 0; t < this.length; t += 1) e[t].parentNode && e[t].parentNode.removeChild(e[t]);
            return this
        }, add: function () {
            for (var t = [], a = arguments.length; a--;) t[a] = arguments[a];
            var i, s, r = this;
            for (i = 0; i < t.length; i += 1) {
                var n = e(t[i]);
                for (s = 0; s < n.length; s += 1) r[r.length] = n[s], r.length += 1
            }
            return r
        }, styles: function () {
            return this[0] ? window.getComputedStyle(this[0], null) : {}
        }
    };
    Object.keys(n).forEach(function (t) {
        e.fn[t] = n[t]
    });
    var o, l = {
        deleteProps: function (e) {
            var t = e;
            Object.keys(t).forEach(function (e) {
                try {
                    t[e] = null
                } catch (e) {
                }
                try {
                    delete t[e]
                } catch (e) {
                }
            })
        }, nextTick: function (e, t) {
            return void 0 === t && (t = 0), setTimeout(e, t)
        }, now: function () {
            return Date.now()
        }, getTranslate: function (e, t) {
            void 0 === t && (t = "x");
            var a, i, r, n = s.getComputedStyle(e, null);
            return s.WebKitCSSMatrix ? ((i = n.transform || n.webkitTransform).split(",").length > 6 && (i = i.split(", ").map(function (e) {
                return e.replace(",", ".")
            }).join(", ")), r = new s.WebKitCSSMatrix("none" === i ? "" : i)) : a = (r = n.MozTransform || n.OTransform || n.MsTransform || n.msTransform || n.transform || n.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,")).toString().split(","), "x" === t && (i = s.WebKitCSSMatrix ? r.m41 : 16 === a.length ? parseFloat(a[12]) : parseFloat(a[4])), "y" === t && (i = s.WebKitCSSMatrix ? r.m42 : 16 === a.length ? parseFloat(a[13]) : parseFloat(a[5])), i || 0
        }, parseUrlQuery: function (e) {
            var t, a, i, r, n = {}, o = e || s.location.href;
            if ("string" == typeof o && o.length) for (r = (a = (o = o.indexOf("?") > -1 ? o.replace(/\S*\?/, "") : "").split("&").filter(function (e) {
                return "" !== e
            })).length, t = 0; t < r; t += 1) i = a[t].replace(/#\S+/g, "").split("="), n[decodeURIComponent(i[0])] = void 0 === i[1] ? void 0 : decodeURIComponent(i[1]) || "";
            return n
        }, isObject: function (e) {
            return "object" == typeof e && null !== e && e.constructor && e.constructor === Object
        }, extend: function () {
            for (var e = [], t = arguments.length; t--;) e[t] = arguments[t];
            for (var a = Object(e[0]), i = 1; i < e.length; i += 1) {
                var s = e[i];
                if (void 0 !== s && null !== s) for (var r = Object.keys(Object(s)), n = 0, o = r.length; n < o; n += 1) {
                    var d = r[n], p = Object.getOwnPropertyDescriptor(s, d);
                    void 0 !== p && p.enumerable && (l.isObject(a[d]) && l.isObject(s[d]) ? l.extend(a[d], s[d]) : !l.isObject(a[d]) && l.isObject(s[d]) ? (a[d] = {}, l.extend(a[d], s[d])) : a[d] = s[d])
                }
            }
            return a
        }
    }, d = o = "undefined" == typeof document ? {
        addEventListener: function () {
        }, removeEventListener: function () {
        }, activeElement: {
            blur: function () {
            }, nodeName: ""
        }, querySelector: function () {
            return {}
        }, querySelectorAll: function () {
            return []
        }, createElement: function () {
            return {
                style: {}, setAttribute: function () {
                }, getElementsByTagName: function () {
                    return []
                }
            }
        }, location: {hash: ""}
    } : document, p = {
        touch: s.Modernizr && !0 === s.Modernizr.touch || !!("ontouchstart" in s || s.DocumentTouch && d instanceof s.DocumentTouch),
        transforms3d: s.Modernizr && !0 === s.Modernizr.csstransforms3d || function () {
            var e = d.createElement("div").style;
            return "webkitPerspective" in e || "MozPerspective" in e || "OPerspective" in e || "MsPerspective" in e || "perspective" in e
        }(),
        flexbox: function () {
            for (var e = d.createElement("div").style, t = "alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "), a = 0; a < t.length; a += 1) if (t[a] in e) return !0;
            return !1
        }(),
        observer: "MutationObserver" in s || "WebkitMutationObserver" in s,
        passiveListener: function () {
            var e = !1;
            try {
                var t = Object.defineProperty({}, "passive", {
                    get: function () {
                        e = !0
                    }
                });
                s.addEventListener("testPassiveListener", null, t)
            } catch (e) {
            }
            return e
        }(),
        gestures: "ongesturestart" in s
    }, c = function (e) {
        void 0 === e && (e = {});
        var t = this;
        t.params = e, t.eventsListeners = {}, t.params && t.params.on && Object.keys(t.params.on).forEach(function (e) {
            t.on(e, t.params.on[e])
        })
    }, u = {components: {}};
    c.prototype.on = function (e, t) {
        var a = this;
        return "function" != typeof t ? a : (e.split(" ").forEach(function (e) {
            a.eventsListeners[e] || (a.eventsListeners[e] = []), a.eventsListeners[e].push(t)
        }), a)
    }, c.prototype.once = function (e, t) {
        function a() {
            for (var s = [], r = arguments.length; r--;) s[r] = arguments[r];
            t.apply(i, s), i.off(e, a)
        }

        var i = this;
        return "function" != typeof t ? i : i.on(e, a)
    }, c.prototype.off = function (e, t) {
        var a = this;
        return e.split(" ").forEach(function (e) {
            void 0 === t ? a.eventsListeners[e] = [] : a.eventsListeners[e].forEach(function (i, s) {
                i === t && a.eventsListeners[e].splice(s, 1)
            })
        }), a
    }, c.prototype.emit = function () {
        for (var e = [], t = arguments.length; t--;) e[t] = arguments[t];
        var a, i, s, r = this;
        return "string" == typeof e[0] || Array.isArray(e[0]) ? (a = e[0], i = e.slice(1, e.length), s = r) : (a = e[0].events, i = e[0].data, s = e[0].context || r), (Array.isArray(a) ? a : a.split(" ")).forEach(function (e) {
            if (r.eventsListeners[e]) {
                var t = [];
                r.eventsListeners[e].forEach(function (e) {
                    t.push(e)
                }), t.forEach(function (e) {
                    e.apply(s, i)
                })
            }
        }), r
    }, c.prototype.useModulesParams = function (e) {
        var t = this;
        t.modules && Object.keys(t.modules).forEach(function (a) {
            var i = t.modules[a];
            i.params && l.extend(e, i.params)
        })
    }, c.prototype.useModules = function (e) {
        void 0 === e && (e = {});
        var t = this;
        t.modules && Object.keys(t.modules).forEach(function (a) {
            var i = t.modules[a], s = e[a] || {};
            i.instance && Object.keys(i.instance).forEach(function (e) {
                var a = i.instance[e];
                t[e] = "function" == typeof a ? a.bind(t) : a
            }), i.on && t.on && Object.keys(i.on).forEach(function (e) {
                t.on(e, i.on[e])
            }), i.create && i.create.bind(t)(s)
        })
    }, u.components.set = function (e) {
        var t = this;
        t.use && t.use(e)
    }, c.installModule = function (e) {
        for (var t = [], a = arguments.length - 1; a-- > 0;) t[a] = arguments[a + 1];
        var i = this;
        i.prototype.modules || (i.prototype.modules = {});
        var s = e.name || Object.keys(i.prototype.modules).length + "_" + l.now();
        return i.prototype.modules[s] = e, e.proto && Object.keys(e.proto).forEach(function (t) {
            i.prototype[t] = e.proto[t]
        }), e.static && Object.keys(e.static).forEach(function (t) {
            i[t] = e.static[t]
        }), e.install && e.install.apply(i, t), i
    }, c.use = function (e) {
        for (var t = [], a = arguments.length - 1; a-- > 0;) t[a] = arguments[a + 1];
        var i = this;
        return Array.isArray(e) ? (e.forEach(function (e) {
            return i.installModule(e)
        }), i) : i.installModule.apply(i, [e].concat(t))
    }, Object.defineProperties(c, u);
    var h = {
            updateSize: function () {
                var e, t, a = this, i = a.$el;
                e = void 0 !== a.params.width ? a.params.width : i[0].clientWidth, t = void 0 !== a.params.height ? a.params.height : i[0].clientHeight, 0 === e && a.isHorizontal() || 0 === t && a.isVertical() || (e = e - parseInt(i.css("padding-left"), 10) - parseInt(i.css("padding-right"), 10), t = t - parseInt(i.css("padding-top"), 10) - parseInt(i.css("padding-bottom"), 10), l.extend(a, {
                    width: e,
                    height: t,
                    size: a.isHorizontal() ? e : t
                }))
            }, updateSlides: function () {
                var e = this, t = e.params, a = e.$wrapperEl, i = e.size, s = e.rtl, r = e.wrongRTL,
                    n = a.children("." + e.params.slideClass),
                    o = e.virtual && t.virtual.enabled ? e.virtual.slides.length : n.length, d = [], c = [], u = [],
                    h = t.slidesOffsetBefore;
                "function" == typeof h && (h = t.slidesOffsetBefore.call(e));
                var v = t.slidesOffsetAfter;
                "function" == typeof v && (v = t.slidesOffsetAfter.call(e));
                var f = o, m = e.snapGrid.length, g = e.snapGrid.length, b = t.spaceBetween, w = -h, y = 0, x = 0;
                if (void 0 !== i) {
                    "string" == typeof b && b.indexOf("%") >= 0 && (b = parseFloat(b.replace("%", "")) / 100 * i), e.virtualSize = -b, s ? n.css({
                        marginLeft: "",
                        marginTop: ""
                    }) : n.css({marginRight: "", marginBottom: ""});
                    var E;
                    t.slidesPerColumn > 1 && (E = Math.floor(o / t.slidesPerColumn) === o / e.params.slidesPerColumn ? o : Math.ceil(o / t.slidesPerColumn) * t.slidesPerColumn, "auto" !== t.slidesPerView && "row" === t.slidesPerColumnFill && (E = Math.max(E, t.slidesPerView * t.slidesPerColumn)));
                    for (var T, S = t.slidesPerColumn, C = E / S, M = C - (t.slidesPerColumn * C - o), z = 0; z < o; z += 1) {
                        T = 0;
                        var P = n.eq(z);
                        if (t.slidesPerColumn > 1) {
                            var k = void 0, $ = void 0, I = void 0;
                            "column" === t.slidesPerColumnFill ? (I = z - ($ = Math.floor(z / S)) * S, ($ > M || $ === M && I === S - 1) && (I += 1) >= S && (I = 0, $ += 1), k = $ + I * E / S, P.css({
                                "-webkit-box-ordinal-group": k,
                                "-moz-box-ordinal-group": k,
                                "-ms-flex-order": k,
                                "-webkit-order": k,
                                order: k
                            })) : $ = z - (I = Math.floor(z / C)) * C, P.css("margin-" + (e.isHorizontal() ? "top" : "left"), 0 !== I && t.spaceBetween && t.spaceBetween + "px").attr("data-swiper-column", $).attr("data-swiper-row", I)
                        }
                        "none" !== P.css("display") && ("auto" === t.slidesPerView ? (T = e.isHorizontal() ? P.outerWidth(!0) : P.outerHeight(!0), t.roundLengths && (T = Math.floor(T))) : (T = (i - (t.slidesPerView - 1) * b) / t.slidesPerView, t.roundLengths && (T = Math.floor(T)), n[z] && (e.isHorizontal() ? n[z].style.width = T + "px" : n[z].style.height = T + "px")), n[z] && (n[z].swiperSlideSize = T), u.push(T), t.centeredSlides ? (w = w + T / 2 + y / 2 + b, 0 === y && 0 !== z && (w = w - i / 2 - b), 0 === z && (w = w - i / 2 - b), Math.abs(w) < .001 && (w = 0), x % t.slidesPerGroup == 0 && d.push(w), c.push(w)) : (x % t.slidesPerGroup == 0 && d.push(w), c.push(w), w = w + T + b), e.virtualSize += T + b, y = T, x += 1)
                    }
                    e.virtualSize = Math.max(e.virtualSize, i) + v;
                    var L;
                    if (s && r && ("slide" === t.effect || "coverflow" === t.effect) && a.css({width: e.virtualSize + t.spaceBetween + "px"}), p.flexbox && !t.setWrapperSize || (e.isHorizontal() ? a.css({width: e.virtualSize + t.spaceBetween + "px"}) : a.css({height: e.virtualSize + t.spaceBetween + "px"})), t.slidesPerColumn > 1 && (e.virtualSize = (T + t.spaceBetween) * E, e.virtualSize = Math.ceil(e.virtualSize / t.slidesPerColumn) - t.spaceBetween, e.isHorizontal() ? a.css({width: e.virtualSize + t.spaceBetween + "px"}) : a.css({height: e.virtualSize + t.spaceBetween + "px"}), t.centeredSlides)) {
                        L = [];
                        for (var D = 0; D < d.length; D += 1) d[D] < e.virtualSize + d[0] && L.push(d[D]);
                        d = L
                    }
                    if (!t.centeredSlides) {
                        L = [];
                        for (var O = 0; O < d.length; O += 1) d[O] <= e.virtualSize - i && L.push(d[O]);
                        d = L, Math.floor(e.virtualSize - i) - Math.floor(d[d.length - 1]) > 1 && d.push(e.virtualSize - i)
                    }
                    0 === d.length && (d = [0]), 0 !== t.spaceBetween && (e.isHorizontal() ? s ? n.css({marginLeft: b + "px"}) : n.css({marginRight: b + "px"}) : n.css({marginBottom: b + "px"})), l.extend(e, {
                        slides: n,
                        snapGrid: d,
                        slidesGrid: c,
                        slidesSizesGrid: u
                    }), o !== f && e.emit("slidesLengthChange"), d.length !== m && e.emit("snapGridLengthChange"), c.length !== g && e.emit("slidesGridLengthChange"), (t.watchSlidesProgress || t.watchSlidesVisibility) && e.updateSlidesOffset()
                }
            }, updateAutoHeight: function () {
                var e, t = this, a = [], i = 0;
                if ("auto" !== t.params.slidesPerView && t.params.slidesPerView > 1) for (e = 0; e < Math.ceil(t.params.slidesPerView); e += 1) {
                    var s = t.activeIndex + e;
                    if (s > t.slides.length) break;
                    a.push(t.slides.eq(s)[0])
                } else a.push(t.slides.eq(t.activeIndex)[0]);
                for (e = 0; e < a.length; e += 1) if (void 0 !== a[e]) {
                    var r = a[e].offsetHeight;
                    i = r > i ? r : i
                }
                i && t.$wrapperEl.css("height", i + "px")
            }, updateSlidesOffset: function () {
                for (var e = this, t = e.slides, a = 0; a < t.length; a += 1) t[a].swiperSlideOffset = e.isHorizontal() ? t[a].offsetLeft : t[a].offsetTop
            }, updateSlidesProgress: function (e) {
                void 0 === e && (e = this.translate || 0);
                var t = this, a = t.params, i = t.slides, s = t.rtl;
                if (0 !== i.length) {
                    void 0 === i[0].swiperSlideOffset && t.updateSlidesOffset();
                    var r = -e;
                    s && (r = e), i.removeClass(a.slideVisibleClass);
                    for (var n = 0; n < i.length; n += 1) {
                        var o = i[n],
                            l = (r + (a.centeredSlides ? t.minTranslate() : 0) - o.swiperSlideOffset) / (o.swiperSlideSize + a.spaceBetween);
                        if (a.watchSlidesVisibility) {
                            var d = -(r - o.swiperSlideOffset), p = d + t.slidesSizesGrid[n];
                            (d >= 0 && d < t.size || p > 0 && p <= t.size || d <= 0 && p >= t.size) && i.eq(n).addClass(a.slideVisibleClass)
                        }
                        o.progress = s ? -l : l
                    }
                }
            }, updateProgress: function (e) {
                void 0 === e && (e = this.translate || 0);
                var t = this, a = t.params, i = t.maxTranslate() - t.minTranslate(), s = t.progress, r = t.isBeginning,
                    n = t.isEnd, o = r, d = n;
                0 === i ? (s = 0, r = !0, n = !0) : (r = (s = (e - t.minTranslate()) / i) <= 0, n = s >= 1), l.extend(t, {
                    progress: s,
                    isBeginning: r,
                    isEnd: n
                }), (a.watchSlidesProgress || a.watchSlidesVisibility) && t.updateSlidesProgress(e), r && !o && t.emit("reachBeginning toEdge"), n && !d && t.emit("reachEnd toEdge"), (o && !r || d && !n) && t.emit("fromEdge"), t.emit("progress", s)
            }, updateSlidesClasses: function () {
                var e = this, t = e.slides, a = e.params, i = e.$wrapperEl, s = e.activeIndex, r = e.realIndex,
                    n = e.virtual && a.virtual.enabled;
                t.removeClass(a.slideActiveClass + " " + a.slideNextClass + " " + a.slidePrevClass + " " + a.slideDuplicateActiveClass + " " + a.slideDuplicateNextClass + " " + a.slideDuplicatePrevClass);
                var o;
                (o = n ? e.$wrapperEl.find("." + a.slideClass + '[data-swiper-slide-index="' + s + '"]') : t.eq(s)).addClass(a.slideActiveClass), a.loop && (o.hasClass(a.slideDuplicateClass) ? i.children("." + a.slideClass + ":not(." + a.slideDuplicateClass + ')[data-swiper-slide-index="' + r + '"]').addClass(a.slideDuplicateActiveClass) : i.children("." + a.slideClass + "." + a.slideDuplicateClass + '[data-swiper-slide-index="' + r + '"]').addClass(a.slideDuplicateActiveClass));
                var l = o.nextAll("." + a.slideClass).eq(0).addClass(a.slideNextClass);
                a.loop && 0 === l.length && (l = t.eq(0)).addClass(a.slideNextClass);
                var d = o.prevAll("." + a.slideClass).eq(0).addClass(a.slidePrevClass);
                a.loop && 0 === d.length && (d = t.eq(-1)).addClass(a.slidePrevClass), a.loop && (l.hasClass(a.slideDuplicateClass) ? i.children("." + a.slideClass + ":not(." + a.slideDuplicateClass + ')[data-swiper-slide-index="' + l.attr("data-swiper-slide-index") + '"]').addClass(a.slideDuplicateNextClass) : i.children("." + a.slideClass + "." + a.slideDuplicateClass + '[data-swiper-slide-index="' + l.attr("data-swiper-slide-index") + '"]').addClass(a.slideDuplicateNextClass), d.hasClass(a.slideDuplicateClass) ? i.children("." + a.slideClass + ":not(." + a.slideDuplicateClass + ')[data-swiper-slide-index="' + d.attr("data-swiper-slide-index") + '"]').addClass(a.slideDuplicatePrevClass) : i.children("." + a.slideClass + "." + a.slideDuplicateClass + '[data-swiper-slide-index="' + d.attr("data-swiper-slide-index") + '"]').addClass(a.slideDuplicatePrevClass))
            }, updateActiveIndex: function (e) {
                var t, a = this, i = a.rtl ? a.translate : -a.translate, s = a.slidesGrid, r = a.snapGrid, n = a.params,
                    o = a.activeIndex, d = a.realIndex, p = a.snapIndex, c = e;
                if (void 0 === c) {
                    for (var u = 0; u < s.length; u += 1) void 0 !== s[u + 1] ? i >= s[u] && i < s[u + 1] - (s[u + 1] - s[u]) / 2 ? c = u : i >= s[u] && i < s[u + 1] && (c = u + 1) : i >= s[u] && (c = u);
                    n.normalizeSlideIndex && (c < 0 || void 0 === c) && (c = 0)
                }
                if ((t = r.indexOf(i) >= 0 ? r.indexOf(i) : Math.floor(c / n.slidesPerGroup)) >= r.length && (t = r.length - 1), c !== o) {
                    var h = parseInt(a.slides.eq(c).attr("data-swiper-slide-index") || c, 10);
                    l.extend(a, {
                        snapIndex: t,
                        realIndex: h,
                        previousIndex: o,
                        activeIndex: c
                    }), a.emit("activeIndexChange"), a.emit("snapIndexChange"), d !== h && a.emit("realIndexChange"), a.emit("slideChange")
                } else t !== p && (a.snapIndex = t, a.emit("snapIndexChange"))
            }, updateClickedSlide: function (t) {
                var a = this, i = a.params, s = e(t.target).closest("." + i.slideClass)[0], r = !1;
                if (s) for (var n = 0; n < a.slides.length; n += 1) a.slides[n] === s && (r = !0);
                if (!s || !r) return a.clickedSlide = void 0, void (a.clickedIndex = void 0);
                a.clickedSlide = s, a.virtual && a.params.virtual.enabled ? a.clickedIndex = parseInt(e(s).attr("data-swiper-slide-index"), 10) : a.clickedIndex = e(s).index(), i.slideToClickedSlide && void 0 !== a.clickedIndex && a.clickedIndex !== a.activeIndex && a.slideToClickedSlide()
            }
        }, v = {
            getTranslate: function (e) {
                void 0 === e && (e = this.isHorizontal() ? "x" : "y");
                var t = this, a = t.params, i = t.rtl, s = t.translate, r = t.$wrapperEl;
                if (a.virtualTranslate) return i ? -s : s;
                var n = l.getTranslate(r[0], e);
                return i && (n = -n), n || 0
            }, setTranslate: function (e, t) {
                var a = this, i = a.rtl, s = a.params, r = a.$wrapperEl, n = a.progress, o = 0, l = 0;
                a.isHorizontal() ? o = i ? -e : e : l = e, s.roundLengths && (o = Math.floor(o), l = Math.floor(l)), s.virtualTranslate || (p.transforms3d ? r.transform("translate3d(" + o + "px, " + l + "px, 0px)") : r.transform("translate(" + o + "px, " + l + "px)")), a.translate = a.isHorizontal() ? o : l;
                var d = a.maxTranslate() - a.minTranslate();
                (0 === d ? 0 : (e - a.minTranslate()) / d) !== n && a.updateProgress(e), a.emit("setTranslate", a.translate, t)
            }, minTranslate: function () {
                return -this.snapGrid[0]
            }, maxTranslate: function () {
                return -this.snapGrid[this.snapGrid.length - 1]
            }
        }, f = {
            setTransition: function (e, t) {
                var a = this;
                a.$wrapperEl.transition(e), a.emit("setTransition", e, t)
            }, transitionStart: function (e) {
                void 0 === e && (e = !0);
                var t = this, a = t.activeIndex, i = t.params, s = t.previousIndex;
                i.autoHeight && t.updateAutoHeight(), t.emit("transitionStart"), e && a !== s && (t.emit("slideChangeTransitionStart"), a > s ? t.emit("slideNextTransitionStart") : t.emit("slidePrevTransitionStart"))
            }, transitionEnd: function (e) {
                void 0 === e && (e = !0);
                var t = this, a = t.activeIndex, i = t.previousIndex;
                t.animating = !1, t.setTransition(0), t.emit("transitionEnd"), e && a !== i && (t.emit("slideChangeTransitionEnd"), a > i ? t.emit("slideNextTransitionEnd") : t.emit("slidePrevTransitionEnd"))
            }
        }, m = function () {
            return {
                isSafari: function () {
                    var e = s.navigator.userAgent.toLowerCase();
                    return e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0
                }(),
                isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(s.navigator.userAgent),
                ie: s.navigator.pointerEnabled || s.navigator.msPointerEnabled,
                ieTouch: s.navigator.msPointerEnabled && s.navigator.msMaxTouchPoints > 1 || s.navigator.pointerEnabled && s.navigator.maxTouchPoints > 1,
                lteIE9: function () {
                    var e = d.createElement("div");
                    return e.innerHTML = "\x3c!--[if lte IE 9]><i></i><![endif]--\x3e", 1 === e.getElementsByTagName("i").length
                }()
            }
        }(), g = {
            slideTo: function (e, t, a, i) {
                void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === a && (a = !0);
                var s = this, r = e;
                r < 0 && (r = 0);
                var n = s.params, o = s.snapGrid, l = s.slidesGrid, d = s.previousIndex, p = s.activeIndex, c = s.rtl,
                    u = s.$wrapperEl, h = Math.floor(r / n.slidesPerGroup);
                h >= o.length && (h = o.length - 1), (p || n.initialSlide || 0) === (d || 0) && a && s.emit("beforeSlideChangeStart");
                var v = -o[h];
                if (s.updateProgress(v), n.normalizeSlideIndex) for (var f = 0; f < l.length; f += 1) -Math.floor(100 * v) >= Math.floor(100 * l[f]) && (r = f);
                return !(!s.allowSlideNext && v < s.translate && v < s.minTranslate() || !s.allowSlidePrev && v > s.translate && v > s.maxTranslate() && (p || 0) !== r || (c && -v === s.translate || !c && v === s.translate ? (s.updateActiveIndex(r), n.autoHeight && s.updateAutoHeight(), s.updateSlidesClasses(), "slide" !== n.effect && s.setTranslate(v), 1) : (0 === t || m.lteIE9 ? (s.setTransition(0), s.setTranslate(v), s.updateActiveIndex(r), s.updateSlidesClasses(), s.emit("beforeTransitionStart", t, i), s.transitionStart(a), s.transitionEnd(a)) : (s.setTransition(t), s.setTranslate(v), s.updateActiveIndex(r), s.updateSlidesClasses(), s.emit("beforeTransitionStart", t, i), s.transitionStart(a), s.animating || (s.animating = !0, u.transitionEnd(function () {
                    s && s.transitionEnd(a)
                }))), 0)))
            }, slideNext: function (e, t, a) {
                void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
                var i = this, s = i.params, r = i.animating;
                return s.loop ? !r && (i.loopFix(), i._clientLeft = i.$wrapperEl[0].clientLeft, i.slideTo(i.activeIndex + s.slidesPerGroup, e, t, a)) : i.slideTo(i.activeIndex + s.slidesPerGroup, e, t, a)
            }, slidePrev: function (e, t, a) {
                void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
                var i = this, s = i.params, r = i.animating;
                return s.loop ? !r && (i.loopFix(), i._clientLeft = i.$wrapperEl[0].clientLeft, i.slideTo(i.activeIndex - 1, e, t, a)) : i.slideTo(i.activeIndex - 1, e, t, a)
            }, slideReset: function (e, t, a) {
                void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
                var i = this;
                return i.slideTo(i.activeIndex, e, t, a)
            }, slideToClickedSlide: function () {
                var t, a = this, i = a.params, s = a.$wrapperEl,
                    r = "auto" === i.slidesPerView ? a.slidesPerViewDynamic() : i.slidesPerView, n = a.clickedIndex;
                if (i.loop) {
                    if (a.animating) return;
                    t = parseInt(e(a.clickedSlide).attr("data-swiper-slide-index"), 10), i.centeredSlides ? n < a.loopedSlides - r / 2 || n > a.slides.length - a.loopedSlides + r / 2 ? (a.loopFix(), n = s.children("." + i.slideClass + '[data-swiper-slide-index="' + t + '"]:not(.' + i.slideDuplicateClass + ")").eq(0).index(), l.nextTick(function () {
                        a.slideTo(n)
                    })) : a.slideTo(n) : n > a.slides.length - r ? (a.loopFix(), n = s.children("." + i.slideClass + '[data-swiper-slide-index="' + t + '"]:not(.' + i.slideDuplicateClass + ")").eq(0).index(), l.nextTick(function () {
                        a.slideTo(n)
                    })) : a.slideTo(n)
                } else a.slideTo(n)
            }
        }, b = {
            loopCreate: function () {
                var t = this, a = t.params, i = t.$wrapperEl;
                i.children("." + a.slideClass + "." + a.slideDuplicateClass).remove();
                var s = i.children("." + a.slideClass);
                if (a.loopFillGroupWithBlank) {
                    var r = a.slidesPerGroup - s.length % a.slidesPerGroup;
                    if (r !== a.slidesPerGroup) {
                        for (var n = 0; n < r; n += 1) {
                            var o = e(d.createElement("div")).addClass(a.slideClass + " " + a.slideBlankClass);
                            i.append(o)
                        }
                        s = i.children("." + a.slideClass)
                    }
                }
                "auto" !== a.slidesPerView || a.loopedSlides || (a.loopedSlides = s.length), t.loopedSlides = parseInt(a.loopedSlides || a.slidesPerView, 10), t.loopedSlides += a.loopAdditionalSlides, t.loopedSlides > s.length && (t.loopedSlides = s.length);
                var l = [], p = [];
                s.each(function (a, i) {
                    var r = e(i);
                    a < t.loopedSlides && p.push(i), a < s.length && a >= s.length - t.loopedSlides && l.push(i), r.attr("data-swiper-slide-index", a)
                });
                for (var c = 0; c < p.length; c += 1) i.append(e(p[c].cloneNode(!0)).addClass(a.slideDuplicateClass));
                for (var u = l.length - 1; u >= 0; u -= 1) i.prepend(e(l[u].cloneNode(!0)).addClass(a.slideDuplicateClass))
            }, loopFix: function () {
                var e, t = this, a = t.params, i = t.activeIndex, s = t.slides, r = t.loopedSlides, n = t.allowSlidePrev,
                    o = t.allowSlideNext;
                t.allowSlidePrev = !0, t.allowSlideNext = !0, i < r ? (e = s.length - 3 * r + i, e += r, t.slideTo(e, 0, !1, !0)) : ("auto" === a.slidesPerView && i >= 2 * r || i > s.length - 2 * a.slidesPerView) && (e = -s.length + i + r, e += r, t.slideTo(e, 0, !1, !0)), t.allowSlidePrev = n, t.allowSlideNext = o
            }, loopDestroy: function () {
                var e = this, t = e.$wrapperEl, a = e.params, i = e.slides;
                t.children("." + a.slideClass + "." + a.slideDuplicateClass).remove(), i.removeAttr("data-swiper-slide-index")
            }
        }, w = {
            setGrabCursor: function (e) {
                var t = this;
                if (!p.touch && t.params.simulateTouch) {
                    var a = t.el;
                    a.style.cursor = "move", a.style.cursor = e ? "-webkit-grabbing" : "-webkit-grab", a.style.cursor = e ? "-moz-grabbin" : "-moz-grab", a.style.cursor = e ? "grabbing" : "grab"
                }
            }, unsetGrabCursor: function () {
                var e = this;
                p.touch || (e.el.style.cursor = "")
            }
        }, y = {
            appendSlide: function (e) {
                var t = this, a = t.$wrapperEl, i = t.params;
                if (i.loop && t.loopDestroy(), "object" == typeof e && "length" in e) for (var s = 0; s < e.length; s += 1) e[s] && a.append(e[s]); else a.append(e);
                i.loop && t.loopCreate(), i.observer && p.observer || t.update()
            }, prependSlide: function (e) {
                var t = this, a = t.params, i = t.$wrapperEl, s = t.activeIndex;
                a.loop && t.loopDestroy();
                var r = s + 1;
                if ("object" == typeof e && "length" in e) {
                    for (var n = 0; n < e.length; n += 1) e[n] && i.prepend(e[n]);
                    r = s + e.length
                } else i.prepend(e);
                a.loop && t.loopCreate(), a.observer && p.observer || t.update(), t.slideTo(r, 0, !1)
            }, removeSlide: function (e) {
                var t = this, a = t.params, i = t.$wrapperEl, s = t.activeIndex;
                a.loop && (t.loopDestroy(), t.slides = i.children("." + a.slideClass));
                var r, n = s;
                if ("object" == typeof e && "length" in e) {
                    for (var o = 0; o < e.length; o += 1) r = e[o], t.slides[r] && t.slides.eq(r).remove(), r < n && (n -= 1);
                    n = Math.max(n, 0)
                } else r = e, t.slides[r] && t.slides.eq(r).remove(), r < n && (n -= 1), n = Math.max(n, 0);
                a.loop && t.loopCreate(), a.observer && p.observer || t.update(), a.loop ? t.slideTo(n + t.loopedSlides, 0, !1) : t.slideTo(n, 0, !1)
            }, removeAllSlides: function () {
                for (var e = this, t = [], a = 0; a < e.slides.length; a += 1) t.push(a);
                e.removeSlide(t)
            }
        }, x = function () {
            var e = s.navigator.userAgent, t = {
                    ios: !1,
                    android: !1,
                    androidChrome: !1,
                    desktop: !1,
                    windows: !1,
                    iphone: !1,
                    ipod: !1,
                    ipad: !1,
                    cordova: s.cordova || s.phonegap,
                    phonegap: s.cordova || s.phonegap
                }, a = e.match(/(Windows Phone);?[\s\/]+([\d.]+)?/), i = e.match(/(Android);?[\s\/]+([\d.]+)?/),
                r = e.match(/(iPad).*OS\s([\d_]+)/), n = e.match(/(iPod)(.*OS\s([\d_]+))?/),
                o = !r && e.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
            if (a && (t.os = "windows", t.osVersion = a[2], t.windows = !0), i && !a && (t.os = "android", t.osVersion = i[2], t.android = !0, t.androidChrome = e.toLowerCase().indexOf("chrome") >= 0), (r || o || n) && (t.os = "ios", t.ios = !0), o && !n && (t.osVersion = o[2].replace(/_/g, "."), t.iphone = !0), r && (t.osVersion = r[2].replace(/_/g, "."), t.ipad = !0), n && (t.osVersion = n[3] ? n[3].replace(/_/g, ".") : null, t.iphone = !0), t.ios && t.osVersion && e.indexOf("Version/") >= 0 && "10" === t.osVersion.split(".")[0] && (t.osVersion = e.toLowerCase().split("version/")[1].split(" ")[0]), t.desktop = !(t.os || t.android || t.webView), t.webView = (o || r || n) && e.match(/.*AppleWebKit(?!.*Safari)/i), t.os && "ios" === t.os) {
                var l = t.osVersion.split("."), p = d.querySelector('meta[name="viewport"]');
                t.minimalUi = !t.webView && (n || o) && (1 * l[0] == 7 ? 1 * l[1] >= 1 : 1 * l[0] > 7) && p && p.getAttribute("content").indexOf("minimal-ui") >= 0
            }
            return t.pixelRatio = s.devicePixelRatio || 1, t
        }(), E = function (t) {
            var a = this, i = a.touchEventsData, s = a.params, r = a.touches, n = t;
            if (n.originalEvent && (n = n.originalEvent), i.isTouchEvent = "touchstart" === n.type, i.isTouchEvent || !("which" in n) || 3 !== n.which) if (s.noSwiping && e(n).closest("." + s.noSwipingClass)[0]) a.allowClick = !0; else if (!s.swipeHandler || e(n).closest(s.swipeHandler)[0]) {
                r.currentX = "touchstart" === n.type ? n.targetTouches[0].pageX : n.pageX, r.currentY = "touchstart" === n.type ? n.targetTouches[0].pageY : n.pageY;
                var o = r.currentX, p = r.currentY;
                if (!(x.ios && s.iOSEdgeSwipeDetection && o <= s.iOSEdgeSwipeThreshold)) {
                    if (l.extend(i, {
                        isTouched: !0,
                        isMoved: !1,
                        allowTouchCallbacks: !0,
                        isScrolling: void 0,
                        startMoving: void 0
                    }), r.startX = o, r.startY = p, i.touchStartTime = l.now(), a.allowClick = !0, a.updateSize(), a.swipeDirection = void 0, s.threshold > 0 && (i.allowThresholdMove = !1), "touchstart" !== n.type) {
                        var c = !0;
                        e(n.target).is(i.formElements) && (c = !1), d.activeElement && e(d.activeElement).is(i.formElements) && d.activeElement.blur(), c && n.preventDefault()
                    }
                    a.emit("touchStart", n)
                }
            }
        }, T = function (t) {
            var a = this, i = a.touchEventsData, s = a.params, r = a.touches, n = a.rtl, o = t;
            if (o.originalEvent && (o = o.originalEvent), !i.isTouchEvent || "mousemove" !== o.type) {
                var p = "touchmove" === o.type ? o.targetTouches[0].pageX : o.pageX,
                    c = "touchmove" === o.type ? o.targetTouches[0].pageY : o.pageY;
                if (o.preventedByNestedSwiper) return r.startX = p, void (r.startY = c);
                if (!a.allowTouchMove) return a.allowClick = !1, void (i.isTouched && (l.extend(r, {
                    startX: p,
                    startY: c,
                    currentX: p,
                    currentY: c
                }), i.touchStartTime = l.now()));
                if (i.isTouchEvent && s.touchReleaseOnEdges && !s.loop) if (a.isVertical()) {
                    if (r.currentY < r.startY && a.translate <= a.maxTranslate() || r.currentY > r.startY && a.translate >= a.minTranslate()) return
                } else if (r.currentX < r.startX && a.translate <= a.maxTranslate() || r.currentX > r.startX && a.translate >= a.minTranslate()) return;
                if (i.isTouchEvent && d.activeElement && o.target === d.activeElement && e(o.target).is(i.formElements)) return i.isMoved = !0, void (a.allowClick = !1);
                if (i.allowTouchCallbacks && a.emit("touchMove", o), !(o.targetTouches && o.targetTouches.length > 1)) {
                    if (r.currentX = "touchmove" === o.type ? o.targetTouches[0].pageX : o.pageX, r.currentY = "touchmove" === o.type ? o.targetTouches[0].pageY : o.pageY, void 0 === i.isScrolling) {
                        var u;
                        a.isHorizontal() && r.currentY === r.startY || a.isVertical() && r.currentX === r.startX ? i.isScrolling = !1 : (u = 180 * Math.atan2(Math.abs(r.currentY - r.startY), Math.abs(r.currentX - r.startX)) / Math.PI, i.isScrolling = a.isHorizontal() ? u > s.touchAngle : 90 - u > s.touchAngle)
                    }
                    if (i.isScrolling && a.emit("touchMoveOpposite", o), "undefined" == typeof startMoving && (r.currentX === r.startX && r.currentY === r.startY || (i.startMoving = !0)), i.isTouched) if (i.isScrolling) i.isTouched = !1; else if (i.startMoving) {
                        a.allowClick = !1, o.preventDefault(), s.touchMoveStopPropagation && !s.nested && o.stopPropagation(), i.isMoved || (s.loop && a.loopFix(), i.startTranslate = a.getTranslate(), a.setTransition(0), a.animating && a.$wrapperEl.trigger("webkitTransitionEnd transitionend"), i.allowMomentumBounce = !1, !s.grabCursor || !0 !== a.allowSlideNext && !0 !== a.allowSlidePrev || a.setGrabCursor(!0), a.emit("sliderFirstMove", o)), a.emit("sliderMove", o), i.isMoved = !0;
                        var h = a.isHorizontal() ? r.currentX - r.startX : r.currentY - r.startY;
                        r.diff = h, h *= s.touchRatio, n && (h = -h), a.swipeDirection = h > 0 ? "prev" : "next", i.currentTranslate = h + i.startTranslate;
                        var v = !0, f = s.resistanceRatio;
                        if (s.touchReleaseOnEdges && (f = 0), h > 0 && i.currentTranslate > a.minTranslate() ? (v = !1, s.resistance && (i.currentTranslate = a.minTranslate() - 1 + Math.pow(-a.minTranslate() + i.startTranslate + h, f))) : h < 0 && i.currentTranslate < a.maxTranslate() && (v = !1, s.resistance && (i.currentTranslate = a.maxTranslate() + 1 - Math.pow(a.maxTranslate() - i.startTranslate - h, f))), v && (o.preventedByNestedSwiper = !0), !a.allowSlideNext && "next" === a.swipeDirection && i.currentTranslate < i.startTranslate && (i.currentTranslate = i.startTranslate), !a.allowSlidePrev && "prev" === a.swipeDirection && i.currentTranslate > i.startTranslate && (i.currentTranslate = i.startTranslate), s.threshold > 0) {
                            if (!(Math.abs(h) > s.threshold || i.allowThresholdMove)) return void (i.currentTranslate = i.startTranslate);
                            if (!i.allowThresholdMove) return i.allowThresholdMove = !0, r.startX = r.currentX, r.startY = r.currentY, i.currentTranslate = i.startTranslate, void (r.diff = a.isHorizontal() ? r.currentX - r.startX : r.currentY - r.startY)
                        }
                        s.followFinger && ((s.freeMode || s.watchSlidesProgress || s.watchSlidesVisibility) && (a.updateActiveIndex(), a.updateSlidesClasses()), s.freeMode && (0 === i.velocities.length && i.velocities.push({
                            position: r[a.isHorizontal() ? "startX" : "startY"],
                            time: i.touchStartTime
                        }), i.velocities.push({
                            position: r[a.isHorizontal() ? "currentX" : "currentY"],
                            time: l.now()
                        })), a.updateProgress(i.currentTranslate), a.setTranslate(i.currentTranslate))
                    }
                }
            }
        }, S = function (e) {
            var t = this, a = t.touchEventsData, i = t.params, s = t.touches, r = t.rtl, n = t.$wrapperEl, o = t.slidesGrid,
                d = t.snapGrid, p = e;
            if (p.originalEvent && (p = p.originalEvent), a.allowTouchCallbacks && t.emit("touchEnd", p), a.allowTouchCallbacks = !1, a.isTouched) {
                i.grabCursor && a.isMoved && a.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);
                var c = l.now(), u = c - a.touchStartTime;
                if (t.allowClick && (t.updateClickedSlide(p), t.emit("tap", p), u < 300 && c - a.lastClickTime > 300 && (a.clickTimeout && clearTimeout(a.clickTimeout), a.clickTimeout = l.nextTick(function () {
                    t && t.emit("click", p)
                }, 300)), u < 300 && c - a.lastClickTime < 300 && (a.clickTimeout && clearTimeout(a.clickTimeout), t.emit("doubleTap", p))), a.lastClickTime = l.now(), l.nextTick(function () {
                    t && (t.allowClick = !0)
                }), !a.isTouched || !a.isMoved || !t.swipeDirection || 0 === s.diff || a.currentTranslate === a.startTranslate) return a.isTouched = !1, void (a.isMoved = !1);
                a.isTouched = !1, a.isMoved = !1;
                var h;
                if (h = i.followFinger ? r ? t.translate : -t.translate : -a.currentTranslate, i.freeMode) {
                    if (h < -t.minTranslate()) return void t.slideTo(t.activeIndex);
                    if (h > -t.maxTranslate()) return void (t.slides.length < d.length ? t.slideTo(d.length - 1) : t.slideTo(t.slides.length - 1));
                    if (i.freeModeMomentum) {
                        if (a.velocities.length > 1) {
                            var v = a.velocities.pop(), f = a.velocities.pop(), m = v.position - f.position,
                                g = v.time - f.time;
                            t.velocity = m / g, t.velocity /= 2, Math.abs(t.velocity) < i.freeModeMinimumVelocity && (t.velocity = 0), (g > 150 || l.now() - v.time > 300) && (t.velocity = 0)
                        } else t.velocity = 0;
                        t.velocity *= i.freeModeMomentumVelocityRatio, a.velocities.length = 0;
                        var b = 1e3 * i.freeModeMomentumRatio, w = t.velocity * b, y = t.translate + w;
                        r && (y = -y);
                        var x, E = !1, T = 20 * Math.abs(t.velocity) * i.freeModeMomentumBounceRatio;
                        if (y < t.maxTranslate()) i.freeModeMomentumBounce ? (y + t.maxTranslate() < -T && (y = t.maxTranslate() - T), x = t.maxTranslate(), E = !0, a.allowMomentumBounce = !0) : y = t.maxTranslate(); else if (y > t.minTranslate()) i.freeModeMomentumBounce ? (y - t.minTranslate() > T && (y = t.minTranslate() + T), x = t.minTranslate(), E = !0, a.allowMomentumBounce = !0) : y = t.minTranslate(); else if (i.freeModeSticky) {
                            for (var S, C = 0; C < d.length; C += 1) if (d[C] > -y) {
                                S = C;
                                break
                            }
                            y = Math.abs(d[S] - y) < Math.abs(d[S - 1] - y) || "next" === t.swipeDirection ? d[S] : d[S - 1], r || (y = -y)
                        }
                        if (0 !== t.velocity) b = r ? Math.abs((-y - t.translate) / t.velocity) : Math.abs((y - t.translate) / t.velocity); else if (i.freeModeSticky) return void t.slideReset();
                        i.freeModeMomentumBounce && E ? (t.updateProgress(x), t.setTransition(b), t.setTranslate(y), t.transitionStart(), t.animating = !0, n.transitionEnd(function () {
                            t && a.allowMomentumBounce && (t.emit("momentumBounce"), t.setTransition(i.speed), t.setTranslate(x), n.transitionEnd(function () {
                                t && t.transitionEnd()
                            }))
                        })) : t.velocity ? (t.updateProgress(y), t.setTransition(b), t.setTranslate(y), t.transitionStart(), t.animating || (t.animating = !0, n.transitionEnd(function () {
                            t && t.transitionEnd()
                        }))) : t.updateProgress(y), t.updateActiveIndex(), t.updateSlidesClasses()
                    }
                    (!i.freeModeMomentum || u >= i.longSwipesMs) && (t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses())
                } else {
                    for (var M = 0, z = t.slidesSizesGrid[0], P = 0; P < o.length; P += i.slidesPerGroup) void 0 !== o[P + i.slidesPerGroup] ? h >= o[P] && h < o[P + i.slidesPerGroup] && (M = P, z = o[P + i.slidesPerGroup] - o[P]) : h >= o[P] && (M = P, z = o[o.length - 1] - o[o.length - 2]);
                    var k = (h - o[M]) / z;
                    if (u > i.longSwipesMs) {
                        if (!i.longSwipes) return void t.slideTo(t.activeIndex);
                        "next" === t.swipeDirection && (k >= i.longSwipesRatio ? t.slideTo(M + i.slidesPerGroup) : t.slideTo(M)), "prev" === t.swipeDirection && (k > 1 - i.longSwipesRatio ? t.slideTo(M + i.slidesPerGroup) : t.slideTo(M))
                    } else {
                        if (!i.shortSwipes) return void t.slideTo(t.activeIndex);
                        "next" === t.swipeDirection && t.slideTo(M + i.slidesPerGroup), "prev" === t.swipeDirection && t.slideTo(M)
                    }
                }
            }
        }, C = function () {
            var e = this, t = e.params, a = e.el, i = e.allowSlideNext, s = e.allowSlidePrev;
            if (!a || 0 !== a.offsetWidth) {
                if (t.breakpoints && e.setBreakpoint(), e.allowSlideNext = !0, e.allowSlidePrev = !0, e.updateSize(), e.updateSlides(), t.freeMode) {
                    var r = Math.min(Math.max(e.translate, e.maxTranslate()), e.minTranslate());
                    e.setTranslate(r), e.updateActiveIndex(), e.updateSlidesClasses(), t.autoHeight && e.updateAutoHeight()
                } else e.updateSlidesClasses(), ("auto" === t.slidesPerView || t.slidesPerView > 1) && e.isEnd && !e.params.centeredSlides ? e.slideTo(e.slides.length - 1, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0);
                e.allowSlidePrev = s, e.allowSlideNext = i
            }
        }, M = function (e) {
            var t = this;
            t.allowClick || (t.params.preventClicks && e.preventDefault(), t.params.preventClicksPropagation && t.animating && (e.stopPropagation(), e.stopImmediatePropagation()))
        }, z = {
            init: !0,
            direction: "horizontal",
            touchEventsTarget: "container",
            initialSlide: 0,
            speed: 300,
            iOSEdgeSwipeDetection: !1,
            iOSEdgeSwipeThreshold: 20,
            freeMode: !1,
            freeModeMomentum: !0,
            freeModeMomentumRatio: 1,
            freeModeMomentumBounce: !0,
            freeModeMomentumBounceRatio: 1,
            freeModeMomentumVelocityRatio: 1,
            freeModeSticky: !1,
            freeModeMinimumVelocity: .02,
            autoHeight: !1,
            setWrapperSize: !1,
            virtualTranslate: !1,
            effect: "slide",
            breakpoints: void 0,
            spaceBetween: 0,
            slidesPerView: 1,
            slidesPerColumn: 1,
            slidesPerColumnFill: "column",
            slidesPerGroup: 1,
            centeredSlides: !1,
            slidesOffsetBefore: 0,
            slidesOffsetAfter: 0,
            normalizeSlideIndex: !0,
            roundLengths: !1,
            touchRatio: 1,
            touchAngle: 45,
            simulateTouch: !0,
            shortSwipes: !0,
            longSwipes: !0,
            longSwipesRatio: .5,
            longSwipesMs: 300,
            followFinger: !0,
            allowTouchMove: !0,
            threshold: 0,
            touchMoveStopPropagation: !0,
            touchReleaseOnEdges: !1,
            uniqueNavElements: !0,
            resistance: !0,
            resistanceRatio: .85,
            watchSlidesProgress: !1,
            watchSlidesVisibility: !1,
            grabCursor: !1,
            preventClicks: !0,
            preventClicksPropagation: !0,
            slideToClickedSlide: !1,
            preloadImages: !0,
            updateOnImagesReady: !0,
            loop: !1,
            loopAdditionalSlides: 0,
            loopedSlides: null,
            loopFillGroupWithBlank: !1,
            allowSlidePrev: !0,
            allowSlideNext: !0,
            swipeHandler: null,
            noSwiping: !0,
            noSwipingClass: "swiper-no-swiping",
            passiveListeners: !0,
            containerModifierClass: "swiper-container-",
            slideClass: "swiper-slide",
            slideBlankClass: "swiper-slide-invisible-blank",
            slideActiveClass: "swiper-slide-active",
            slideDuplicateActiveClass: "swiper-slide-duplicate-active",
            slideVisibleClass: "swiper-slide-visible",
            slideDuplicateClass: "swiper-slide-duplicate",
            slideNextClass: "swiper-slide-next",
            slideDuplicateNextClass: "swiper-slide-duplicate-next",
            slidePrevClass: "swiper-slide-prev",
            slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
            wrapperClass: "swiper-wrapper",
            runCallbacksOnInit: !0
        }, P = {
            update: h, translate: v, transition: f, slide: g, loop: b, grabCursor: w, manipulation: y, events: {
                attachEvents: function () {
                    var e = this, t = e.params, a = e.touchEvents, i = e.el, s = e.wrapperEl;
                    e.onTouchStart = E.bind(e), e.onTouchMove = T.bind(e), e.onTouchEnd = S.bind(e), e.onClick = M.bind(e);
                    var r = "container" === t.touchEventsTarget ? i : s, n = !!t.nested;
                    if (m.ie) r.addEventListener(a.start, e.onTouchStart, !1), (p.touch ? r : d).addEventListener(a.move, e.onTouchMove, n), (p.touch ? r : d).addEventListener(a.end, e.onTouchEnd, !1); else {
                        if (p.touch) {
                            var o = !("onTouchStart" !== a.start || !p.passiveListener || !t.passiveListeners) && {
                                passive: !0,
                                capture: !1
                            };
                            r.addEventListener(a.start, e.onTouchStart, o), r.addEventListener(a.move, e.onTouchMove, n), r.addEventListener(a.end, e.onTouchEnd, o)
                        }
                        (t.simulateTouch && !x.ios && !x.android || t.simulateTouch && !p.touch && x.ios) && (r.addEventListener("mousedown", e.onTouchStart, !1), d.addEventListener("mousemove", e.onTouchMove, n), d.addEventListener("mouseup", e.onTouchEnd, !1))
                    }
                    (t.preventClicks || t.preventClicksPropagation) && r.addEventListener("click", e.onClick, !0), e.on("resize observerUpdate", C)
                }, detachEvents: function () {
                    var e = this, t = e.params, a = e.touchEvents, i = e.el, s = e.wrapperEl,
                        r = "container" === t.touchEventsTarget ? i : s, n = !!t.nested;
                    if (m.ie) r.removeEventListener(a.start, e.onTouchStart, !1), (p.touch ? r : d).removeEventListener(a.move, e.onTouchMove, n), (p.touch ? r : d).removeEventListener(a.end, e.onTouchEnd, !1); else {
                        if (p.touch) {
                            var o = !("onTouchStart" !== a.start || !p.passiveListener || !t.passiveListeners) && {
                                passive: !0,
                                capture: !1
                            };
                            r.removeEventListener(a.start, e.onTouchStart, o), r.removeEventListener(a.move, e.onTouchMove, n), r.removeEventListener(a.end, e.onTouchEnd, o)
                        }
                        (t.simulateTouch && !x.ios && !x.android || t.simulateTouch && !p.touch && x.ios) && (r.removeEventListener("mousedown", e.onTouchStart, !1), d.removeEventListener("mousemove", e.onTouchMove, n), d.removeEventListener("mouseup", e.onTouchEnd, !1))
                    }
                    (t.preventClicks || t.preventClicksPropagation) && r.removeEventListener("click", e.onClick, !0), e.off("resize observerUpdate", C)
                }
            }, breakpoints: {
                setBreakpoint: function () {
                    var e = this, t = e.activeIndex, a = e.loopedSlides;
                    void 0 === a && (a = 0);
                    var i = e.params, s = i.breakpoints;
                    if (s && (!s || 0 !== Object.keys(s).length)) {
                        var r = e.getBreakpoint(s);
                        if (r && e.currentBreakpoint !== r) {
                            var n = r in s ? s[r] : e.originalParams, o = i.loop && n.slidesPerView !== i.slidesPerView;
                            if (l.extend(e.params, n), l.extend(e, {
                                allowTouchMove: e.params.allowTouchMove,
                                allowSlideNext: e.params.allowSlideNext,
                                allowSlidePrev: e.params.allowSlidePrev
                            }), e.currentBreakpoint = r, o) {
                                var d = t - a;
                                e.loopDestroy(), e.loopCreate(), e.updateSlides(), e.slideTo(d + a, 0, !1)
                            }
                        }
                    }
                }, getBreakpoint: function (e) {
                    if (e) {
                        var t = !1, a = [];
                        Object.keys(e).forEach(function (e) {
                            a.push(e)
                        }), a.sort(function (e, t) {
                            return parseInt(e, 10) > parseInt(t, 10)
                        });
                        for (var i = 0; i < a.length; i += 1) {
                            var r = a[i];
                            r >= s.innerWidth && !t && (t = r)
                        }
                        return t || "max"
                    }
                }
            }, classes: {
                addClasses: function () {
                    var e = this, t = e.classNames, a = e.params, i = e.rtl, r = e.$el, n = [];
                    n.push(a.direction), a.freeMode && n.push("free-mode"), p.flexbox || n.push("no-flexbox"), a.autoHeight && n.push("autoheight"), i && n.push("rtl"), a.slidesPerColumn > 1 && n.push("multirow"), x.android && n.push("android"), x.ios && n.push("ios"), (s.navigator.pointerEnabled || s.navigator.msPointerEnabled) && n.push("wp8-" + a.direction), n.forEach(function (e) {
                        t.push(a.containerModifierClass + e)
                    }), r.addClass(t.join(" "))
                }, removeClasses: function () {
                    var e = this, t = e.$el, a = e.classNames;
                    t.removeClass(a.join(" "))
                }
            }, images: {
                loadImage: function (e, t, a, i, r, n) {
                    function o() {
                        n && n()
                    }

                    var l;
                    e.complete && r ? o() : t ? ((l = new s.Image).onload = o, l.onerror = o, i && (l.sizes = i), a && (l.srcset = a), t && (l.src = t)) : o()
                }, preloadImages: function () {
                    var e = this;
                    e.imagesToLoad = e.$el.find("img");
                    for (var t = 0; t < e.imagesToLoad.length; t += 1) {
                        var a = e.imagesToLoad[t];
                        e.loadImage(a, a.currentSrc || a.getAttribute("src"), a.srcset || a.getAttribute("srcset"), a.sizes || a.getAttribute("sizes"), !0, function () {
                            void 0 !== e && null !== e && e && (void 0 !== e.imagesLoaded && (e.imagesLoaded += 1), e.imagesLoaded === e.imagesToLoad.length && (e.params.updateOnImagesReady && e.update(), e.emit("imagesReady")))
                        })
                    }
                }
            }
        }, k = {}, $ = function (t) {
            function a() {
                for (var i = [], r = arguments.length; r--;) i[r] = arguments[r];
                var n, o;
                if (1 === i.length && i[0].constructor && i[0].constructor === Object) o = i[0]; else {
                    var d;
                    n = (d = i)[0], o = d[1]
                }
                o || (o = {}), o = l.extend({}, o), n && !o.el && (o.el = n), t.call(this, o), Object.keys(P).forEach(function (e) {
                    Object.keys(P[e]).forEach(function (t) {
                        a.prototype[t] || (a.prototype[t] = P[e][t])
                    })
                });
                var c = this;
                Object.keys(c.modules).forEach(function (e) {
                    var t = c.modules[e];
                    if (t.params) {
                        var a = Object.keys(t.params)[0], i = t.params[a];
                        if ("object" != typeof i) return;
                        if (!(a in o && "enabled" in i)) return;
                        !0 === o[a] && (o[a] = {enabled: !0}), "object" != typeof o[a] || "enabled" in o[a] || (o[a].enabled = !0), o[a] || (o[a] = {enabled: !1})
                    }
                });
                var u = l.extend({}, z);
                c.useModulesParams(u), c.params = l.extend({}, u, k, o), c.originalParams = l.extend({}, c.params), c.passedParams = l.extend({}, o);
                var h = e(c.params.el);
                if (n = h[0]) {
                    if (h.length > 1) {
                        var v = [];
                        return h.each(function (e, t) {
                            var i = l.extend({}, o, {el: t});
                            v.push(new a(i))
                        }), v
                    }
                    n.swiper = c, h.data("swiper", c);
                    var f = h.children("." + c.params.wrapperClass);
                    return l.extend(c, {
                        $el: h,
                        el: n,
                        $wrapperEl: f,
                        wrapperEl: f[0],
                        classNames: [],
                        slides: e(),
                        slidesGrid: [],
                        snapGrid: [],
                        slidesSizesGrid: [],
                        isHorizontal: function () {
                            return "horizontal" === c.params.direction
                        },
                        isVertical: function () {
                            return "vertical" === c.params.direction
                        },
                        rtl: "horizontal" === c.params.direction && ("rtl" === n.dir.toLowerCase() || "rtl" === h.css("direction")),
                        wrongRTL: "-webkit-box" === f.css("display"),
                        activeIndex: 0,
                        realIndex: 0,
                        isBeginning: !0,
                        isEnd: !1,
                        translate: 0,
                        progress: 0,
                        velocity: 0,
                        animating: !1,
                        allowSlideNext: c.params.allowSlideNext,
                        allowSlidePrev: c.params.allowSlidePrev,
                        touchEvents: function () {
                            var e = ["touchstart", "touchmove", "touchend"], t = ["mousedown", "mousemove", "mouseup"];
                            return s.navigator.pointerEnabled ? t = ["pointerdown", "pointermove", "pointerup"] : s.navigator.msPointerEnabled && (t = ["MSPointerDown", "MsPointerMove", "MsPointerUp"]), {
                                start: p.touch || !c.params.simulateTouch ? e[0] : t[0],
                                move: p.touch || !c.params.simulateTouch ? e[1] : t[1],
                                end: p.touch || !c.params.simulateTouch ? e[2] : t[2]
                            }
                        }(),
                        touchEventsData: {
                            isTouched: void 0,
                            isMoved: void 0,
                            allowTouchCallbacks: void 0,
                            touchStartTime: void 0,
                            isScrolling: void 0,
                            currentTranslate: void 0,
                            startTranslate: void 0,
                            allowThresholdMove: void 0,
                            formElements: "input, select, textarea, button, video",
                            lastClickTime: l.now(),
                            clickTimeout: void 0,
                            velocities: [],
                            allowMomentumBounce: void 0,
                            isTouchEvent: void 0,
                            startMoving: void 0
                        },
                        allowClick: !0,
                        allowTouchMove: c.params.allowTouchMove,
                        touches: {startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0},
                        imagesToLoad: [],
                        imagesLoaded: 0
                    }), c.useModules(), c.params.init && c.init(), c
                }
            }

            t && (a.__proto__ = t), a.prototype = Object.create(t && t.prototype), a.prototype.constructor = a;
            var i = {extendedDefaults: {}, defaults: {}, Class: {}, $: {}};
            return a.prototype.slidesPerViewDynamic = function () {
                var e = this, t = e.params, a = e.slides, i = e.slidesGrid, s = e.size, r = e.activeIndex, n = 1;
                if (t.centeredSlides) {
                    for (var o, l = a[r].swiperSlideSize, d = r + 1; d < a.length; d += 1) a[d] && !o && (n += 1, (l += a[d].swiperSlideSize) > s && (o = !0));
                    for (var p = r - 1; p >= 0; p -= 1) a[p] && !o && (n += 1, (l += a[p].swiperSlideSize) > s && (o = !0))
                } else for (var c = r + 1; c < a.length; c += 1) i[c] - i[r] < s && (n += 1);
                return n
            }, a.prototype.update = function () {
                function e() {
                    a = Math.min(Math.max(t.translate, t.maxTranslate()), t.minTranslate()), t.setTranslate(a), t.updateActiveIndex(), t.updateSlidesClasses()
                }

                var t = this;
                if (t) {
                    t.updateSize(), t.updateSlides(), t.updateProgress(), t.updateSlidesClasses();
                    var a;
                    t.params.freeMode ? (e(), t.params.autoHeight && t.updateAutoHeight()) : (("auto" === t.params.slidesPerView || t.params.slidesPerView > 1) && t.isEnd && !t.params.centeredSlides ? t.slideTo(t.slides.length - 1, 0, !1, !0) : t.slideTo(t.activeIndex, 0, !1, !0)) || e(), t.emit("update")
                }
            }, a.prototype.init = function () {
                var e = this;
                e.initialized || (e.emit("beforeInit"), e.params.breakpoints && e.setBreakpoint(), e.addClasses(), e.params.loop && e.loopCreate(), e.updateSize(), e.updateSlides(), e.params.grabCursor && e.setGrabCursor(), e.params.preloadImages && e.preloadImages(), e.params.loop ? e.slideTo(e.params.initialSlide + e.loopedSlides, 0, e.params.runCallbacksOnInit) : e.slideTo(e.params.initialSlide, 0, e.params.runCallbacksOnInit), e.attachEvents(), e.initialized = !0, e.emit("init"))
            }, a.prototype.destroy = function (e, t) {
                void 0 === e && (e = !0), void 0 === t && (t = !0);
                var a = this, i = a.params, s = a.$el, r = a.$wrapperEl, n = a.slides;
                a.emit("beforeDestroy"), a.initialized = !1, a.detachEvents(), i.loop && a.loopDestroy(), t && (a.removeClasses(), s.removeAttr("style"), r.removeAttr("style"), n && n.length && n.removeClass([i.slideVisibleClass, i.slideActiveClass, i.slideNextClass, i.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")), a.emit("destroy"), Object.keys(a.eventsListeners).forEach(function (e) {
                    a.off(e)
                }), !1 !== e && (a.$el[0].swiper = null, a.$el.data("swiper", null), l.deleteProps(a), a = null)
            }, a.extendDefaults = function (e) {
                l.extend(k, e)
            }, i.extendedDefaults.get = function () {
                return k
            }, i.defaults.get = function () {
                return z
            }, i.Class.get = function () {
                return t
            }, i.$.get = function () {
                return e
            }, Object.defineProperties(a, i), a
        }(c), I = {name: "device", proto: {device: x}, static: {device: x}},
        L = {name: "support", proto: {support: p}, static: {support: p}},
        D = {name: "browser", proto: {browser: m}, static: {browser: m}}, O = {
            name: "resize", create: function () {
                var e = this;
                l.extend(e, {
                    resize: {
                        resizeHandler: function () {
                            e && e.initialized && (e.emit("beforeResize"), e.emit("resize"))
                        }, orientationChangeHandler: function () {
                            e && e.initialized && e.emit("orientationchange")
                        }
                    }
                })
            }, on: {
                init: function () {
                    var e = this;
                    s.addEventListener("resize", e.resize.resizeHandler), s.addEventListener("orientationchange", e.resize.orientationChangeHandler)
                }, destroy: function () {
                    var e = this;
                    s.removeEventListener("resize", e.resize.resizeHandler), s.removeEventListener("orientationchange", e.resize.orientationChangeHandler)
                }
            }
        }, A = {
            func: s.MutationObserver || s.WebkitMutationObserver, attach: function (e, t) {
                void 0 === t && (t = {});
                var a = this, i = new (0, A.func)(function (e) {
                    e.forEach(function (e) {
                        a.emit("observerUpdate", e)
                    })
                });
                i.observe(e, {
                    attributes: void 0 === t.attributes || t.attributes,
                    childList: void 0 === t.childList || t.childList,
                    characterData: void 0 === t.characterData || t.characterData
                }), a.observer.observers.push(i)
            }, init: function () {
                var e = this;
                if (p.observer && e.params.observer) {
                    if (e.params.observeParents) for (var t = e.$el.parents(), a = 0; a < t.length; a += 1) e.observer.attach(t[a]);
                    e.observer.attach(e.$el[0], {childList: !1}), e.observer.attach(e.$wrapperEl[0], {attributes: !1})
                }
            }, destroy: function () {
                var e = this;
                e.observer.observers.forEach(function (e) {
                    e.disconnect()
                }), e.observer.observers = []
            }
        }, H = {
            name: "observer", params: {observer: !1, observeParents: !1}, create: function () {
                var e = this;
                l.extend(e, {
                    observer: {
                        init: A.init.bind(e),
                        attach: A.attach.bind(e),
                        destroy: A.destroy.bind(e),
                        observers: []
                    }
                })
            }, on: {
                init: function () {
                    this.observer.init()
                }, destroy: function () {
                    this.observer.destroy()
                }
            }
        }, X = {
            update: function (e) {
                function t() {
                    a.updateSlides(), a.updateProgress(), a.updateSlidesClasses(), a.lazy && a.params.lazy.enabled && a.lazy.load()
                }

                var a = this, i = a.params, s = i.slidesPerView, r = i.slidesPerGroup, n = i.centeredSlides, o = a.virtual,
                    d = o.from, p = o.to, c = o.slides, u = o.slidesGrid, h = o.renderSlide, v = o.offset;
                a.updateActiveIndex();
                var f, m = a.activeIndex || 0;
                f = a.rtl && a.isHorizontal() ? "right" : a.isHorizontal() ? "left" : "top";
                var g, b;
                n ? (g = Math.floor(s / 2) + r, b = Math.floor(s / 2) + r) : (g = s + (r - 1), b = r);
                var w = Math.max((m || 0) - b, 0), y = Math.min((m || 0) + g, c.length - 1),
                    x = (a.slidesGrid[w] || 0) - (a.slidesGrid[0] || 0);
                if (l.extend(a.virtual, {
                    from: w,
                    to: y,
                    offset: x,
                    slidesGrid: a.slidesGrid
                }), d === w && p === y && !e) return a.slidesGrid !== u && x !== v && a.slides.css(f, x + "px"), void a.updateProgress();
                if (a.params.virtual.renderExternal) return a.params.virtual.renderExternal.call(a, {
                    offset: x,
                    from: w,
                    to: y,
                    slides: function () {
                        for (var e = [], t = w; t <= y; t += 1) e.push(c[t]);
                        return e
                    }()
                }), void t();
                var E = [], T = [];
                if (e) a.$wrapperEl.find("." + a.params.slideClass).remove(); else for (var S = d; S <= p; S += 1) (S < w || S > y) && a.$wrapperEl.find("." + a.params.slideClass + '[data-swiper-slide-index="' + S + '"]').remove();
                for (var C = 0; C < c.length; C += 1) C >= w && C <= y && (void 0 === p || e ? T.push(C) : (C > p && T.push(C), C < d && E.push(C)));
                T.forEach(function (e) {
                    a.$wrapperEl.append(h(c[e], e))
                }), E.sort(function (e, t) {
                    return e < t
                }).forEach(function (e) {
                    a.$wrapperEl.prepend(h(c[e], e))
                }), a.$wrapperEl.children(".swiper-slide").css(f, x + "px"), t()
            }, renderSlide: function (t, a) {
                var i = this, s = i.params.virtual;
                if (s.cache && i.virtual.cache[a]) return i.virtual.cache[a];
                var r = e(s.renderSlide ? s.renderSlide.call(i, t, a) : '<div class="' + i.params.slideClass + '" data-swiper-slide-index="' + a + '">' + t + "</div>");
                return r.attr("data-swiper-slide-index") || r.attr("data-swiper-slide-index", a), s.cache && (i.virtual.cache[a] = r), r
            }, appendSlide: function (e) {
                var t = this;
                t.virtual.slides.push(e), t.virtual.update(!0)
            }, prependSlide: function (e) {
                var t = this;
                if (t.virtual.slides.unshift(e), t.params.virtual.cache) {
                    var a = t.virtual.cache, i = {};
                    Object.keys(a).forEach(function (e) {
                        i[e + 1] = a[e]
                    }), t.virtual.cache = i
                }
                t.virtual.update(!0), t.slideNext(0)
            }
        }, N = {
            name: "virtual",
            params: {virtual: {enabled: !1, slides: [], cache: !0, renderSlide: null, renderExternal: null}},
            create: function () {
                var e = this;
                l.extend(e, {
                    virtual: {
                        update: X.update.bind(e),
                        appendSlide: X.appendSlide.bind(e),
                        prependSlide: X.prependSlide.bind(e),
                        renderSlide: X.renderSlide.bind(e),
                        slides: e.params.virtual.slides,
                        cache: {}
                    }
                })
            },
            on: {
                beforeInit: function () {
                    var e = this;
                    e.params.virtual.enabled && (e.classNames.push(e.params.containerModifierClass + "virtual"), l.extend(e.params, {watchSlidesProgress: !0}), e.virtual.update())
                }, setTranslate: function () {
                    var e = this;
                    e.params.virtual.enabled && e.virtual.update()
                }
            }
        }, Y = {
            handle: function (e) {
                var t = this, a = e;
                a.originalEvent && (a = a.originalEvent);
                var i = a.keyCode || a.charCode;
                if (!t.allowSlideNext && (t.isHorizontal() && 39 === i || t.isVertical() && 40 === i)) return !1;
                if (!t.allowSlidePrev && (t.isHorizontal() && 37 === i || t.isVertical() && 38 === i)) return !1;
                if (!(a.shiftKey || a.altKey || a.ctrlKey || a.metaKey || d.activeElement && d.activeElement.nodeName && ("input" === d.activeElement.nodeName.toLowerCase() || "textarea" === d.activeElement.nodeName.toLowerCase()))) {
                    if (37 === i || 39 === i || 38 === i || 40 === i) {
                        var r = !1;
                        if (t.$el.parents("." + t.params.slideClass).length > 0 && 0 === t.$el.parents("." + t.params.slideActiveClass).length) return;
                        var n = {left: s.pageXOffset, top: s.pageYOffset}, o = s.innerWidth, l = s.innerHeight,
                            p = t.$el.offset();
                        t.rtl && (p.left -= t.$el[0].scrollLeft);
                        for (var c = [[p.left, p.top], [p.left + t.width, p.top], [p.left, p.top + t.height], [p.left + t.width, p.top + t.height]], u = 0; u < c.length; u += 1) {
                            var h = c[u];
                            h[0] >= n.left && h[0] <= n.left + o && h[1] >= n.top && h[1] <= n.top + l && (r = !0)
                        }
                        if (!r) return
                    }
                    t.isHorizontal() ? (37 !== i && 39 !== i || (a.preventDefault ? a.preventDefault() : a.returnValue = !1), (39 === i && !t.rtl || 37 === i && t.rtl) && t.slideNext(), (37 === i && !t.rtl || 39 === i && t.rtl) && t.slidePrev()) : (38 !== i && 40 !== i || (a.preventDefault ? a.preventDefault() : a.returnValue = !1), 40 === i && t.slideNext(), 38 === i && t.slidePrev()), t.emit("keyPress", i)
                }
            }, enable: function () {
                var t = this;
                t.keyboard.enabled || (e(d).on("keydown", t.keyboard.handle), t.keyboard.enabled = !0)
            }, disable: function () {
                var t = this;
                t.keyboard.enabled && (e(d).off("keydown", t.keyboard.handle), t.keyboard.enabled = !1)
            }
        }, G = {
            name: "keyboard", params: {keyboard: {enabled: !1}}, create: function () {
                var e = this;
                l.extend(e, {
                    keyboard: {
                        enabled: !1,
                        enable: Y.enable.bind(e),
                        disable: Y.disable.bind(e),
                        handle: Y.handle.bind(e)
                    }
                })
            }, on: {
                init: function () {
                    var e = this;
                    e.params.keyboard.enabled && e.keyboard.enable()
                }, destroy: function () {
                    var e = this;
                    e.keyboard.enabled && e.keyboard.disable()
                }
            }
        }, B = {
            lastScrollTime: l.now(),
            event: s.navigator.userAgent.indexOf("firefox") > -1 ? "DOMMouseScroll" : a() ? "wheel" : "mousewheel",
            normalize: function (e) {
                var t = 0, a = 0, i = 0, s = 0;
                return "detail" in e && (a = e.detail), "wheelDelta" in e && (a = -e.wheelDelta / 120), "wheelDeltaY" in e && (a = -e.wheelDeltaY / 120), "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120), "axis" in e && e.axis === e.HORIZONTAL_AXIS && (t = a, a = 0), i = 10 * t, s = 10 * a, "deltaY" in e && (s = e.deltaY), "deltaX" in e && (i = e.deltaX), (i || s) && e.deltaMode && (1 === e.deltaMode ? (i *= 40, s *= 40) : (i *= 800, s *= 800)), i && !t && (t = i < 1 ? -1 : 1), s && !a && (a = s < 1 ? -1 : 1), {
                    spinX: t,
                    spinY: a,
                    pixelX: i,
                    pixelY: s
                }
            },
            handle: function (e) {
                var t = e, a = this, i = a.params.mousewheel;
                t.originalEvent && (t = t.originalEvent);
                var r = 0, n = a.rtl ? -1 : 1, o = B.normalize(t);
                if (i.forceToAxis) if (a.isHorizontal()) {
                    if (!(Math.abs(o.pixelX) > Math.abs(o.pixelY))) return !0;
                    r = o.pixelX * n
                } else {
                    if (!(Math.abs(o.pixelY) > Math.abs(o.pixelX))) return !0;
                    r = o.pixelY
                } else r = Math.abs(o.pixelX) > Math.abs(o.pixelY) ? -o.pixelX * n : -o.pixelY;
                if (0 === r) return !0;
                if (i.invert && (r = -r), a.params.freeMode) {
                    var d = a.getTranslate() + r * i.sensitivity, p = a.isBeginning, c = a.isEnd;
                    if (d >= a.minTranslate() && (d = a.minTranslate()), d <= a.maxTranslate() && (d = a.maxTranslate()), a.setTransition(0), a.setTranslate(d), a.updateProgress(), a.updateActiveIndex(), a.updateSlidesClasses(), (!p && a.isBeginning || !c && a.isEnd) && a.updateSlidesClasses(), a.params.freeModeSticky && (clearTimeout(a.mousewheel.timeout), a.mousewheel.timeout = l.nextTick(function () {
                        a.slideReset()
                    }, 300)), a.emit("scroll", t), a.params.autoplay && a.params.autoplayDisableOnInteraction && a.stopAutoplay(), 0 === d || d === a.maxTranslate()) return !0
                } else {
                    if (l.now() - a.mousewheel.lastScrollTime > 60) if (r < 0) if (a.isEnd && !a.params.loop || a.animating) {
                        if (i.releaseOnEdges) return !0
                    } else a.slideNext(), a.emit("scroll", t); else if (a.isBeginning && !a.params.loop || a.animating) {
                        if (i.releaseOnEdges) return !0
                    } else a.slidePrev(), a.emit("scroll", t);
                    a.mousewheel.lastScrollTime = (new s.Date).getTime()
                }
                return t.preventDefault ? t.preventDefault() : t.returnValue = !1, !1
            },
            enable: function () {
                var t = this;
                if (!B.event) return !1;
                if (t.mousewheel.enabled) return !1;
                var a = t.$el;
                return "container" !== t.params.mousewheel.eventsTarged && (a = e(t.params.mousewheel.eventsTarged)), a.on(B.event, t.mousewheel.handle), t.mousewheel.enabled = !0, !0
            },
            disable: function () {
                var t = this;
                if (!B.event) return !1;
                if (!t.mousewheel.enabled) return !1;
                var a = t.$el;
                return "container" !== t.params.mousewheel.eventsTarged && (a = e(t.params.mousewheel.eventsTarged)), a.off(B.event, t.mousewheel.handle), t.mousewheel.enabled = !1, !0
            }
        }, V = {
            name: "mousewheel",
            params: {
                mousewheel: {
                    enabled: !1,
                    releaseOnEdges: !1,
                    invert: !1,
                    forceToAxis: !1,
                    sensitivity: 1,
                    eventsTarged: "container"
                }
            },
            create: function () {
                var e = this;
                l.extend(e, {
                    mousewheel: {
                        enabled: !1,
                        enable: B.enable.bind(e),
                        disable: B.disable.bind(e),
                        handle: B.handle.bind(e),
                        lastScrollTime: l.now()
                    }
                })
            },
            on: {
                init: function () {
                    var e = this;
                    e.params.mousewheel.enabled && e.mousewheel.enable()
                }, destroy: function () {
                    var e = this;
                    e.mousewheel.enabled && e.mousewheel.disable()
                }
            }
        }, R = {
            update: function () {
                var e = this, t = e.params.navigation;
                if (!e.params.loop) {
                    var a = e.navigation, i = a.$nextEl, s = a.$prevEl;
                    s && s.length > 0 && (e.isBeginning ? s.addClass(t.disabledClass) : s.removeClass(t.disabledClass)), i && i.length > 0 && (e.isEnd ? i.addClass(t.disabledClass) : i.removeClass(t.disabledClass))
                }
            }, init: function () {
                var t = this, a = t.params.navigation;
                if (a.nextEl || a.prevEl) {
                    var i, s;
                    a.nextEl && (i = e(a.nextEl), t.params.uniqueNavElements && "string" == typeof a.nextEl && i.length > 1 && 1 === t.$el.find(a.nextEl).length && (i = t.$el.find(a.nextEl))), a.prevEl && (s = e(a.prevEl), t.params.uniqueNavElements && "string" == typeof a.prevEl && s.length > 1 && 1 === t.$el.find(a.prevEl).length && (s = t.$el.find(a.prevEl))), i && i.length > 0 && i.on("click", function (e) {
                        e.preventDefault(), t.isEnd && !t.params.loop || t.slideNext()
                    }), s && s.length > 0 && s.on("click", function (e) {
                        e.preventDefault(), t.isBeginning && !t.params.loop || t.slidePrev()
                    }), l.extend(t.navigation, {$nextEl: i, nextEl: i && i[0], $prevEl: s, prevEl: s && s[0]})
                }
            }, destroy: function () {
                var e = this, t = e.navigation, a = t.$nextEl, i = t.$prevEl;
                a && a.length && (a.off("click"), a.removeClass(e.params.navigation.disabledClass)), i && i.length && (i.off("click"), i.removeClass(e.params.navigation.disabledClass))
            }
        }, W = {
            name: "navigation",
            params: {
                navigation: {
                    nextEl: null,
                    prevEl: null,
                    hideOnClick: !1,
                    disabledClass: "swiper-button-disabled",
                    hiddenClass: "swiper-button-hidden"
                }
            },
            create: function () {
                var e = this;
                l.extend(e, {navigation: {init: R.init.bind(e), update: R.update.bind(e), destroy: R.destroy.bind(e)}})
            },
            on: {
                init: function () {
                    var e = this;
                    e.navigation.init(), e.navigation.update()
                }, toEdge: function () {
                    this.navigation.update()
                }, fromEdge: function () {
                    this.navigation.update()
                }, destroy: function () {
                    this.navigation.destroy()
                }, click: function (t) {
                    var a = this, i = a.navigation, s = i.$nextEl, r = i.$prevEl;
                    !a.params.navigation.hideOnClick || e(t.target).is(r) || e(t.target).is(s) || (s && s.toggleClass(a.params.navigation.hiddenClass), r && r.toggleClass(a.params.navigation.hiddenClass))
                }
            }
        }, F = {
            update: function () {
                var t = this, a = t.rtl, i = t.params.pagination;
                if (i.el && t.pagination.el && t.pagination.$el && 0 !== t.pagination.$el.length) {
                    var s, r = t.virtual && t.params.virtual.enabled ? t.virtual.slides.length : t.slides.length,
                        n = t.pagination.$el,
                        o = t.params.loop ? Math.ceil((r - 2 * t.loopedSlides) / t.params.slidesPerGroup) : t.snapGrid.length;
                    if (t.params.loop ? ((s = Math.ceil((t.activeIndex - t.loopedSlides) / t.params.slidesPerGroup)) > r - 1 - 2 * t.loopedSlides && (s -= r - 2 * t.loopedSlides), s > o - 1 && (s -= o), s < 0 && "bullets" !== t.params.paginationType && (s = o + s)) : s = void 0 !== t.snapIndex ? t.snapIndex : t.activeIndex || 0, "bullets" === i.type && t.pagination.bullets && t.pagination.bullets.length > 0) {
                        var l = t.pagination.bullets;
                        if (i.dynamicBullets && (t.pagination.bulletSize = l.eq(0)[t.isHorizontal() ? "outerWidth" : "outerHeight"](!0), n.css(t.isHorizontal() ? "width" : "height", 5 * t.pagination.bulletSize + "px")), l.removeClass(i.bulletActiveClass + " " + i.bulletActiveClass + "-next " + i.bulletActiveClass + "-next-next " + i.bulletActiveClass + "-prev " + i.bulletActiveClass + "-prev-prev"), n.length > 1) l.each(function (t, a) {
                            var r = e(a);
                            r.index() === s && (r.addClass(i.bulletActiveClass), i.dynamicBullets && (r.prev().addClass(i.bulletActiveClass + "-prev").prev().addClass(i.bulletActiveClass + "-prev-prev"), r.next().addClass(i.bulletActiveClass + "-next").next().addClass(i.bulletActiveClass + "-next-next")))
                        }); else {
                            var d = l.eq(s);
                            d.addClass(i.bulletActiveClass), i.dynamicBullets && (d.prev().addClass(i.bulletActiveClass + "-prev").prev().addClass(i.bulletActiveClass + "-prev-prev"), d.next().addClass(i.bulletActiveClass + "-next").next().addClass(i.bulletActiveClass + "-next-next"))
                        }
                        if (i.dynamicBullets) {
                            var p = (5 * t.pagination.bulletSize - t.pagination.bulletSize) / 2 - s * t.pagination.bulletSize,
                                c = a ? "right" : "left";
                            l.css(t.isHorizontal() ? c : "top", p + "px")
                        }
                    }
                    if ("fraction" === i.type && (n.find("." + i.currentClass).text(s + 1), n.find("." + i.totalClass).text(o)), "progressbar" === i.type) {
                        var u = (s + 1) / o, h = u, v = 1;
                        t.isHorizontal() || (v = u, h = 1), n.find("." + i.progressbarFillClass).transform("translate3d(0,0,0) scaleX(" + h + ") scaleY(" + v + ")").transition(t.params.speed)
                    }
                    "custom" === i.type && i.renderCustom ? (n.html(i.renderCustom(t, s + 1, o)), t.emit("paginationRender", t, n[0])) : t.emit("paginationUpdate", t, n[0])
                }
            }, render: function () {
                var e = this, t = e.params.pagination;
                if (t.el && e.pagination.el && e.pagination.$el && 0 !== e.pagination.$el.length) {
                    var a = e.virtual && e.params.virtual.enabled ? e.virtual.slides.length : e.slides.length,
                        i = e.pagination.$el, s = "";
                    if ("bullets" === t.type) {
                        for (var r = e.params.loop ? Math.ceil((a - 2 * e.loopedSlides) / e.params.slidesPerGroup) : e.snapGrid.length, n = 0; n < r; n += 1) t.renderBullet ? s += t.renderBullet.call(e, n, t.bulletClass) : s += "<" + t.bulletElement + ' class="' + t.bulletClass + '"></' + t.bulletElement + ">";
                        i.html(s), e.pagination.bullets = i.find("." + t.bulletClass)
                    }
                    "fraction" === t.type && (s = t.renderFraction ? t.renderFraction.call(e, t.currentClass, t.totalClass) : '<span class="' + t.currentClass + '"></span> / <span class="' + t.totalClass + '"></span>', i.html(s)), "progressbar" === t.type && (s = t.renderProgressbar ? t.renderProgressbar.call(e, t.progressbarFillClass) : '<span class="' + t.progressbarFillClass + '"></span>', i.html(s)), "custom" !== t.type && e.emit("paginationRender", e.pagination.$el[0])
                }
            }, init: function () {
                var t = this, a = t.params.pagination;
                if (a.el) {
                    var i = e(a.el);
                    0 !== i.length && (t.params.uniqueNavElements && "string" == typeof a.el && i.length > 1 && 1 === t.$el.find(a.el).length && (i = t.$el.find(a.el)), "bullets" === a.type && a.clickable && i.addClass(a.clickableClass), i.addClass(a.modifierClass + a.type), "bullets" === a.type && a.dynamicBullets && i.addClass("" + a.modifierClass + a.type + "-dynamic"), a.clickable && i.on("click", "." + a.bulletClass, function (a) {
                        a.preventDefault();
                        var i = e(this).index() * t.params.slidesPerGroup;
                        t.params.loop && (i += t.loopedSlides), t.slideTo(i)
                    }), l.extend(t.pagination, {$el: i, el: i[0]}))
                }
            }, destroy: function () {
                var e = this, t = e.params.pagination;
                if (t.el && e.pagination.el && e.pagination.$el && 0 !== e.pagination.$el.length) {
                    var a = e.pagination.$el;
                    a.removeClass(t.hiddenClass), a.removeClass(t.modifierClass + t.type), e.pagination.bullets && e.pagination.bullets.removeClass(t.bulletActiveClass), t.clickable && a.off("click", "." + t.bulletClass)
                }
            }
        }, j = {
            name: "pagination",
            params: {
                pagination: {
                    el: null,
                    bulletElement: "span",
                    clickable: !1,
                    hideOnClick: !1,
                    renderBullet: null,
                    renderProgressbar: null,
                    renderFraction: null,
                    renderCustom: null,
                    type: "bullets",
                    dynamicBullets: !1,
                    bulletClass: "swiper-pagination-bullet",
                    bulletActiveClass: "swiper-pagination-bullet-active",
                    modifierClass: "swiper-pagination-",
                    currentClass: "swiper-pagination-current",
                    totalClass: "swiper-pagination-total",
                    hiddenClass: "swiper-pagination-hidden",
                    progressbarFillClass: "swiper-pagination-progressbar-fill",
                    clickableClass: "swiper-pagination-clickable"
                }
            },
            create: function () {
                var e = this;
                l.extend(e, {
                    pagination: {
                        init: F.init.bind(e),
                        render: F.render.bind(e),
                        update: F.update.bind(e),
                        destroy: F.destroy.bind(e)
                    }
                })
            },
            on: {
                init: function () {
                    var e = this;
                    e.pagination.init(), e.pagination.render(), e.pagination.update()
                }, activeIndexChange: function () {
                    var e = this;
                    e.params.loop ? e.pagination.update() : void 0 === e.snapIndex && e.pagination.update()
                }, snapIndexChange: function () {
                    var e = this;
                    e.params.loop || e.pagination.update()
                }, slidesLengthChange: function () {
                    var e = this;
                    e.params.loop && (e.pagination.render(), e.pagination.update())
                }, snapGridLengthChange: function () {
                    var e = this;
                    e.params.loop || (e.pagination.render(), e.pagination.update())
                }, destroy: function () {
                    this.pagination.destroy()
                }, click: function (t) {
                    var a = this;
                    a.params.pagination.el && a.params.pagination.hideOnClick && a.pagination.$el.length > 0 && !e(t.target).hasClass(a.params.pagination.bulletClass) && a.pagination.$el.toggleClass(a.params.pagination.hiddenClass)
                }
            }
        }, q = {
            setTranslate: function () {
                var e = this;
                if (e.params.scrollbar.el && e.scrollbar.el) {
                    var t = e.scrollbar, a = e.rtl, i = e.progress, s = t.dragSize, r = t.trackSize, n = t.$dragEl,
                        o = t.$el, l = e.params.scrollbar, d = s, c = (r - s) * i;
                    a && e.isHorizontal() ? (c = -c) > 0 ? (d = s - c, c = 0) : -c + s > r && (d = r + c) : c < 0 ? (d = s + c, c = 0) : c + s > r && (d = r - c), e.isHorizontal() ? (p.transforms3d ? n.transform("translate3d(" + c + "px, 0, 0)") : n.transform("translateX(" + c + "px)"), n[0].style.width = d + "px") : (p.transforms3d ? n.transform("translate3d(0px, " + c + "px, 0)") : n.transform("translateY(" + c + "px)"), n[0].style.height = d + "px"), l.hide && (clearTimeout(e.scrollbar.timeout), o[0].style.opacity = 1, e.scrollbar.timeout = setTimeout(function () {
                        o[0].style.opacity = 0, o.transition(400)
                    }, 1e3))
                }
            }, setTransition: function (e) {
                var t = this;
                t.params.scrollbar.el && t.scrollbar.el && t.scrollbar.$dragEl.transition(e)
            }, updateSize: function () {
                var e = this;
                if (e.params.scrollbar.el && e.scrollbar.el) {
                    var t = e.scrollbar, a = t.$dragEl, i = t.$el;
                    a[0].style.width = "", a[0].style.height = "";
                    var s, r = e.isHorizontal() ? i[0].offsetWidth : i[0].offsetHeight, n = e.size / e.virtualSize,
                        o = n * (r / e.size);
                    s = "auto" === e.params.scrollbar.dragSize ? r * n : parseInt(e.params.scrollbar.dragSize, 10), e.isHorizontal() ? a[0].style.width = s + "px" : a[0].style.height = s + "px", i[0].style.display = n >= 1 ? "none" : "", e.params.scrollbarHide && (i[0].style.opacity = 0), l.extend(t, {
                        trackSize: r,
                        divider: n,
                        moveDivider: o,
                        dragSize: s
                    })
                }
            }, setDragPosition: function (e) {
                var t, a = this, i = a.scrollbar, s = i.$el, r = i.dragSize, n = i.moveDivider,
                    o = (t = a.isHorizontal() ? "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].pageX : e.pageX || e.clientX : "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].pageY : e.pageY || e.clientY) - s.offset()[a.isHorizontal() ? "left" : "top"] - r / 2,
                    l = -a.minTranslate() * n, d = -a.maxTranslate() * n;
                o < l ? o = l : o > d && (o = d), a.rtl && (o = d - o), o = -o / n, a.updateProgress(o), a.setTranslate(o), a.updateActiveIndex(), a.updateSlidesClasses()
            }, onDragStart: function (e) {
                var t = this, a = t.params.scrollbar, i = t.scrollbar, s = t.$wrapperEl, r = i.$el, n = i.$dragEl;
                t.scrollbar.isTouched = !0, e.preventDefault(), e.stopPropagation(), s.transition(100), n.transition(100), i.setDragPosition(e), clearTimeout(t.scrollbar.dragTimeout), r.transition(0), a.hide && r.css("opacity", 1), t.emit("scrollbarDragStart", e)
            }, onDragMove: function (e) {
                var t = this, a = t.scrollbar, i = t.$wrapperEl, s = a.$el, r = a.$dragEl;
                t.scrollbar.isTouched && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, a.setDragPosition(e), i.transition(0), s.transition(0), r.transition(0), t.emit("scrollbarDragMove", e))
            }, onDragEnd: function (e) {
                var t = this, a = t.params.scrollbar, i = t.scrollbar.$el;
                t.scrollbar.isTouched && (t.scrollbar.isTouched = !1, a.hide && (clearTimeout(t.scrollbar.dragTimeout), t.scrollbar.dragTimeout = l.nextTick(function () {
                    i.css("opacity", 0), i.transition(400)
                }, 1e3)), t.emit("scrollbarDragEnd", e), a.snapOnRelease && t.slideReset())
            }, enableDraggable: function () {
                var t = this;
                if (t.params.scrollbar.el) {
                    var a = t.scrollbar.$el, i = p.touch ? a[0] : document;
                    a.on(t.scrollbar.dragEvents.start, t.scrollbar.onDragStart), e(i).on(t.scrollbar.dragEvents.move, t.scrollbar.onDragMove), e(i).on(t.scrollbar.dragEvents.end, t.scrollbar.onDragEnd)
                }
            }, disableDraggable: function () {
                var t = this;
                if (t.params.scrollbar.el) {
                    var a = t.scrollbar.$el, i = p.touch ? a[0] : document;
                    a.off(t.scrollbar.dragEvents.start), e(i).off(t.scrollbar.dragEvents.move), e(i).off(t.scrollbar.dragEvents.end)
                }
            }, init: function () {
                var t = this;
                if (t.params.scrollbar.el) {
                    var a = t.scrollbar, i = t.$el, s = t.touchEvents, r = t.params.scrollbar, n = e(r.el);
                    t.params.uniqueNavElements && "string" == typeof r.el && n.length > 1 && 1 === i.find(r.el).length && (n = i.find(r.el));
                    var o = n.find(".swiper-scrollbar-drag");
                    0 === o.length && (o = e('<div class="swiper-scrollbar-drag"></div>'), n.append(o)), t.scrollbar.dragEvents = !1 !== t.params.simulateTouch || p.touch ? s : {
                        start: "mousedown",
                        move: "mousemove",
                        end: "mouseup"
                    }, l.extend(a, {$el: n, el: n[0], $dragEl: o, dragEl: o[0]}), r.draggable && a.enableDraggable()
                }
            }, destroy: function () {
                this.scrollbar.disableDraggable()
            }
        }, K = {
            name: "scrollbar",
            params: {scrollbar: {el: null, dragSize: "auto", hide: !1, draggable: !1, snapOnRelease: !0}},
            create: function () {
                var e = this;
                l.extend(e, {
                    scrollbar: {
                        init: q.init.bind(e),
                        destroy: q.destroy.bind(e),
                        updateSize: q.updateSize.bind(e),
                        setTranslate: q.setTranslate.bind(e),
                        setTransition: q.setTransition.bind(e),
                        enableDraggable: q.enableDraggable.bind(e),
                        disableDraggable: q.disableDraggable.bind(e),
                        setDragPosition: q.setDragPosition.bind(e),
                        onDragStart: q.onDragStart.bind(e),
                        onDragMove: q.onDragMove.bind(e),
                        onDragEnd: q.onDragEnd.bind(e),
                        isTouched: !1,
                        timeout: null,
                        dragTimeout: null
                    }
                })
            },
            on: {
                init: function () {
                    var e = this;
                    e.scrollbar.init(), e.scrollbar.updateSize(), e.scrollbar.setTranslate()
                }, update: function () {
                    this.scrollbar.updateSize()
                }, resize: function () {
                    this.scrollbar.updateSize()
                }, observerUpdate: function () {
                    this.scrollbar.updateSize()
                }, setTranslate: function () {
                    this.scrollbar.setTranslate()
                }, setTransition: function (e) {
                    this.scrollbar.setTransition(e)
                }, destroy: function () {
                    this.scrollbar.destroy()
                }
            }
        }, U = {
            setTransform: function (t, a) {
                var i = this, s = i.rtl, r = e(t), n = s ? -1 : 1, o = r.attr("data-swiper-parallax") || "0",
                    l = r.attr("data-swiper-parallax-x"), d = r.attr("data-swiper-parallax-y"),
                    p = r.attr("data-swiper-parallax-scale"), c = r.attr("data-swiper-parallax-opacity");
                if (l || d ? (l = l || "0", d = d || "0") : i.isHorizontal() ? (l = o, d = "0") : (d = o, l = "0"), l = l.indexOf("%") >= 0 ? parseInt(l, 10) * a * n + "%" : l * a * n + "px", d = d.indexOf("%") >= 0 ? parseInt(d, 10) * a + "%" : d * a + "px", void 0 !== c && null !== c) {
                    var u = c - (c - 1) * (1 - Math.abs(a));
                    r[0].style.opacity = u
                }
                if (void 0 === p || null === p) r.transform("translate3d(" + l + ", " + d + ", 0px)"); else {
                    var h = p - (p - 1) * (1 - Math.abs(a));
                    r.transform("translate3d(" + l + ", " + d + ", 0px) scale(" + h + ")")
                }
            }, setTranslate: function () {
                var t = this, a = t.$el, i = t.slides, s = t.progress;
                a.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function (e, a) {
                    t.parallax.setTransform(a, s)
                }), i.each(function (a, i) {
                    e(i).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function (e, a) {
                        var s = Math.min(Math.max(i.progress, -1), 1);
                        t.parallax.setTransform(a, s)
                    })
                })
            }, setTransition: function (t) {
                void 0 === t && (t = this.params.speed), this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function (a, i) {
                    var s = e(i), r = parseInt(s.attr("data-swiper-parallax-duration"), 10) || t;
                    0 === t && (r = 0), s.transition(r)
                })
            }
        }, _ = {
            name: "parallax", params: {parallax: {enabled: !1}}, create: function () {
                var e = this;
                l.extend(e, {
                    parallax: {
                        setTransform: U.setTransform.bind(e),
                        setTranslate: U.setTranslate.bind(e),
                        setTransition: U.setTransition.bind(e)
                    }
                })
            }, on: {
                beforeInit: function () {
                    this.params.watchSlidesProgress = !0
                }, init: function () {
                    var e = this;
                    e.params.parallax && e.parallax.setTranslate()
                }, setTranslate: function () {
                    var e = this;
                    e.params.parallax && e.parallax.setTranslate()
                }, setTransition: function (e) {
                    var t = this;
                    t.params.parallax && t.parallax.setTransition(e)
                }
            }
        }, Z = {
            getDistanceBetweenTouches: function (e) {
                if (e.targetTouches.length < 2) return 1;
                var t = e.targetTouches[0].pageX, a = e.targetTouches[0].pageY, i = e.targetTouches[1].pageX,
                    s = e.targetTouches[1].pageY;
                return Math.sqrt(Math.pow(i - t, 2) + Math.pow(s - a, 2))
            }, onGestureStart: function (t) {
                var a = this, i = a.params.zoom, s = a.zoom.gesture;
                if (!p.gestures) {
                    if ("touchstart" !== t.type || "touchstart" === t.type && t.targetTouches.length < 2) return;
                    s.scaleStart = Z.getDistanceBetweenTouches(t)
                }
                s.$slideEl && s.$slideEl.length || (s.$slideEl = e(this), 0 === s.$slideEl.length && (s.$slideEl = a.slides.eq(a.activeIndex)), s.$imageEl = s.$slideEl.find("img, svg, canvas"), s.$imageWrapEl = s.$imageEl.parent("." + i.containerClass), s.maxRatio = s.$imageWrapEl.attr("data-swiper-zoom") || i.maxRatio, 0 !== s.$imageWrapEl.length) ? (s.$imageEl.transition(0), a.zoom.isScaling = !0) : s.$imageEl = void 0
            }, onGestureChange: function (e) {
                var t = this, a = t.params.zoom, i = t.zoom, s = i.gesture;
                if (!p.gestures) {
                    if ("touchmove" !== e.type || "touchmove" === e.type && e.targetTouches.length < 2) return;
                    s.scaleMove = Z.getDistanceBetweenTouches(e)
                }
                s.$imageEl && 0 !== s.$imageEl.length && (p.gestures ? t.zoom.scale = e.scale * i.currentScale : i.scale = s.scaleMove / s.scaleStart * i.currentScale, i.scale > s.maxRatio && (i.scale = s.maxRatio - 1 + Math.pow(i.scale - s.maxRatio + 1, .5)), i.scale < a.minRatio && (i.scale = a.minRatio + 1 - Math.pow(a.minRatio - i.scale + 1, .5)), s.$imageEl.transform("translate3d(0,0,0) scale(" + i.scale + ")"))
            }, onGestureEnd: function (e) {
                var t = this, a = t.params.zoom, i = t.zoom, s = i.gesture;
                !p.gestures && ("touchend" !== e.type || "touchend" === e.type && e.changedTouches.length < 2) || s.$imageEl && 0 !== s.$imageEl.length && (i.scale = Math.max(Math.min(i.scale, s.maxRatio), a.minRatio), s.$imageEl.transition(t.params.speed).transform("translate3d(0,0,0) scale(" + i.scale + ")"), i.currentScale = i.scale, i.isScaling = !1, 1 === i.scale && (s.$slideEl = void 0))
            }, onTouchStart: function (e) {
                var t = this.zoom, a = t.gesture, i = t.image;
                a.$imageEl && 0 !== a.$imageEl.length && (i.isTouched || (x.android && e.preventDefault(), i.isTouched = !0, i.touchesStart.x = "touchstart" === e.type ? e.targetTouches[0].pageX : e.pageX, i.touchesStart.y = "touchstart" === e.type ? e.targetTouches[0].pageY : e.pageY))
            }, onTouchMove: function (e) {
                var t = this, a = t.zoom, i = a.gesture, s = a.image, r = a.velocity;
                if (i.$imageEl && 0 !== i.$imageEl.length && (t.allowClick = !1, s.isTouched && i.$slideEl)) {
                    s.isMoved || (s.width = i.$imageEl[0].offsetWidth, s.height = i.$imageEl[0].offsetHeight, s.startX = l.getTranslate(i.$imageWrapEl[0], "x") || 0, s.startY = l.getTranslate(i.$imageWrapEl[0], "y") || 0, i.slideWidth = i.$slideEl[0].offsetWidth, i.slideHeight = i.$slideEl[0].offsetHeight, i.$imageWrapEl.transition(0), t.rtl && (s.startX = -s.startX), t.rtl && (s.startY = -s.startY));
                    var n = s.width * a.scale, o = s.height * a.scale;
                    if (!(n < i.slideWidth && o < i.slideHeight)) {
                        if (s.minX = Math.min(i.slideWidth / 2 - n / 2, 0), s.maxX = -s.minX, s.minY = Math.min(i.slideHeight / 2 - o / 2, 0), s.maxY = -s.minY, s.touchesCurrent.x = "touchmove" === e.type ? e.targetTouches[0].pageX : e.pageX, s.touchesCurrent.y = "touchmove" === e.type ? e.targetTouches[0].pageY : e.pageY, !s.isMoved && !a.isScaling) {
                            if (t.isHorizontal() && (Math.floor(s.minX) === Math.floor(s.startX) && s.touchesCurrent.x < s.touchesStart.x || Math.floor(s.maxX) === Math.floor(s.startX) && s.touchesCurrent.x > s.touchesStart.x)) return void (s.isTouched = !1);
                            if (!t.isHorizontal() && (Math.floor(s.minY) === Math.floor(s.startY) && s.touchesCurrent.y < s.touchesStart.y || Math.floor(s.maxY) === Math.floor(s.startY) && s.touchesCurrent.y > s.touchesStart.y)) return void (s.isTouched = !1)
                        }
                        e.preventDefault(), e.stopPropagation(), s.isMoved = !0, s.currentX = s.touchesCurrent.x - s.touchesStart.x + s.startX, s.currentY = s.touchesCurrent.y - s.touchesStart.y + s.startY, s.currentX < s.minX && (s.currentX = s.minX + 1 - Math.pow(s.minX - s.currentX + 1, .8)), s.currentX > s.maxX && (s.currentX = s.maxX - 1 + Math.pow(s.currentX - s.maxX + 1, .8)), s.currentY < s.minY && (s.currentY = s.minY + 1 - Math.pow(s.minY - s.currentY + 1, .8)), s.currentY > s.maxY && (s.currentY = s.maxY - 1 + Math.pow(s.currentY - s.maxY + 1, .8)), r.prevPositionX || (r.prevPositionX = s.touchesCurrent.x), r.prevPositionY || (r.prevPositionY = s.touchesCurrent.y), r.prevTime || (r.prevTime = Date.now()), r.x = (s.touchesCurrent.x - r.prevPositionX) / (Date.now() - r.prevTime) / 2, r.y = (s.touchesCurrent.y - r.prevPositionY) / (Date.now() - r.prevTime) / 2, Math.abs(s.touchesCurrent.x - r.prevPositionX) < 2 && (r.x = 0), Math.abs(s.touchesCurrent.y - r.prevPositionY) < 2 && (r.y = 0), r.prevPositionX = s.touchesCurrent.x, r.prevPositionY = s.touchesCurrent.y, r.prevTime = Date.now(), i.$imageWrapEl.transform("translate3d(" + s.currentX + "px, " + s.currentY + "px,0)")
                    }
                }
            }, onTouchEnd: function () {
                var e = this.zoom, t = e.gesture, a = e.image, i = e.velocity;
                if (t.$imageEl && 0 !== t.$imageEl.length) {
                    if (!a.isTouched || !a.isMoved) return a.isTouched = !1, void (a.isMoved = !1);
                    a.isTouched = !1, a.isMoved = !1;
                    var s = 300, r = 300, n = i.x * s, o = a.currentX + n, l = i.y * r, d = a.currentY + l;
                    0 !== i.x && (s = Math.abs((o - a.currentX) / i.x)), 0 !== i.y && (r = Math.abs((d - a.currentY) / i.y));
                    var p = Math.max(s, r);
                    a.currentX = o, a.currentY = d;
                    var c = a.width * e.scale, u = a.height * e.scale;
                    a.minX = Math.min(t.slideWidth / 2 - c / 2, 0), a.maxX = -a.minX, a.minY = Math.min(t.slideHeight / 2 - u / 2, 0), a.maxY = -a.minY, a.currentX = Math.max(Math.min(a.currentX, a.maxX), a.minX), a.currentY = Math.max(Math.min(a.currentY, a.maxY), a.minY), t.$imageWrapEl.transition(p).transform("translate3d(" + a.currentX + "px, " + a.currentY + "px,0)")
                }
            }, onTransitionEnd: function () {
                var e = this, t = e.zoom, a = t.gesture;
                a.$slideEl && e.previousIndex !== e.activeIndex && (a.$imageEl.transform("translate3d(0,0,0) scale(1)"), a.$imageWrapEl.transform("translate3d(0,0,0)"), a.$slideEl = void 0, a.$imageEl = void 0, a.$imageWrapEl = void 0, t.scale = 1, t.currentScale = 1)
            }, toggle: function (e) {
                var t = this.zoom;
                t.scale && 1 !== t.scale ? t.out() : t.in(e)
            }, in: function (t) {
                var a = this, i = a.zoom, s = a.params.zoom, r = i.gesture, n = i.image;
                if (r.$slideEl || (r.$slideEl = a.clickedSlide ? e(a.clickedSlide) : a.slides.eq(a.activeIndex), r.$imageEl = r.$slideEl.find("img, svg, canvas"), r.$imageWrapEl = r.$imageEl.parent("." + s.containerClass)), r.$imageEl && 0 !== r.$imageEl.length) {
                    r.$slideEl.addClass("" + s.zoomedSlideClass);
                    var o, l, d, p, c, u, h, v, f, m, g, b, w, y, x, E;
                    void 0 === n.touchesStart.x && t ? (o = "touchend" === t.type ? t.changedTouches[0].pageX : t.pageX, l = "touchend" === t.type ? t.changedTouches[0].pageY : t.pageY) : (o = n.touchesStart.x, l = n.touchesStart.y), i.scale = r.$imageWrapEl.attr("data-swiper-zoom") || s.maxRatio, i.currentScale = r.$imageWrapEl.attr("data-swiper-zoom") || s.maxRatio, t ? (x = r.$slideEl[0].offsetWidth, E = r.$slideEl[0].offsetHeight, d = r.$slideEl.offset().left + x / 2 - o, p = r.$slideEl.offset().top + E / 2 - l, h = r.$imageEl[0].offsetWidth, v = r.$imageEl[0].offsetHeight, f = h * i.scale, m = v * i.scale, w = -(g = Math.min(x / 2 - f / 2, 0)), y = -(b = Math.min(E / 2 - m / 2, 0)), c = d * i.scale, u = p * i.scale, c < g && (c = g), c > w && (c = w), u < b && (u = b), u > y && (u = y)) : (c = 0, u = 0), r.$imageWrapEl.transition(300).transform("translate3d(" + c + "px, " + u + "px,0)"), r.$imageEl.transition(300).transform("translate3d(0,0,0) scale(" + i.scale + ")")
                }
            }, out: function () {
                var t = this, a = t.zoom, i = t.params.zoom, s = a.gesture;
                s.$slideEl || (s.$slideEl = t.clickedSlide ? e(t.clickedSlide) : t.slides.eq(t.activeIndex), s.$imageEl = s.$slideEl.find("img, svg, canvas"), s.$imageWrapEl = s.$imageEl.parent("." + i.containerClass)), s.$imageEl && 0 !== s.$imageEl.length && (a.scale = 1, a.currentScale = 1, s.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"), s.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"), s.$slideEl.removeClass("" + i.zoomedSlideClass), s.$slideEl = void 0)
            }, enable: function () {
                var t = this, a = t.zoom;
                if (!a.enabled) {
                    a.enabled = !0;
                    var i = t.slides,
                        s = !("touchstart" !== t.touchEvents.start || !p.passiveListener || !t.params.passiveListeners) && {
                            passive: !0,
                            capture: !1
                        };
                    p.gestures ? (i.on("gesturestart", a.onGestureStart, s), i.on("gesturechange", a.onGestureChange, s), i.on("gestureend", a.onGestureEnd, s)) : "touchstart" === t.touchEvents.start && (i.on(t.touchEvents.start, a.onGestureStart, s), i.on(t.touchEvents.move, a.onGestureChange, s), i.on(t.touchEvents.end, a.onGestureEnd, s)), t.slides.each(function (i, s) {
                        var r = e(s);
                        r.find("." + t.params.zoom.containerClass).length > 0 && r.on(t.touchEvents.move, a.onTouchMove)
                    })
                }
            }, disable: function () {
                var t = this, a = t.zoom;
                if (a.enabled) {
                    t.zoom.enabled = !1;
                    var i = t.slides,
                        s = !("touchstart" !== t.touchEvents.start || !p.passiveListener || !t.params.passiveListeners) && {
                            passive: !0,
                            capture: !1
                        };
                    p.gestures ? (i.off("gesturestart", a.onGestureStart, s), i.off("gesturechange", a.onGestureChange, s), i.off("gestureend", a.onGestureEnd, s)) : "touchstart" === t.touchEvents.start && (i.off(t.touchEvents.start, a.onGestureStart, s), i.off(t.touchEvents.move, a.onGestureChange, s), i.off(t.touchEvents.end, a.onGestureEnd, s)), t.slides.each(function (i, s) {
                        var r = e(s);
                        r.find("." + t.params.zoom.containerClass).length > 0 && r.off(t.touchEvents.move, a.onTouchMove)
                    })
                }
            }
        }, Q = {
            name: "zoom",
            params: {
                zoom: {
                    enabled: !1,
                    maxRatio: 3,
                    minRatio: 1,
                    toggle: !0,
                    containerClass: "swiper-zoom-container",
                    zoomedSlideClass: "swiper-slide-zoomed"
                }
            },
            create: function () {
                var e = this, t = {
                    enabled: !1,
                    scale: 1,
                    currentScale: 1,
                    isScaling: !1,
                    gesture: {
                        $slideEl: void 0,
                        slideWidth: void 0,
                        slideHeight: void 0,
                        $imageEl: void 0,
                        $imageWrapEl: void 0,
                        maxRatio: 3
                    },
                    image: {
                        isTouched: void 0,
                        isMoved: void 0,
                        currentX: void 0,
                        currentY: void 0,
                        minX: void 0,
                        minY: void 0,
                        maxX: void 0,
                        maxY: void 0,
                        width: void 0,
                        height: void 0,
                        startX: void 0,
                        startY: void 0,
                        touchesStart: {},
                        touchesCurrent: {}
                    },
                    velocity: {x: void 0, y: void 0, prevPositionX: void 0, prevPositionY: void 0, prevTime: void 0}
                };
                "onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function (a) {
                    t[a] = Z[a].bind(e)
                }), l.extend(e, {zoom: t})
            },
            on: {
                init: function () {
                    var e = this;
                    e.params.zoom.enabled && e.zoom.enable()
                }, destroy: function () {
                    this.zoom.disable()
                }, touchStart: function (e) {
                    var t = this;
                    t.zoom.enabled && t.zoom.onTouchStart(e)
                }, touchEnd: function (e) {
                    var t = this;
                    t.zoom.enabled && t.zoom.onTouchEnd(e)
                }, doubleTap: function (e) {
                    var t = this;
                    t.params.zoom.enabled && t.zoom.enabled && t.params.zoom.toggle && t.zoom.toggle(e)
                }, transitionEnd: function () {
                    var e = this;
                    e.zoom.enabled && e.params.zoom.enabled && e.zoom.onTransitionEnd()
                }
            }
        }, J = {
            loadInSlide: function (t, a) {
                void 0 === a && (a = !0);
                var i = this, s = i.params.lazy;
                if (void 0 !== t && 0 !== i.slides.length) {
                    var r = i.virtual && i.params.virtual.enabled ? i.$wrapperEl.children("." + i.params.slideClass + '[data-swiper-slide-index="' + t + '"]') : i.slides.eq(t),
                        n = r.find("." + s.elementClass + ":not(." + s.loadedClass + "):not(." + s.loadingClass + ")");
                    !r.hasClass(s.elementClass) || r.hasClass(s.loadedClass) || r.hasClass(s.loadingClass) || (n = n.add(r[0])), 0 !== n.length && n.each(function (t, n) {
                        var o = e(n);
                        o.addClass(s.loadingClass);
                        var l = o.attr("data-background"), d = o.attr("data-src"), p = o.attr("data-srcset"),
                            c = o.attr("data-sizes");
                        i.loadImage(o[0], d || l, p, c, !1, function () {
                            if (void 0 !== i && null !== i && i && (!i || i.params)) {
                                if (l ? (o.css("background-image", 'url("' + l + '")'), o.removeAttr("data-background")) : (p && (o.attr("srcset", p), o.removeAttr("data-srcset")), c && (o.attr("sizes", c), o.removeAttr("data-sizes")), d && (o.attr("src", d), o.removeAttr("data-src"))), o.addClass(s.loadedClass).removeClass(s.loadingClass), r.find("." + s.preloaderClass).remove(), i.params.loop && a) {
                                    var e = r.attr("data-swiper-slide-index");
                                    if (r.hasClass(i.params.slideDuplicateClass)) {
                                        var t = i.$wrapperEl.children('[data-swiper-slide-index="' + e + '"]:not(.' + i.params.slideDuplicateClass + ")");
                                        i.lazy.loadInSlide(t.index(), !1)
                                    } else {
                                        var n = i.$wrapperEl.children("." + i.params.slideDuplicateClass + '[data-swiper-slide-index="' + e + '"]');
                                        i.lazy.loadInSlide(n.index(), !1)
                                    }
                                }
                                i.emit("lazyImageReady", r[0], o[0])
                            }
                        }), i.emit("lazyImageLoad", r[0], o[0])
                    })
                }
            }, load: function () {
                function t(e) {
                    if (l) {
                        if (s.children("." + r.slideClass + '[data-swiper-slide-index="' + e + '"]').length) return !0
                    } else if (n[e]) return !0;
                    return !1
                }

                function a(t) {
                    return l ? e(t).attr("data-swiper-slide-index") : e(t).index()
                }

                var i = this, s = i.$wrapperEl, r = i.params, n = i.slides, o = i.activeIndex,
                    l = i.virtual && r.virtual.enabled, d = r.lazy, p = r.slidesPerView;
                if ("auto" === p && (p = 0), i.lazy.initialImageLoaded || (i.lazy.initialImageLoaded = !0), i.params.watchSlidesVisibility) s.children("." + r.slideVisibleClass).each(function (t, a) {
                    var s = l ? e(a).attr("data-swiper-slide-index") : e(a).index();
                    i.lazy.loadInSlide(s)
                }); else if (p > 1) for (var c = o; c < o + p; c += 1) t(c) && i.lazy.loadInSlide(c); else i.lazy.loadInSlide(o);
                if (d.loadPrevNext) if (p > 1 || d.loadPrevNextAmount && d.loadPrevNextAmount > 1) {
                    for (var u = d.loadPrevNextAmount, h = p, v = Math.min(o + h + Math.max(u, h), n.length), f = Math.max(o - Math.max(h, u), 0), m = o + p; m < v; m += 1) t(m) && i.lazy.loadInSlide(m);
                    for (var g = f; g < o; g += 1) t(g) && i.lazy.loadInSlide(g)
                } else {
                    var b = s.children("." + r.slideNextClass);
                    b.length > 0 && i.lazy.loadInSlide(a(b));
                    var w = s.children("." + r.slidePrevClass);
                    w.length > 0 && i.lazy.loadInSlide(a(w))
                }
            }
        }, ee = {
            name: "lazy",
            params: {
                lazy: {
                    enabled: !1,
                    loadPrevNext: !1,
                    loadPrevNextAmount: 1,
                    loadOnTransitionStart: !1,
                    elementClass: "swiper-lazy",
                    loadingClass: "swiper-lazy-loading",
                    loadedClass: "swiper-lazy-loaded",
                    preloaderClass: "swiper-lazy-preloader"
                }
            },
            create: function () {
                var e = this;
                l.extend(e, {lazy: {initialImageLoaded: !1, load: J.load.bind(e), loadInSlide: J.loadInSlide.bind(e)}})
            },
            on: {
                beforeInit: function () {
                    var e = this;
                    e.params.preloadImages && (e.params.preloadImages = !1)
                }, init: function () {
                    var e = this;
                    e.params.lazy.enabled && !e.params.loop && 0 === e.params.initialSlide && e.lazy.load()
                }, scroll: function () {
                    var e = this;
                    e.params.freeMode && !e.params.freeModeSticky && e.lazy.load()
                }, resize: function () {
                    var e = this;
                    e.params.lazy.enabled && e.lazy.load()
                }, scrollbarDragMove: function () {
                    var e = this;
                    e.params.lazy.enabled && e.lazy.load()
                }, transitionStart: function () {
                    var e = this;
                    e.params.lazy.enabled && (e.params.lazy.loadOnTransitionStart || !e.params.lazy.loadOnTransitionStart && !e.lazy.initialImageLoaded) && e.lazy.load()
                }, transitionEnd: function () {
                    var e = this;
                    e.params.lazy.enabled && !e.params.lazy.loadOnTransitionStart && e.lazy.load()
                }
            }
        }, te = {
            LinearSpline: function (e, t) {
                var a = function () {
                    var e, t, a;
                    return function (i, s) {
                        for (t = -1, e = i.length; e - t > 1;) i[a = e + t >> 1] <= s ? t = a : e = a;
                        return e
                    }
                }();
                this.x = e, this.y = t, this.lastIndex = e.length - 1;
                var i, s;
                return this.interpolate = function (e) {
                    return e ? (s = a(this.x, e), i = s - 1, (e - this.x[i]) * (this.y[s] - this.y[i]) / (this.x[s] - this.x[i]) + this.y[i]) : 0
                }, this
            }, getInterpolateFunction: function (e) {
                var t = this;
                t.controller.spline || (t.controller.spline = t.params.loop ? new te.LinearSpline(t.slidesGrid, e.slidesGrid) : new te.LinearSpline(t.snapGrid, e.snapGrid))
            }, setTranslate: function (e, t) {
                function a(e) {
                    var t = e.rtl && "horizontal" === e.params.direction ? -r.translate : r.translate;
                    "slide" === r.params.controller.by && (r.controller.getInterpolateFunction(e), s = -r.controller.spline.interpolate(-t)), s && "container" !== r.params.controller.by || (i = (e.maxTranslate() - e.minTranslate()) / (r.maxTranslate() - r.minTranslate()), s = (t - r.minTranslate()) * i + e.minTranslate()), r.params.controller.inverse && (s = e.maxTranslate() - s), e.updateProgress(s), e.setTranslate(s, r), e.updateActiveIndex(), e.updateSlidesClasses()
                }

                var i, s, r = this, n = r.controller.control;
                if (Array.isArray(n)) for (var o = 0; o < n.length; o += 1) n[o] !== t && n[o] instanceof $ && a(n[o]); else n instanceof $ && t !== n && a(n)
            }, setTransition: function (e, t) {
                function a(t) {
                    t.setTransition(e, s), 0 !== e && (t.transitionStart(), t.$wrapperEl.transitionEnd(function () {
                        r && (t.params.loop && "slide" === s.params.controller.by && t.loopFix(), t.transitionEnd())
                    }))
                }

                var i, s = this, r = s.controller.control;
                if (Array.isArray(r)) for (i = 0; i < r.length; i += 1) r[i] !== t && r[i] instanceof $ && a(r[i]); else r instanceof $ && t !== r && a(r)
            }
        }, ae = {
            name: "controller",
            params: {controller: {control: void 0, inverse: !1, by: "slide"}},
            create: function () {
                var e = this;
                l.extend(e, {
                    controller: {
                        control: e.params.controller.control,
                        getInterpolateFunction: te.getInterpolateFunction.bind(e),
                        setTranslate: te.setTranslate.bind(e),
                        setTransition: te.setTransition.bind(e)
                    }
                })
            },
            on: {
                update: function () {
                    var e = this;
                    e.controller.control && e.controller.spline && (e.controller.spline = void 0, delete e.controller.spline)
                }, resize: function () {
                    var e = this;
                    e.controller.control && e.controller.spline && (e.controller.spline = void 0, delete e.controller.spline)
                }, observerUpdate: function () {
                    var e = this;
                    e.controller.control && e.controller.spline && (e.controller.spline = void 0, delete e.controller.spline)
                }, setTranslate: function (e, t) {
                    var a = this;
                    a.controller.control && a.controller.setTranslate(e, t)
                }, setTransition: function (e, t) {
                    var a = this;
                    a.controller.control && a.controller.setTransition(e, t)
                }
            }
        }, ie = {
            makeElFocusable: function (e) {
                return e.attr("tabIndex", "0"), e
            }, addElRole: function (e, t) {
                return e.attr("role", t), e
            }, addElLabel: function (e, t) {
                return e.attr("aria-label", t), e
            }, disableEl: function (e) {
                return e.attr("aria-disabled", !0), e
            }, enableEl: function (e) {
                return e.attr("aria-disabled", !1), e
            }, onEnterKey: function (t) {
                var a = this, i = a.params.a11y;
                if (13 === t.keyCode) {
                    var s = e(t.target);
                    a.navigation && a.navigation.$nextEl && s.is(a.navigation.$nextEl) && (a.isEnd && !a.params.loop || a.slideNext(), a.isEnd ? a.a11y.notify(i.lastSlideMessage) : a.a11y.notify(i.nextSlideMessage)), a.navigation && a.navigation.$prevEl && s.is(a.navigation.$prevEl) && (a.isBeginning && !a.params.loop || a.slidePrev(), a.isBeginning ? a.a11y.notify(i.firstSlideMessage) : a.a11y.notify(i.prevSlideMessage)), a.pagination && s.is("." + a.params.pagination.bulletClass) && s[0].click()
                }
            }, notify: function (e) {
                var t = this.a11y.liveRegion;
                0 !== t.length && (t.html(""), t.html(e))
            }, updateNavigation: function () {
                var e = this;
                if (!e.params.loop) {
                    var t = e.navigation, a = t.$nextEl, i = t.$prevEl;
                    i && i.length > 0 && (e.isBeginning ? e.a11y.disableEl(i) : e.a11y.enableEl(i)), a && a.length > 0 && (e.isEnd ? e.a11y.disableEl(a) : e.a11y.enableEl(a))
                }
            }, updatePagination: function () {
                var t = this, a = t.params.a11y;
                t.pagination && t.params.pagination.clickable && t.pagination.bullets && t.pagination.bullets.length && t.pagination.bullets.each(function (i, s) {
                    var r = e(s);
                    t.a11y.makeElFocusable(r), t.a11y.addElRole(r, "button"), t.a11y.addElLabel(r, a.paginationBulletMessage.replace(/{{index}}/, r.index() + 1))
                })
            }, init: function () {
                var e = this;
                e.$el.append(e.a11y.liveRegion);
                var t, a, i = e.params.a11y;
                e.navigation && e.navigation.$nextEl && (t = e.navigation.$nextEl), e.navigation && e.navigation.$prevEl && (a = e.navigation.$prevEl), t && (e.a11y.makeElFocusable(t), e.a11y.addElRole(t, "button"), e.a11y.addElLabel(t, i.nextSlideMessage), t.on("keydown", e.a11y.onEnterKey)), a && (e.a11y.makeElFocusable(a), e.a11y.addElRole(a, "button"), e.a11y.addElLabel(a, i.prevSlideMessage), a.on("keydown", e.a11y.onEnterKey)), e.pagination && e.params.pagination.clickable && e.pagination.bullets && e.pagination.bullets.length && e.pagination.$el.on("keydown", "." + e.params.pagination.bulletClass, e.a11y.onEnterKey)
            }, destroy: function () {
                var e = this;
                e.a11y.liveRegion && e.a11y.liveRegion.length > 0 && e.a11y.liveRegion.remove();
                var t, a;
                e.navigation && e.navigation.$nextEl && (t = e.navigation.$nextEl), e.navigation && e.navigation.$prevEl && (a = e.navigation.$prevEl), t && t.off("keydown", e.a11y.onEnterKey), a && a.off("keydown", e.a11y.onEnterKey), e.pagination && e.params.pagination.clickable && e.pagination.bullets && e.pagination.bullets.length && e.pagination.$el.off("keydown", "." + e.params.pagination.bulletClass, e.a11y.onEnterKey)
            }
        }, se = {
            name: "a11y",
            params: {
                a11y: {
                    enabled: !1,
                    notificationClass: "swiper-notification",
                    prevSlideMessage: "Previous slide",
                    nextSlideMessage: "Next slide",
                    firstSlideMessage: "This is the first slide",
                    lastSlideMessage: "This is the last slide",
                    paginationBulletMessage: "Go to slide {{index}}"
                }
            },
            create: function () {
                var t = this;
                l.extend(t, {a11y: {liveRegion: e('<span class="' + t.params.a11y.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>')}}), Object.keys(ie).forEach(function (e) {
                    t.a11y[e] = ie[e].bind(t)
                })
            },
            on: {
                init: function () {
                    var e = this;
                    e.params.a11y.enabled && (e.a11y.init(), e.a11y.updateNavigation())
                }, toEdge: function () {
                    var e = this;
                    e.params.a11y.enabled && e.a11y.updateNavigation()
                }, fromEdge: function () {
                    var e = this;
                    e.params.a11y.enabled && e.a11y.updateNavigation()
                }, paginationUpdate: function () {
                    var e = this;
                    e.params.a11y.enabled && e.a11y.updatePagination()
                }, destroy: function () {
                    var e = this;
                    e.params.a11y.enabled && e.a11y.destroy()
                }
            }
        }, re = {
            init: function () {
                var e = this;
                if (e.params.history) {
                    if (!s.history || !s.history.pushState) return e.params.history.enabled = !1, void (e.params.hashNavigation.enabled = !0);
                    var t = e.history;
                    t.initialized = !0, t.paths = re.getPathValues(), (t.paths.key || t.paths.value) && (t.scrollToSlide(0, t.paths.value, e.params.runCallbacksOnInit), e.params.history.replaceState || s.addEventListener("popstate", e.history.setHistoryPopState))
                }
            }, destroy: function () {
                var e = this;
                e.params.history.replaceState || s.removeEventListener("popstate", e.history.setHistoryPopState)
            }, setHistoryPopState: function () {
                var e = this;
                e.history.paths = re.getPathValues(), e.history.scrollToSlide(e.params.speed, e.history.paths.value, !1)
            }, getPathValues: function () {
                var e = s.location.pathname.slice(1).split("/"), t = e.length;
                return {key: e[t - 2], value: e[t - 1]}
            }, setHistory: function (e, t) {
                var a = this;
                if (a.history.initialized && a.params.history.enabled) {
                    var i = a.slides.eq(t), r = re.slugify(i.attr("data-history"));
                    s.location.pathname.includes(e) || (r = e + "/" + r);
                    var n = s.history.state;
                    n && n.value === r || (a.params.history.replaceState ? s.history.replaceState({value: r}, null, r) : s.history.pushState({value: r}, null, r))
                }
            }, slugify: function (e) {
                return e.toString().toLowerCase().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "")
            }, scrollToSlide: function (e, t, a) {
                var i = this;
                if (t) for (var s = 0, r = i.slides.length; s < r; s += 1) {
                    var n = i.slides.eq(s);
                    if (re.slugify(n.attr("data-history")) === t && !n.hasClass(i.params.slideDuplicateClass)) {
                        var o = n.index();
                        i.slideTo(o, e, a)
                    }
                } else i.slideTo(0, e, a)
            }
        }, ne = {
            name: "history", params: {history: {enabled: !1, replaceState: !1, key: "slides"}}, create: function () {
                var e = this;
                l.extend(e, {
                    history: {
                        init: re.init.bind(e),
                        setHistory: re.setHistory.bind(e),
                        setHistoryPopState: re.setHistoryPopState.bind(e),
                        scrollToSlide: re.scrollToSlide.bind(e)
                    }
                })
            }, on: {
                init: function () {
                    var e = this;
                    e.params.history.enabled && e.history.init()
                }, destroy: function () {
                    var e = this;
                    e.params.history.enabled && e.history.destroy()
                }, transitionEnd: function () {
                    var e = this;
                    e.history.initialized && e.history.setHistory(e.params.history.key, e.activeIndex)
                }
            }
        }, oe = {
            onHashCange: function () {
                var e = this, t = d.location.hash.replace("#", "");
                t !== e.slides.eq(e.activeIndex).attr("data-hash") && e.slideTo(e.$wrapperEl.children("." + e.params.slideClass + '[data-hash="' + t + '"]').index())
            }, setHash: function () {
                var e = this;
                if (e.hashNavigation.initialized && e.params.hashNavigation.enabled) if (e.params.hashNavigation.replaceState && s.history && s.history.replaceState) s.history.replaceState(null, null, "#" + e.slides.eq(e.activeIndex).attr("data-hash") || ""); else {
                    var t = e.slides.eq(e.activeIndex), a = t.attr("data-hash") || t.attr("data-history");
                    d.location.hash = a || ""
                }
            }, init: function () {
                var t = this;
                if (!(!t.params.hashNavigation.enabled || t.params.history && t.params.history.enabled)) {
                    t.hashNavigation.initialized = !0;
                    var a = d.location.hash.replace("#", "");
                    if (a) for (var i = 0, r = t.slides.length; i < r; i += 1) {
                        var n = t.slides.eq(i);
                        if ((n.attr("data-hash") || n.attr("data-history")) === a && !n.hasClass(t.params.slideDuplicateClass)) {
                            var o = n.index();
                            t.slideTo(o, 0, t.params.runCallbacksOnInit, !0)
                        }
                    }
                    t.params.hashNavigation.watchState && e(s).on("hashchange", t.hashNavigation.onHashCange)
                }
            }, destroy: function () {
                var t = this;
                t.params.hashNavigation.watchState && e(s).off("hashchange", t.hashNavigation.onHashCange)
            }
        }, le = {
            name: "hash-navigation",
            params: {hashNavigation: {enabled: !1, replaceState: !1, watchState: !1}},
            create: function () {
                var e = this;
                l.extend(e, {
                    hashNavigation: {
                        initialized: !1,
                        init: oe.init.bind(e),
                        destroy: oe.destroy.bind(e),
                        setHash: oe.setHash.bind(e),
                        onHashCange: oe.onHashCange.bind(e)
                    }
                })
            },
            on: {
                init: function () {
                    var e = this;
                    e.params.hashNavigation.enabled && e.hashNavigation.init()
                }, destroy: function () {
                    var e = this;
                    e.params.hashNavigation.enabled && e.hashNavigation.destroy()
                }, transitionEnd: function () {
                    var e = this;
                    e.hashNavigation.initialized && e.hashNavigation.setHash()
                }
            }
        }, de = {
            run: function () {
                var e = this, t = e.slides.eq(e.activeIndex), a = e.params.autoplay.delay;
                t.attr("data-swiper-autoplay") && (a = t.attr("data-swiper-autoplay") || e.params.autoplay.delay), e.autoplay.timeout = l.nextTick(function () {
                    e.params.loop ? (e.loopFix(), e.slideNext(e.params.speed, !0, !0), e.emit("autoplay")) : e.isEnd ? e.params.autoplay.stopOnLastSlide ? e.autoplay.stop() : (e.slideTo(0, e.params.speed, !0, !0), e.emit("autoplay")) : (e.slideNext(e.params.speed, !0, !0), e.emit("autoplay"))
                }, a)
            }, start: function () {
                var e = this;
                return void 0 === e.autoplay.timeout && (!e.autoplay.running && (e.autoplay.running = !0, e.emit("autoplayStart"), e.autoplay.run(), !0))
            }, stop: function () {
                var e = this;
                return !!e.autoplay.running && (void 0 !== e.autoplay.timeout && (e.autoplay.timeout && (clearTimeout(e.autoplay.timeout), e.autoplay.timeout = void 0), e.autoplay.running = !1, e.emit("autoplayStop"), !0))
            }, pause: function (e) {
                var t = this;
                t.autoplay.running && (t.autoplay.paused || (t.autoplay.timeout && clearTimeout(t.autoplay.timeout), t.autoplay.paused = !0, 0 === e ? (t.autoplay.paused = !1, t.autoplay.run()) : t.$wrapperEl.transitionEnd(function () {
                    t && (t.autoplay.paused = !1, t.autoplay.running ? t.autoplay.run() : t.autoplay.stop())
                })))
            }
        }, pe = {
            name: "autoplay",
            params: {autoplay: {enabled: !1, delay: 3e3, disableOnInteraction: !0, stopOnLastSlide: !1}},
            create: function () {
                var e = this;
                l.extend(e, {
                    autoplay: {
                        running: !1,
                        paused: !1,
                        run: de.run.bind(e),
                        start: de.start.bind(e),
                        stop: de.stop.bind(e),
                        pause: de.pause.bind(e)
                    }
                })
            },
            on: {
                init: function () {
                    var e = this;
                    e.params.autoplay.enabled && e.autoplay.start()
                }, beforeTransitionStart: function (e, t) {
                    var a = this;
                    a.autoplay.running && (t || !a.params.autoplay.disableOnInteraction ? a.autoplay.pause(e) : a.autoplay.stop())
                }, sliderFirstMove: function () {
                    var e = this;
                    e.autoplay.running && (e.params.autoplay.disableOnInteraction ? e.autoplay.stop() : e.autoplay.pause())
                }, destroy: function () {
                    var e = this;
                    e.autoplay.running && e.autoplay.stop()
                }
            }
        }, ce = {
            setTranslate: function () {
                for (var e = this, t = e.slides, a = 0; a < t.length; a += 1) {
                    var i = e.slides.eq(a), s = -i[0].swiperSlideOffset;
                    e.params.virtualTranslate || (s -= e.translate);
                    var r = 0;
                    e.isHorizontal() || (r = s, s = 0);
                    var n = e.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(i[0].progress), 0) : 1 + Math.min(Math.max(i[0].progress, -1), 0);
                    i.css({opacity: n}).transform("translate3d(" + s + "px, " + r + "px, 0px)")
                }
            }, setTransition: function (e) {
                var t = this, a = t.slides, i = t.$wrapperEl;
                if (a.transition(e), t.params.virtualTranslate && 0 !== e) {
                    var s = !1;
                    a.transitionEnd(function () {
                        if (!s && t) {
                            s = !0, t.animating = !1;
                            for (var e = ["webkitTransitionEnd", "transitionend"], a = 0; a < e.length; a += 1) i.trigger(e[a])
                        }
                    })
                }
            }
        }, ue = {
            name: "effect-fade", params: {fadeEffect: {crossFade: !1}}, create: function () {
                var e = this;
                l.extend(e, {fadeEffect: {setTranslate: ce.setTranslate.bind(e), setTransition: ce.setTransition.bind(e)}})
            }, on: {
                beforeInit: function () {
                    var e = this;
                    "fade" === e.params.effect && (e.classNames.push(e.params.containerModifierClass + "fade"), l.extend(e.params, {
                        slidesPerView: 1,
                        slidesPerColumn: 1,
                        slidesPerGroup: 1,
                        watchSlidesProgress: !0,
                        spaceBetween: 0,
                        virtualTranslate: !0
                    }))
                }, setTranslate: function () {
                    var e = this;
                    "fade" === e.params.effect && e.fadeEffect.setTranslate()
                }, setTransition: function (e) {
                    var t = this;
                    "fade" === t.params.effect && t.fadeEffect.setTransition(e)
                }
            }
        }, he = {
            setTranslate: function () {
                var t, a = this, i = a.$el, s = a.$wrapperEl, r = a.slides, n = a.width, o = a.height, l = a.rtl,
                    d = a.size, p = a.params.cubeEffect, c = a.isHorizontal(), u = a.virtual && a.params.virtual.enabled,
                    h = 0;
                p.shadow && (c ? (0 === (t = s.find(".swiper-cube-shadow")).length && (t = e('<div class="swiper-cube-shadow"></div>'), s.append(t)), t.css({height: n + "px"})) : 0 === (t = i.find(".swiper-cube-shadow")).length && (t = e('<div class="swiper-cube-shadow"></div>'), i.append(t)));
                for (var v = 0; v < r.length; v += 1) {
                    var f = r.eq(v), g = v;
                    u && (g = parseInt(f.attr("data-swiper-slide-index"), 10));
                    var b = 90 * g, w = Math.floor(b / 360);
                    l && (b = -b, w = Math.floor(-b / 360));
                    var y = Math.max(Math.min(f[0].progress, 1), -1), x = 0, E = 0, T = 0;
                    g % 4 == 0 ? (x = 4 * -w * d, T = 0) : (g - 1) % 4 == 0 ? (x = 0, T = 4 * -w * d) : (g - 2) % 4 == 0 ? (x = d + 4 * w * d, T = d) : (g - 3) % 4 == 0 && (x = -d, T = 3 * d + 4 * d * w), l && (x = -x), c || (E = x, x = 0);
                    var S = "rotateX(" + (c ? 0 : -b) + "deg) rotateY(" + (c ? b : 0) + "deg) translate3d(" + x + "px, " + E + "px, " + T + "px)";
                    if (y <= 1 && y > -1 && (h = 90 * g + 90 * y, l && (h = 90 * -g - 90 * y)), f.transform(S), p.slideShadows) {
                        var C = c ? f.find(".swiper-slide-shadow-left") : f.find(".swiper-slide-shadow-top"),
                            M = c ? f.find(".swiper-slide-shadow-right") : f.find(".swiper-slide-shadow-bottom");
                        0 === C.length && (C = e('<div class="swiper-slide-shadow-' + (c ? "left" : "top") + '"></div>'), f.append(C)), 0 === M.length && (M = e('<div class="swiper-slide-shadow-' + (c ? "right" : "bottom") + '"></div>'), f.append(M)), C.length && (C[0].style.opacity = Math.max(-y, 0)), M.length && (M[0].style.opacity = Math.max(y, 0))
                    }
                }
                if (s.css({
                    "-webkit-transform-origin": "50% 50% -" + d / 2 + "px",
                    "-moz-transform-origin": "50% 50% -" + d / 2 + "px",
                    "-ms-transform-origin": "50% 50% -" + d / 2 + "px",
                    "transform-origin": "50% 50% -" + d / 2 + "px"
                }), p.shadow) if (c) t.transform("translate3d(0px, " + (n / 2 + p.shadowOffset) + "px, " + -n / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + p.shadowScale + ")"); else {
                    var z = Math.abs(h) - 90 * Math.floor(Math.abs(h) / 90),
                        P = 1.5 - (Math.sin(2 * z * Math.PI / 360) / 2 + Math.cos(2 * z * Math.PI / 360) / 2),
                        k = p.shadowScale, $ = p.shadowScale / P, I = p.shadowOffset;
                    t.transform("scale3d(" + k + ", 1, " + $ + ") translate3d(0px, " + (o / 2 + I) + "px, " + -o / 2 / $ + "px) rotateX(-90deg)")
                }
                var L = m.isSafari || m.isUiWebView ? -d / 2 : 0;
                s.transform("translate3d(0px,0," + L + "px) rotateX(" + (a.isHorizontal() ? 0 : h) + "deg) rotateY(" + (a.isHorizontal() ? -h : 0) + "deg)")
            }, setTransition: function (e) {
                var t = this, a = t.$el;
                t.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), t.params.cubeEffect.shadow && !t.isHorizontal() && a.find(".swiper-cube-shadow").transition(e)
            }
        }, ve = {
            name: "effect-cube",
            params: {cubeEffect: {slideShadows: !0, shadow: !0, shadowOffset: 20, shadowScale: .94}},
            create: function () {
                var e = this;
                l.extend(e, {cubeEffect: {setTranslate: he.setTranslate.bind(e), setTransition: he.setTransition.bind(e)}})
            },
            on: {
                beforeInit: function () {
                    var e = this;
                    "cube" === e.params.effect && (e.classNames.push(e.params.containerModifierClass + "cube"), e.classNames.push(e.params.containerModifierClass + "3d"), l.extend(e.params, {
                        slidesPerView: 1,
                        slidesPerColumn: 1,
                        slidesPerGroup: 1,
                        watchSlidesProgress: !0,
                        resistanceRatio: 0,
                        spaceBetween: 0,
                        centeredSlides: !1,
                        virtualTranslate: !0
                    }))
                }, setTranslate: function () {
                    var e = this;
                    "cube" === e.params.effect && e.cubeEffect.setTranslate()
                }, setTransition: function (e) {
                    var t = this;
                    "cube" === t.params.effect && t.cubeEffect.setTransition(e)
                }
            }
        }, fe = {
            setTranslate: function () {
                for (var t = this, a = t.slides, i = 0; i < a.length; i += 1) {
                    var s = a.eq(i), r = s[0].progress;
                    t.params.flipEffect.limitRotation && (r = Math.max(Math.min(s[0].progress, 1), -1));
                    var n = -180 * r, o = 0, l = -s[0].swiperSlideOffset, d = 0;
                    if (t.isHorizontal() ? t.rtl && (n = -n) : (d = l, l = 0, o = -n, n = 0), s[0].style.zIndex = -Math.abs(Math.round(r)) + a.length, t.params.flipEffect.slideShadows) {
                        var p = t.isHorizontal() ? s.find(".swiper-slide-shadow-left") : s.find(".swiper-slide-shadow-top"),
                            c = t.isHorizontal() ? s.find(".swiper-slide-shadow-right") : s.find(".swiper-slide-shadow-bottom");
                        0 === p.length && (p = e('<div class="swiper-slide-shadow-' + (t.isHorizontal() ? "left" : "top") + '"></div>'), s.append(p)), 0 === c.length && (c = e('<div class="swiper-slide-shadow-' + (t.isHorizontal() ? "right" : "bottom") + '"></div>'), s.append(c)), p.length && (p[0].style.opacity = Math.max(-r, 0)), c.length && (c[0].style.opacity = Math.max(r, 0))
                    }
                    s.transform("translate3d(" + l + "px, " + d + "px, 0px) rotateX(" + o + "deg) rotateY(" + n + "deg)")
                }
            }, setTransition: function (t) {
                var a = this, i = a.slides, s = a.activeIndex, r = a.$wrapperEl;
                if (i.transition(t).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(t), a.params.virtualTranslate && 0 !== t) {
                    var n = !1;
                    i.eq(s).transitionEnd(function () {
                        if (!n && a && e(this).hasClass(a.params.slideActiveClass)) {
                            n = !0, a.animating = !1;
                            for (var t = ["webkitTransitionEnd", "transitionend"], i = 0; i < t.length; i += 1) r.trigger(t[i])
                        }
                    })
                }
            }
        }, me = {
            name: "effect-flip", params: {flipEffect: {slideShadows: !0, limitRotation: !0}}, create: function () {
                var e = this;
                l.extend(e, {flipEffect: {setTranslate: fe.setTranslate.bind(e), setTransition: fe.setTransition.bind(e)}})
            }, on: {
                beforeInit: function () {
                    var e = this;
                    "flip" === e.params.effect && (e.classNames.push(e.params.containerModifierClass + "flip"), e.classNames.push(e.params.containerModifierClass + "3d"), l.extend(e.params, {
                        slidesPerView: 1,
                        slidesPerColumn: 1,
                        slidesPerGroup: 1,
                        watchSlidesProgress: !0,
                        spaceBetween: 0,
                        virtualTranslate: !0
                    }))
                }, setTranslate: function () {
                    var e = this;
                    "flip" === e.params.effect && e.flipEffect.setTranslate()
                }, setTransition: function (e) {
                    var t = this;
                    "flip" === t.params.effect && t.flipEffect.setTransition(e)
                }
            }
        }, ge = {
            setTranslate: function () {
                for (var t = this, a = t.width, i = t.height, s = t.slides, r = t.$wrapperEl, n = t.slidesSizesGrid, o = t.params.coverflowEffect, l = t.isHorizontal(), d = t.translate, p = l ? a / 2 - d : i / 2 - d, c = l ? o.rotate : -o.rotate, u = o.depth, h = 0, v = s.length; h < v; h += 1) {
                    var f = s.eq(h), g = n[h], b = (p - f[0].swiperSlideOffset - g / 2) / g * o.modifier, w = l ? c * b : 0,
                        y = l ? 0 : c * b, x = -u * Math.abs(b), E = l ? 0 : o.stretch * b, T = l ? o.stretch * b : 0;
                    Math.abs(T) < .001 && (T = 0), Math.abs(E) < .001 && (E = 0), Math.abs(x) < .001 && (x = 0), Math.abs(w) < .001 && (w = 0), Math.abs(y) < .001 && (y = 0);
                    var S = "translate3d(" + T + "px," + E + "px," + x + "px)  rotateX(" + y + "deg) rotateY(" + w + "deg)";
                    if (f.transform(S), f[0].style.zIndex = 1 - Math.abs(Math.round(b)), o.slideShadows) {
                        var C = l ? f.find(".swiper-slide-shadow-left") : f.find(".swiper-slide-shadow-top"),
                            M = l ? f.find(".swiper-slide-shadow-right") : f.find(".swiper-slide-shadow-bottom");
                        0 === C.length && (C = e('<div class="swiper-slide-shadow-' + (l ? "left" : "top") + '"></div>'), f.append(C)), 0 === M.length && (M = e('<div class="swiper-slide-shadow-' + (l ? "right" : "bottom") + '"></div>'), f.append(M)), C.length && (C[0].style.opacity = b > 0 ? b : 0), M.length && (M[0].style.opacity = -b > 0 ? -b : 0)
                    }
                }
                m.ie && (r[0].style.perspectiveOrigin = p + "px 50%")
            }, setTransition: function (e) {
                this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)
            }
        }, be = {
            name: "effect-coverflow",
            params: {coverflowEffect: {rotate: 50, stretch: 0, depth: 100, modifier: 1, slideShadows: !0}},
            create: function () {
                var e = this;
                l.extend(e, {
                    coverflowEffect: {
                        setTranslate: ge.setTranslate.bind(e),
                        setTransition: ge.setTransition.bind(e)
                    }
                })
            },
            on: {
                beforeInit: function () {
                    var e = this;
                    "coverflow" === e.params.effect && (e.classNames.push(e.params.containerModifierClass + "coverflow"), e.classNames.push(e.params.containerModifierClass + "3d"), e.params.watchSlidesProgress = !0)
                }, setTranslate: function () {
                    var e = this;
                    "coverflow" === e.params.effect && e.coverflowEffect.setTranslate()
                }, setTransition: function (e) {
                    var t = this;
                    "coverflow" === t.params.effect && t.coverflowEffect.setTransition(e)
                }
            }
        };
    return $.components = [I, L, D, O, H, N, G, V, W, j, K, _, Q, ee, ae, se, ne, le, pe, ue, ve, me, be], $
});
//# sourceMappingURL=swiper.min.js.map

/*! jQuery Validation Plugin - v1.16.0 - 12/2/2016
 * http://jqueryvalidation.org/
 * Copyright (c) 2016 Jörn Zaefferer; Licensed MIT */
!function (a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : "object" == typeof module && module.exports ? module.exports = a(require("jquery")) : a(jQuery)
}(function (a) {
    a.extend(a.fn, {
        validate: function (b) {
            if (!this.length) return void (b && b.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing."));
            var c = a.data(this[0], "validator");
            return c ? c : (this.attr("novalidate", "novalidate"), c = new a.validator(b, this[0]), a.data(this[0], "validator", c), c.settings.onsubmit && (this.on("click.validate", ":submit", function (b) {
                c.settings.submitHandler && (c.submitButton = b.target), a(this).hasClass("cancel") && (c.cancelSubmit = !0), void 0 !== a(this).attr("formnovalidate") && (c.cancelSubmit = !0)
            }), this.on("submit.validate", function (b) {
                function d() {
                    var d, e;
                    return !c.settings.submitHandler || (c.submitButton && (d = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)), e = c.settings.submitHandler.call(c, c.currentForm, b), c.submitButton && d.remove(), void 0 !== e && e)
                }

                return c.settings.debug && b.preventDefault(), c.cancelSubmit ? (c.cancelSubmit = !1, d()) : c.form() ? c.pendingRequest ? (c.formSubmitted = !0, !1) : d() : (c.focusInvalid(), !1)
            })), c)
        }, valid: function () {
            var b, c, d;
            return a(this[0]).is("form") ? b = this.validate().form() : (d = [], b = !0, c = a(this[0].form).validate(), this.each(function () {
                b = c.element(this) && b, b || (d = d.concat(c.errorList))
            }), c.errorList = d), b
        }, rules: function (b, c) {
            var d, e, f, g, h, i, j = this[0];
            if (null != j && null != j.form) {
                if (b) switch (d = a.data(j.form, "validator").settings, e = d.rules, f = a.validator.staticRules(j), b) {
                    case"add":
                        a.extend(f, a.validator.normalizeRule(c)), delete f.messages, e[j.name] = f, c.messages && (d.messages[j.name] = a.extend(d.messages[j.name], c.messages));
                        break;
                    case"remove":
                        return c ? (i = {}, a.each(c.split(/\s/), function (b, c) {
                            i[c] = f[c], delete f[c], "required" === c && a(j).removeAttr("aria-required")
                        }), i) : (delete e[j.name], f)
                }
                return g = a.validator.normalizeRules(a.extend({}, a.validator.classRules(j), a.validator.attributeRules(j), a.validator.dataRules(j), a.validator.staticRules(j)), j), g.required && (h = g.required, delete g.required, g = a.extend({required: h}, g), a(j).attr("aria-required", "true")), g.remote && (h = g.remote, delete g.remote, g = a.extend(g, {remote: h})), g
            }
        }
    }), a.extend(a.expr.pseudos || a.expr[":"], {
        blank: function (b) {
            return !a.trim("" + a(b).val())
        }, filled: function (b) {
            var c = a(b).val();
            return null !== c && !!a.trim("" + c)
        }, unchecked: function (b) {
            return !a(b).prop("checked")
        }
    }), a.validator = function (b, c) {
        this.settings = a.extend(!0, {}, a.validator.defaults, b), this.currentForm = c, this.init()
    }, a.validator.format = function (b, c) {
        return 1 === arguments.length ? function () {
            var c = a.makeArray(arguments);
            return c.unshift(b), a.validator.format.apply(this, c)
        } : void 0 === c ? b : (arguments.length > 2 && c.constructor !== Array && (c = a.makeArray(arguments).slice(1)), c.constructor !== Array && (c = [c]), a.each(c, function (a, c) {
            b = b.replace(new RegExp("\\{" + a + "\\}", "g"), function () {
                return c
            })
        }), b)
    }, a.extend(a.validator, {
        defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            pendingClass: "pending",
            validClass: "valid",
            errorElement: "label",
            focusCleanup: !1,
            focusInvalid: !0,
            errorContainer: a([]),
            errorLabelContainer: a([]),
            onsubmit: !0,
            ignore: ":hidden",
            ignoreTitle: !1,
            onfocusin: function (a) {
                this.lastActive = a, this.settings.focusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, a, this.settings.errorClass, this.settings.validClass), this.hideThese(this.errorsFor(a)))
            },
            onfocusout: function (a) {
                this.checkable(a) || !(a.name in this.submitted) && this.optional(a) || this.element(a)
            },
            onkeyup: function (b, c) {
                var d = [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225];
                9 === c.which && "" === this.elementValue(b) || a.inArray(c.keyCode, d) !== -1 || (b.name in this.submitted || b.name in this.invalid) && this.element(b)
            },
            onclick: function (a) {
                a.name in this.submitted ? this.element(a) : a.parentNode.name in this.submitted && this.element(a.parentNode)
            },
            highlight: function (b, c, d) {
                "radio" === b.type ? this.findByName(b.name).addClass(c).removeClass(d) : a(b).addClass(c).removeClass(d)
            },
            unhighlight: function (b, c, d) {
                "radio" === b.type ? this.findByName(b.name).removeClass(c).addClass(d) : a(b).removeClass(c).addClass(d)
            }
        },
        setDefaults: function (b) {
            a.extend(a.validator.defaults, b)
        },
        messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date (ISO).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            equalTo: "Please enter the same value again.",
            maxlength: a.validator.format("Please enter no more than {0} characters."),
            minlength: a.validator.format("Please enter at least {0} characters."),
            rangelength: a.validator.format("Please enter a value between {0} and {1} characters long."),
            range: a.validator.format("Please enter a value between {0} and {1}."),
            max: a.validator.format("Please enter a value less than or equal to {0}."),
            min: a.validator.format("Please enter a value greater than or equal to {0}."),
            step: a.validator.format("Please enter a multiple of {0}.")
        },
        autoCreateRanges: !1,
        prototype: {
            init: function () {
                function b(b) {
                    !this.form && this.hasAttribute("contenteditable") && (this.form = a(this).closest("form")[0]);
                    var c = a.data(this.form, "validator"), d = "on" + b.type.replace(/^validate/, ""), e = c.settings;
                    e[d] && !a(this).is(e.ignore) && e[d].call(c, this, b)
                }

                this.labelContainer = a(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm), this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer), this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, this.invalid = {}, this.reset();
                var c, d = this.groups = {};
                a.each(this.settings.groups, function (b, c) {
                    "string" == typeof c && (c = c.split(/\s/)), a.each(c, function (a, c) {
                        d[c] = b
                    })
                }), c = this.settings.rules, a.each(c, function (b, d) {
                    c[b] = a.validator.normalizeRule(d)
                }), a(this.currentForm).on("focusin.validate focusout.validate keyup.validate", ":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']", b).on("click.validate", "select, option, [type='radio'], [type='checkbox']", b), this.settings.invalidHandler && a(this.currentForm).on("invalid-form.validate", this.settings.invalidHandler), a(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required", "true")
            }, form: function () {
                return this.checkForm(), a.extend(this.submitted, this.errorMap), this.invalid = a.extend({}, this.errorMap), this.valid() || a(this.currentForm).triggerHandler("invalid-form", [this]), this.showErrors(), this.valid()
            }, checkForm: function () {
                this.prepareForm();
                for (var a = 0, b = this.currentElements = this.elements(); b[a]; a++) this.check(b[a]);
                return this.valid()
            }, element: function (b) {
                var c, d, e = this.clean(b), f = this.validationTargetFor(e), g = this, h = !0;
                return void 0 === f ? delete this.invalid[e.name] : (this.prepareElement(f), this.currentElements = a(f), d = this.groups[f.name], d && a.each(this.groups, function (a, b) {
                    b === d && a !== f.name && (e = g.validationTargetFor(g.clean(g.findByName(a))), e && e.name in g.invalid && (g.currentElements.push(e), h = g.check(e) && h))
                }), c = this.check(f) !== !1, h = h && c, c ? this.invalid[f.name] = !1 : this.invalid[f.name] = !0, this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), this.showErrors(), a(b).attr("aria-invalid", !c)), h
            }, showErrors: function (b) {
                if (b) {
                    var c = this;
                    a.extend(this.errorMap, b), this.errorList = a.map(this.errorMap, function (a, b) {
                        return {message: a, element: c.findByName(b)[0]}
                    }), this.successList = a.grep(this.successList, function (a) {
                        return !(a.name in b)
                    })
                }
                this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors()
            }, resetForm: function () {
                a.fn.resetForm && a(this.currentForm).resetForm(), this.invalid = {}, this.submitted = {}, this.prepareForm(), this.hideErrors();
                var b = this.elements().removeData("previousValue").removeAttr("aria-invalid");
                this.resetElements(b)
            }, resetElements: function (a) {
                var b;
                if (this.settings.unhighlight) for (b = 0; a[b]; b++) this.settings.unhighlight.call(this, a[b], this.settings.errorClass, ""), this.findByName(a[b].name).removeClass(this.settings.validClass); else a.removeClass(this.settings.errorClass).removeClass(this.settings.validClass)
            }, numberOfInvalids: function () {
                return this.objectLength(this.invalid)
            }, objectLength: function (a) {
                var b, c = 0;
                for (b in a) a[b] && c++;
                return c
            }, hideErrors: function () {
                this.hideThese(this.toHide)
            }, hideThese: function (a) {
                a.not(this.containers).text(""), this.addWrapper(a).hide()
            }, valid: function () {
                return 0 === this.size()
            }, size: function () {
                return this.errorList.length
            }, focusInvalid: function () {
                if (this.settings.focusInvalid) try {
                    a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin")
                } catch (b) {
                }
            }, findLastActive: function () {
                var b = this.lastActive;
                return b && 1 === a.grep(this.errorList, function (a) {
                    return a.element.name === b.name
                }).length && b
            }, elements: function () {
                var b = this, c = {};
                return a(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function () {
                    var d = this.name || a(this).attr("name");
                    return !d && b.settings.debug && window.console && console.error("%o has no name assigned", this), this.hasAttribute("contenteditable") && (this.form = a(this).closest("form")[0]), !(d in c || !b.objectLength(a(this).rules())) && (c[d] = !0, !0)
                })
            }, clean: function (b) {
                return a(b)[0]
            }, errors: function () {
                var b = this.settings.errorClass.split(" ").join(".");
                return a(this.settings.errorElement + "." + b, this.errorContext)
            }, resetInternals: function () {
                this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = a([]), this.toHide = a([])
            }, reset: function () {
                this.resetInternals(), this.currentElements = a([])
            }, prepareForm: function () {
                this.reset(), this.toHide = this.errors().add(this.containers)
            }, prepareElement: function (a) {
                this.reset(), this.toHide = this.errorsFor(a)
            }, elementValue: function (b) {
                var c, d, e = a(b), f = b.type;
                return "radio" === f || "checkbox" === f ? this.findByName(b.name).filter(":checked").val() : "number" === f && "undefined" != typeof b.validity ? b.validity.badInput ? "NaN" : e.val() : (c = b.hasAttribute("contenteditable") ? e.text() : e.val(), "file" === f ? "C:\\fakepath\\" === c.substr(0, 12) ? c.substr(12) : (d = c.lastIndexOf("/"), d >= 0 ? c.substr(d + 1) : (d = c.lastIndexOf("\\"), d >= 0 ? c.substr(d + 1) : c)) : "string" == typeof c ? c.replace(/\r/g, "") : c)
            }, check: function (b) {
                b = this.validationTargetFor(this.clean(b));
                var c, d, e, f = a(b).rules(), g = a.map(f, function (a, b) {
                    return b
                }).length, h = !1, i = this.elementValue(b);
                if ("function" == typeof f.normalizer) {
                    if (i = f.normalizer.call(b, i), "string" != typeof i) throw new TypeError("The normalizer should return a string value.");
                    delete f.normalizer
                }
                for (d in f) {
                    e = {method: d, parameters: f[d]};
                    try {
                        if (c = a.validator.methods[d].call(this, i, b, e.parameters), "dependency-mismatch" === c && 1 === g) {
                            h = !0;
                            continue
                        }
                        if (h = !1, "pending" === c) return void (this.toHide = this.toHide.not(this.errorsFor(b)));
                        if (!c) return this.formatAndAdd(b, e), !1
                    } catch (j) {
                        throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + b.id + ", check the '" + e.method + "' method.", j), j instanceof TypeError && (j.message += ".  Exception occurred when checking element " + b.id + ", check the '" + e.method + "' method."), j
                    }
                }
                if (!h) return this.objectLength(f) && this.successList.push(b), !0
            }, customDataMessage: function (b, c) {
                return a(b).data("msg" + c.charAt(0).toUpperCase() + c.substring(1).toLowerCase()) || a(b).data("msg")
            }, customMessage: function (a, b) {
                var c = this.settings.messages[a];
                return c && (c.constructor === String ? c : c[b])
            }, findDefined: function () {
                for (var a = 0; a < arguments.length; a++) if (void 0 !== arguments[a]) return arguments[a]
            }, defaultMessage: function (b, c) {
                "string" == typeof c && (c = {method: c});
                var d = this.findDefined(this.customMessage(b.name, c.method), this.customDataMessage(b, c.method), !this.settings.ignoreTitle && b.title || void 0, a.validator.messages[c.method], "<strong>Warning: No message defined for " + b.name + "</strong>"),
                    e = /\$?\{(\d+)\}/g;
                return "function" == typeof d ? d = d.call(this, c.parameters, b) : e.test(d) && (d = a.validator.format(d.replace(e, "{$1}"), c.parameters)), d
            }, formatAndAdd: function (a, b) {
                var c = this.defaultMessage(a, b);
                this.errorList.push({
                    message: c,
                    element: a,
                    method: b.method
                }), this.errorMap[a.name] = c, this.submitted[a.name] = c
            }, addWrapper: function (a) {
                return this.settings.wrapper && (a = a.add(a.parent(this.settings.wrapper))), a
            }, defaultShowErrors: function () {
                var a, b, c;
                for (a = 0; this.errorList[a]; a++) c = this.errorList[a], this.settings.highlight && this.settings.highlight.call(this, c.element, this.settings.errorClass, this.settings.validClass), this.showLabel(c.element, c.message);
                if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (a = 0; this.successList[a]; a++) this.showLabel(this.successList[a]);
                if (this.settings.unhighlight) for (a = 0, b = this.validElements(); b[a]; a++) this.settings.unhighlight.call(this, b[a], this.settings.errorClass, this.settings.validClass);
                this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show()
            }, validElements: function () {
                return this.currentElements.not(this.invalidElements())
            }, invalidElements: function () {
                return a(this.errorList).map(function () {
                    return this.element
                })
            }, showLabel: function (b, c) {
                var d, e, f, g, h = this.errorsFor(b), i = this.idOrName(b), j = a(b).attr("aria-describedby");
                h.length ? (h.removeClass(this.settings.validClass).addClass(this.settings.errorClass), h.html(c)) : (h = a("<" + this.settings.errorElement + ">").attr("id", i + "-error").addClass(this.settings.errorClass).html(c || ""), d = h, this.settings.wrapper && (d = h.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.length ? this.labelContainer.append(d) : this.settings.errorPlacement ? this.settings.errorPlacement.call(this, d, a(b)) : d.insertAfter(b), h.is("label") ? h.attr("for", i) : 0 === h.parents("label[for='" + this.escapeCssMeta(i) + "']").length && (f = h.attr("id"), j ? j.match(new RegExp("\\b" + this.escapeCssMeta(f) + "\\b")) || (j += " " + f) : j = f, a(b).attr("aria-describedby", j), e = this.groups[b.name], e && (g = this, a.each(g.groups, function (b, c) {
                    c === e && a("[name='" + g.escapeCssMeta(b) + "']", g.currentForm).attr("aria-describedby", h.attr("id"))
                })))), !c && this.settings.success && (h.text(""), "string" == typeof this.settings.success ? h.addClass(this.settings.success) : this.settings.success(h, b)), this.toShow = this.toShow.add(h)
            }, errorsFor: function (b) {
                var c = this.escapeCssMeta(this.idOrName(b)), d = a(b).attr("aria-describedby"),
                    e = "label[for='" + c + "'], label[for='" + c + "'] *";
                return d && (e = e + ", #" + this.escapeCssMeta(d).replace(/\s+/g, ", #")), this.errors().filter(e)
            }, escapeCssMeta: function (a) {
                return a.replace(/([\\!"#$%&'()*+,./:;<=>?@\[\]^`{|}~])/g, "\\$1")
            }, idOrName: function (a) {
                return this.groups[a.name] || (this.checkable(a) ? a.name : a.id || a.name)
            }, validationTargetFor: function (b) {
                return this.checkable(b) && (b = this.findByName(b.name)), a(b).not(this.settings.ignore)[0]
            }, checkable: function (a) {
                return /radio|checkbox/i.test(a.type)
            }, findByName: function (b) {
                return a(this.currentForm).find("[name='" + this.escapeCssMeta(b) + "']")
            }, getLength: function (b, c) {
                switch (c.nodeName.toLowerCase()) {
                    case"select":
                        return a("option:selected", c).length;
                    case"input":
                        if (this.checkable(c)) return this.findByName(c.name).filter(":checked").length
                }
                return b.length
            }, depend: function (a, b) {
                return !this.dependTypes[typeof a] || this.dependTypes[typeof a](a, b)
            }, dependTypes: {
                "boolean": function (a) {
                    return a
                }, string: function (b, c) {
                    return !!a(b, c.form).length
                }, "function": function (a, b) {
                    return a(b)
                }
            }, optional: function (b) {
                var c = this.elementValue(b);
                return !a.validator.methods.required.call(this, c, b) && "dependency-mismatch"
            }, startRequest: function (b) {
                this.pending[b.name] || (this.pendingRequest++, a(b).addClass(this.settings.pendingClass), this.pending[b.name] = !0)
            }, stopRequest: function (b, c) {
                this.pendingRequest--, this.pendingRequest < 0 && (this.pendingRequest = 0), delete this.pending[b.name], a(b).removeClass(this.settings.pendingClass), c && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (a(this.currentForm).submit(), this.formSubmitted = !1) : !c && 0 === this.pendingRequest && this.formSubmitted && (a(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = !1)
            }, previousValue: function (b, c) {
                return c = "string" == typeof c && c || "remote", a.data(b, "previousValue") || a.data(b, "previousValue", {
                    old: null,
                    valid: !0,
                    message: this.defaultMessage(b, {method: c})
                })
            }, destroy: function () {
                this.resetForm(), a(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur")
            }
        },
        classRuleSettings: {
            required: {required: !0},
            email: {email: !0},
            url: {url: !0},
            date: {date: !0},
            dateISO: {dateISO: !0},
            number: {number: !0},
            digits: {digits: !0},
            creditcard: {creditcard: !0}
        },
        addClassRules: function (b, c) {
            b.constructor === String ? this.classRuleSettings[b] = c : a.extend(this.classRuleSettings, b)
        },
        classRules: function (b) {
            var c = {}, d = a(b).attr("class");
            return d && a.each(d.split(" "), function () {
                this in a.validator.classRuleSettings && a.extend(c, a.validator.classRuleSettings[this])
            }), c
        },
        normalizeAttributeRule: function (a, b, c, d) {
            /min|max|step/.test(c) && (null === b || /number|range|text/.test(b)) && (d = Number(d), isNaN(d) && (d = void 0)), d || 0 === d ? a[c] = d : b === c && "range" !== b && (a[c] = !0)
        },
        attributeRules: function (b) {
            var c, d, e = {}, f = a(b), g = b.getAttribute("type");
            for (c in a.validator.methods) "required" === c ? (d = b.getAttribute(c), "" === d && (d = !0), d = !!d) : d = f.attr(c), this.normalizeAttributeRule(e, g, c, d);
            return e.maxlength && /-1|2147483647|524288/.test(e.maxlength) && delete e.maxlength, e
        },
        dataRules: function (b) {
            var c, d, e = {}, f = a(b), g = b.getAttribute("type");
            for (c in a.validator.methods) d = f.data("rule" + c.charAt(0).toUpperCase() + c.substring(1).toLowerCase()), this.normalizeAttributeRule(e, g, c, d);
            return e
        },
        staticRules: function (b) {
            var c = {}, d = a.data(b.form, "validator");
            return d.settings.rules && (c = a.validator.normalizeRule(d.settings.rules[b.name]) || {}), c
        },
        normalizeRules: function (b, c) {
            return a.each(b, function (d, e) {
                if (e === !1) return void delete b[d];
                if (e.param || e.depends) {
                    var f = !0;
                    switch (typeof e.depends) {
                        case"string":
                            f = !!a(e.depends, c.form).length;
                            break;
                        case"function":
                            f = e.depends.call(c, c)
                    }
                    f ? b[d] = void 0 === e.param || e.param : (a.data(c.form, "validator").resetElements(a(c)), delete b[d])
                }
            }), a.each(b, function (d, e) {
                b[d] = a.isFunction(e) && "normalizer" !== d ? e(c) : e
            }), a.each(["minlength", "maxlength"], function () {
                b[this] && (b[this] = Number(b[this]))
            }), a.each(["rangelength", "range"], function () {
                var c;
                b[this] && (a.isArray(b[this]) ? b[this] = [Number(b[this][0]), Number(b[this][1])] : "string" == typeof b[this] && (c = b[this].replace(/[\[\]]/g, "").split(/[\s,]+/), b[this] = [Number(c[0]), Number(c[1])]))
            }), a.validator.autoCreateRanges && (null != b.min && null != b.max && (b.range = [b.min, b.max], delete b.min, delete b.max), null != b.minlength && null != b.maxlength && (b.rangelength = [b.minlength, b.maxlength], delete b.minlength, delete b.maxlength)), b
        },
        normalizeRule: function (b) {
            if ("string" == typeof b) {
                var c = {};
                a.each(b.split(/\s/), function () {
                    c[this] = !0
                }), b = c
            }
            return b
        },
        addMethod: function (b, c, d) {
            a.validator.methods[b] = c, a.validator.messages[b] = void 0 !== d ? d : a.validator.messages[b], c.length < 3 && a.validator.addClassRules(b, a.validator.normalizeRule(b))
        },
        methods: {
            required: function (b, c, d) {
                if (!this.depend(d, c)) return "dependency-mismatch";
                if ("select" === c.nodeName.toLowerCase()) {
                    var e = a(c).val();
                    return e && e.length > 0
                }
                return this.checkable(c) ? this.getLength(b, c) > 0 : b.length > 0
            }, email: function (a, b) {
                return this.optional(b) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a)
            }, url: function (a, b) {
                return this.optional(b) || /^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(a)
            }, date: function (a, b) {
                return this.optional(b) || !/Invalid|NaN/.test(new Date(a).toString())
            }, dateISO: function (a, b) {
                return this.optional(b) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(a)
            }, number: function (a, b) {
                return this.optional(b) || /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)
            }, digits: function (a, b) {
                return this.optional(b) || /^\d+$/.test(a)
            }, minlength: function (b, c, d) {
                var e = a.isArray(b) ? b.length : this.getLength(b, c);
                return this.optional(c) || e >= d
            }, maxlength: function (b, c, d) {
                var e = a.isArray(b) ? b.length : this.getLength(b, c);
                return this.optional(c) || e <= d
            }, rangelength: function (b, c, d) {
                var e = a.isArray(b) ? b.length : this.getLength(b, c);
                return this.optional(c) || e >= d[0] && e <= d[1]
            }, min: function (a, b, c) {
                return this.optional(b) || a >= c
            }, max: function (a, b, c) {
                return this.optional(b) || a <= c
            }, range: function (a, b, c) {
                return this.optional(b) || a >= c[0] && a <= c[1]
            }, step: function (b, c, d) {
                var e, f = a(c).attr("type"), g = "Step attribute on input type " + f + " is not supported.",
                    h = ["text", "number", "range"], i = new RegExp("\\b" + f + "\\b"), j = f && !i.test(h.join()),
                    k = function (a) {
                        var b = ("" + a).match(/(?:\.(\d+))?$/);
                        return b && b[1] ? b[1].length : 0
                    }, l = function (a) {
                        return Math.round(a * Math.pow(10, e))
                    }, m = !0;
                if (j) throw new Error(g);
                return e = k(d), (k(b) > e || l(b) % l(d) !== 0) && (m = !1), this.optional(c) || m
            }, equalTo: function (b, c, d) {
                var e = a(d);
                return this.settings.onfocusout && e.not(".validate-equalTo-blur").length && e.addClass("validate-equalTo-blur").on("blur.validate-equalTo", function () {
                    a(c).valid()
                }), b === e.val()
            }, remote: function (b, c, d, e) {
                if (this.optional(c)) return "dependency-mismatch";
                e = "string" == typeof e && e || "remote";
                var f, g, h, i = this.previousValue(c, e);
                return this.settings.messages[c.name] || (this.settings.messages[c.name] = {}), i.originalMessage = i.originalMessage || this.settings.messages[c.name][e], this.settings.messages[c.name][e] = i.message, d = "string" == typeof d && {url: d} || d, h = a.param(a.extend({data: b}, d.data)), i.old === h ? i.valid : (i.old = h, f = this, this.startRequest(c), g = {}, g[c.name] = b, a.ajax(a.extend(!0, {
                    mode: "abort",
                    port: "validate" + c.name,
                    dataType: "json",
                    data: g,
                    context: f.currentForm,
                    success: function (a) {
                        var d, g, h, j = a === !0 || "true" === a;
                        f.settings.messages[c.name][e] = i.originalMessage, j ? (h = f.formSubmitted, f.resetInternals(), f.toHide = f.errorsFor(c), f.formSubmitted = h, f.successList.push(c), f.invalid[c.name] = !1, f.showErrors()) : (d = {}, g = a || f.defaultMessage(c, {
                            method: e,
                            parameters: b
                        }), d[c.name] = i.message = g, f.invalid[c.name] = !0, f.showErrors(d)), i.valid = j, f.stopRequest(c, j)
                    }
                }, d)), "pending")
            }
        }
    });
    var b, c = {};
    return a.ajaxPrefilter ? a.ajaxPrefilter(function (a, b, d) {
        var e = a.port;
        "abort" === a.mode && (c[e] && c[e].abort(), c[e] = d)
    }) : (b = a.ajax, a.ajax = function (d) {
        var e = ("mode" in d ? d : a.ajaxSettings).mode, f = ("port" in d ? d : a.ajaxSettings).port;
        return "abort" === e ? (c[f] && c[f].abort(), c[f] = b.apply(this, arguments), c[f]) : b.apply(this, arguments)
    }), a
});
/*! jQuery Validation Plugin - v1.16.0 - 12/2/2016
 * http://jqueryvalidation.org/
 * Copyright (c) 2016 Jörn Zaefferer; Licensed MIT */
!function (a) {
    "function" == typeof define && define.amd ? define(["jquery", "./jquery.validate.min"], a) : "object" == typeof module && module.exports ? module.exports = a(require("jquery")) : a(jQuery)
}(function (a) {
    return function () {
        function b(a) {
            return a.replace(/<.[^<>]*?>/g, " ").replace(/&nbsp;|&#160;/gi, " ").replace(/[.(),;:!?%#$'\"_+=\/\-“”’]*/g, "")
        }

        a.validator.addMethod("maxWords", function (a, c, d) {
            return this.optional(c) || b(a).match(/\b\w+\b/g).length <= d
        }, a.validator.format("Please enter {0} words or less.")), a.validator.addMethod("minWords", function (a, c, d) {
            return this.optional(c) || b(a).match(/\b\w+\b/g).length >= d
        }, a.validator.format("Please enter at least {0} words.")), a.validator.addMethod("rangeWords", function (a, c, d) {
            var e = b(a), f = /\b\w+\b/g;
            return this.optional(c) || e.match(f).length >= d[0] && e.match(f).length <= d[1]
        }, a.validator.format("Please enter between {0} and {1} words."))
    }(), a.validator.addMethod("accept", function (b, c, d) {
        var e, f, g, h = "string" == typeof d ? d.replace(/\s/g, "") : "image/*", i = this.optional(c);
        if (i) return i;
        if ("file" === a(c).attr("type") && (h = h.replace(/[\-\[\]\/\{\}\(\)\+\?\.\\\^\$\|]/g, "\\$&").replace(/,/g, "|").replace(/\/\*/g, "/.*"), c.files && c.files.length)) for (g = new RegExp(".?(" + h + ")$", "i"), e = 0; e < c.files.length; e++) if (f = c.files[e], !f.type.match(g)) return !1;
        return !0
    }, a.validator.format("Please enter a value with a valid mimetype.")), a.validator.addMethod("alphanumeric", function (a, b) {
        return this.optional(b) || /^\w+$/i.test(a)
    }, "Letters, numbers, and underscores only please"), a.validator.addMethod("bankaccountNL", function (a, b) {
        if (this.optional(b)) return !0;
        if (!/^[0-9]{9}|([0-9]{2} ){3}[0-9]{3}$/.test(a)) return !1;
        var c, d, e, f = a.replace(/ /g, ""), g = 0, h = f.length;
        for (c = 0; c < h; c++) d = h - c, e = f.substring(c, c + 1), g += d * e;
        return g % 11 === 0
    }, "Please specify a valid bank account number"), a.validator.addMethod("bankorgiroaccountNL", function (b, c) {
        return this.optional(c) || a.validator.methods.bankaccountNL.call(this, b, c) || a.validator.methods.giroaccountNL.call(this, b, c)
    }, "Please specify a valid bank or giro account number"), a.validator.addMethod("bic", function (a, b) {
        return this.optional(b) || /^([A-Z]{6}[A-Z2-9][A-NP-Z1-9])(X{3}|[A-WY-Z0-9][A-Z0-9]{2})?$/.test(a.toUpperCase())
    }, "Please specify a valid BIC code"), a.validator.addMethod("cifES", function (a) {
        "use strict";

        function b(a) {
            return a % 2 === 0
        }

        var c, d, e, f, g = new RegExp(/^([ABCDEFGHJKLMNPQRSUVW])(\d{7})([0-9A-J])$/gi), h = a.substring(0, 1),
            i = a.substring(1, 8), j = a.substring(8, 9), k = 0, l = 0, m = 0;
        if (9 !== a.length || !g.test(a)) return !1;
        for (c = 0; c < i.length; c++) d = parseInt(i[c], 10), b(c) ? (d *= 2, m += d < 10 ? d : d - 9) : l += d;
        return k = l + m, e = (10 - k.toString().substr(-1)).toString(), e = parseInt(e, 10) > 9 ? "0" : e, f = "JABCDEFGHI".substr(e, 1).toString(), h.match(/[ABEH]/) ? j === e : h.match(/[KPQS]/) ? j === f : j === e || j === f
    }, "Please specify a valid CIF number."), a.validator.addMethod("cpfBR", function (a) {
        if (a = a.replace(/([~!@#$%^&*()_+=`{}\[\]\-|\\:;'<>,.\/? ])+/g, ""), 11 !== a.length) return !1;
        var b, c, d, e, f = 0;
        if (b = parseInt(a.substring(9, 10), 10), c = parseInt(a.substring(10, 11), 10), d = function (a, b) {
            var c = 10 * a % 11;
            return 10 !== c && 11 !== c || (c = 0), c === b
        }, "" === a || "00000000000" === a || "11111111111" === a || "22222222222" === a || "33333333333" === a || "44444444444" === a || "55555555555" === a || "66666666666" === a || "77777777777" === a || "88888888888" === a || "99999999999" === a) return !1;
        for (e = 1; e <= 9; e++) f += parseInt(a.substring(e - 1, e), 10) * (11 - e);
        if (d(f, b)) {
            for (f = 0, e = 1; e <= 10; e++) f += parseInt(a.substring(e - 1, e), 10) * (12 - e);
            return d(f, c)
        }
        return !1
    }, "Please specify a valid CPF number"), a.validator.addMethod("creditcard", function (a, b) {
        if (this.optional(b)) return "dependency-mismatch";
        if (/[^0-9 \-]+/.test(a)) return !1;
        var c, d, e = 0, f = 0, g = !1;
        if (a = a.replace(/\D/g, ""), a.length < 13 || a.length > 19) return !1;
        for (c = a.length - 1; c >= 0; c--) d = a.charAt(c), f = parseInt(d, 10), g && (f *= 2) > 9 && (f -= 9), e += f, g = !g;
        return e % 10 === 0
    }, "Please enter a valid credit card number."), a.validator.addMethod("creditcardtypes", function (a, b, c) {
        if (/[^0-9\-]+/.test(a)) return !1;
        a = a.replace(/\D/g, "");
        var d = 0;
        return c.mastercard && (d |= 1), c.visa && (d |= 2), c.amex && (d |= 4), c.dinersclub && (d |= 8), c.enroute && (d |= 16), c.discover && (d |= 32), c.jcb && (d |= 64), c.unknown && (d |= 128), c.all && (d = 255), 1 & d && /^(5[12345])/.test(a) ? 16 === a.length : 2 & d && /^(4)/.test(a) ? 16 === a.length : 4 & d && /^(3[47])/.test(a) ? 15 === a.length : 8 & d && /^(3(0[012345]|[68]))/.test(a) ? 14 === a.length : 16 & d && /^(2(014|149))/.test(a) ? 15 === a.length : 32 & d && /^(6011)/.test(a) ? 16 === a.length : 64 & d && /^(3)/.test(a) ? 16 === a.length : 64 & d && /^(2131|1800)/.test(a) ? 15 === a.length : !!(128 & d)
    }, "Please enter a valid credit card number."), a.validator.addMethod("currency", function (a, b, c) {
        var d, e = "string" == typeof c, f = e ? c : c[0], g = !!e || c[1];
        return f = f.replace(/,/g, ""), f = g ? f + "]" : f + "]?", d = "^[" + f + "([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}[0-9]{0,}(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$", d = new RegExp(d), this.optional(b) || d.test(a)
    }, "Please specify a valid currency"), a.validator.addMethod("dateFA", function (a, b) {
        return this.optional(b) || /^[1-4]\d{3}\/((0?[1-6]\/((3[0-1])|([1-2][0-9])|(0?[1-9])))|((1[0-2]|(0?[7-9]))\/(30|([1-2][0-9])|(0?[1-9]))))$/.test(a)
    }, a.validator.messages.date), a.validator.addMethod("dateITA", function (a, b) {
        var c, d, e, f, g, h = !1, i = /^\d{1,2}\/\d{1,2}\/\d{4}$/;
        return i.test(a) ? (c = a.split("/"), d = parseInt(c[0], 10), e = parseInt(c[1], 10), f = parseInt(c[2], 10), g = new Date(Date.UTC(f, e - 1, d, 12, 0, 0, 0)), h = g.getUTCFullYear() === f && g.getUTCMonth() === e - 1 && g.getUTCDate() === d) : h = !1, this.optional(b) || h
    }, a.validator.messages.date), a.validator.addMethod("dateNL", function (a, b) {
        return this.optional(b) || /^(0?[1-9]|[12]\d|3[01])[\.\/\-](0?[1-9]|1[012])[\.\/\-]([12]\d)?(\d\d)$/.test(a)
    }, a.validator.messages.date), a.validator.addMethod("extension", function (a, b, c) {
        return c = "string" == typeof c ? c.replace(/,/g, "|") : "png|jpe?g|gif", this.optional(b) || a.match(new RegExp("\\.(" + c + ")$", "i"))
    }, a.validator.format("Please enter a value with a valid extension.")), a.validator.addMethod("giroaccountNL", function (a, b) {
        return this.optional(b) || /^[0-9]{1,7}$/.test(a)
    }, "Please specify a valid giro account number"), a.validator.addMethod("iban", function (a, b) {
        if (this.optional(b)) return !0;
        var c, d, e, f, g, h, i, j, k, l = a.replace(/ /g, "").toUpperCase(), m = "", n = !0, o = "", p = "", q = 5;
        if (l.length < q) return !1;
        if (c = l.substring(0, 2), h = {
            AL: "\\d{8}[\\dA-Z]{16}",
            AD: "\\d{8}[\\dA-Z]{12}",
            AT: "\\d{16}",
            AZ: "[\\dA-Z]{4}\\d{20}",
            BE: "\\d{12}",
            BH: "[A-Z]{4}[\\dA-Z]{14}",
            BA: "\\d{16}",
            BR: "\\d{23}[A-Z][\\dA-Z]",
            BG: "[A-Z]{4}\\d{6}[\\dA-Z]{8}",
            CR: "\\d{17}",
            HR: "\\d{17}",
            CY: "\\d{8}[\\dA-Z]{16}",
            CZ: "\\d{20}",
            DK: "\\d{14}",
            DO: "[A-Z]{4}\\d{20}",
            EE: "\\d{16}",
            FO: "\\d{14}",
            FI: "\\d{14}",
            FR: "\\d{10}[\\dA-Z]{11}\\d{2}",
            GE: "[\\dA-Z]{2}\\d{16}",
            DE: "\\d{18}",
            GI: "[A-Z]{4}[\\dA-Z]{15}",
            GR: "\\d{7}[\\dA-Z]{16}",
            GL: "\\d{14}",
            GT: "[\\dA-Z]{4}[\\dA-Z]{20}",
            HU: "\\d{24}",
            IS: "\\d{22}",
            IE: "[\\dA-Z]{4}\\d{14}",
            IL: "\\d{19}",
            IT: "[A-Z]\\d{10}[\\dA-Z]{12}",
            KZ: "\\d{3}[\\dA-Z]{13}",
            KW: "[A-Z]{4}[\\dA-Z]{22}",
            LV: "[A-Z]{4}[\\dA-Z]{13}",
            LB: "\\d{4}[\\dA-Z]{20}",
            LI: "\\d{5}[\\dA-Z]{12}",
            LT: "\\d{16}",
            LU: "\\d{3}[\\dA-Z]{13}",
            MK: "\\d{3}[\\dA-Z]{10}\\d{2}",
            MT: "[A-Z]{4}\\d{5}[\\dA-Z]{18}",
            MR: "\\d{23}",
            MU: "[A-Z]{4}\\d{19}[A-Z]{3}",
            MC: "\\d{10}[\\dA-Z]{11}\\d{2}",
            MD: "[\\dA-Z]{2}\\d{18}",
            ME: "\\d{18}",
            NL: "[A-Z]{4}\\d{10}",
            NO: "\\d{11}",
            PK: "[\\dA-Z]{4}\\d{16}",
            PS: "[\\dA-Z]{4}\\d{21}",
            PL: "\\d{24}",
            PT: "\\d{21}",
            RO: "[A-Z]{4}[\\dA-Z]{16}",
            SM: "[A-Z]\\d{10}[\\dA-Z]{12}",
            SA: "\\d{2}[\\dA-Z]{18}",
            RS: "\\d{18}",
            SK: "\\d{20}",
            SI: "\\d{15}",
            ES: "\\d{20}",
            SE: "\\d{20}",
            CH: "\\d{5}[\\dA-Z]{12}",
            TN: "\\d{20}",
            TR: "\\d{5}[\\dA-Z]{17}",
            AE: "\\d{3}\\d{16}",
            GB: "[A-Z]{4}\\d{14}",
            VG: "[\\dA-Z]{4}\\d{16}"
        }, g = h[c], "undefined" != typeof g && (i = new RegExp("^[A-Z]{2}\\d{2}" + g + "$", ""), !i.test(l))) return !1;
        for (d = l.substring(4, l.length) + l.substring(0, 4), j = 0; j < d.length; j++) e = d.charAt(j), "0" !== e && (n = !1), n || (m += "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(e));
        for (k = 0; k < m.length; k++) f = m.charAt(k), p = "" + o + f, o = p % 97;
        return 1 === o
    }, "Please specify a valid IBAN"), a.validator.addMethod("integer", function (a, b) {
        return this.optional(b) || /^-?\d+$/.test(a)
    }, "A positive or negative non-decimal number please"), a.validator.addMethod("ipv4", function (a, b) {
        return this.optional(b) || /^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(a)
    }, "Please enter a valid IP v4 address."), a.validator.addMethod("ipv6", function (a, b) {
        return this.optional(b) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(a)
    }, "Please enter a valid IP v6 address."), a.validator.addMethod("lettersonly", function (a, b) {
        return this.optional(b) || /^[a-z]+$/i.test(a)
    }, "Letters only please"), a.validator.addMethod("letterswithbasicpunc", function (a, b) {
        return this.optional(b) || /^[a-z\-.,()'"\s]+$/i.test(a)
    }, "Letters or punctuation only please"), a.validator.addMethod("mobileNL", function (a, b) {
        return this.optional(b) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)6((\s|\s?\-\s?)?[0-9]){8}$/.test(a)
    }, "Please specify a valid mobile number"), a.validator.addMethod("mobileUK", function (a, b) {
        return a = a.replace(/\(|\)|\s+|-/g, ""), this.optional(b) || a.length > 9 && a.match(/^(?:(?:(?:00\s?|\+)44\s?|0)7(?:[1345789]\d{2}|624)\s?\d{3}\s?\d{3})$/)
    }, "Please specify a valid mobile number"), a.validator.addMethod("nieES", function (a) {
        "use strict";
        var b, c = new RegExp(/^[MXYZ]{1}[0-9]{7,8}[TRWAGMYFPDXBNJZSQVHLCKET]{1}$/gi), d = "TRWAGMYFPDXBNJZSQVHLCKET",
            e = a.substr(a.length - 1).toUpperCase();
        return a = a.toString().toUpperCase(), !(a.length > 10 || a.length < 9 || !c.test(a)) && (a = a.replace(/^[X]/, "0").replace(/^[Y]/, "1").replace(/^[Z]/, "2"), b = 9 === a.length ? a.substr(0, 8) : a.substr(0, 9), d.charAt(parseInt(b, 10) % 23) === e)
    }, "Please specify a valid NIE number."), a.validator.addMethod("nifES", function (a) {
        "use strict";
        return a = a.toUpperCase(), !!a.match("((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)") && (/^[0-9]{8}[A-Z]{1}$/.test(a) ? "TRWAGMYFPDXBNJZSQVHLCKE".charAt(a.substring(8, 0) % 23) === a.charAt(8) : !!/^[KLM]{1}/.test(a) && a[8] === String.fromCharCode(64))
    }, "Please specify a valid NIF number."), a.validator.addMethod("notEqualTo", function (b, c, d) {
        return this.optional(c) || !a.validator.methods.equalTo.call(this, b, c, d)
    }, "Please enter a different value, values must not be the same."), a.validator.addMethod("nowhitespace", function (a, b) {
        return this.optional(b) || /^\S+$/i.test(a)
    }, "No white space please"), a.validator.addMethod("pattern", function (a, b, c) {
        return !!this.optional(b) || ("string" == typeof c && (c = new RegExp("^(?:" + c + ")$")), c.test(a))
    }, "Invalid format."), a.validator.addMethod("phoneNL", function (a, b) {
        return this.optional(b) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)[1-9]((\s|\s?\-\s?)?[0-9]){8}$/.test(a)
    }, "Please specify a valid phone number."), a.validator.addMethod("phonesUK", function (a, b) {
        return a = a.replace(/\(|\)|\s+|-/g, ""), this.optional(b) || a.length > 9 && a.match(/^(?:(?:(?:00\s?|\+)44\s?|0)(?:1\d{8,9}|[23]\d{9}|7(?:[1345789]\d{8}|624\d{6})))$/)
    }, "Please specify a valid uk phone number"), a.validator.addMethod("phoneUK", function (a, b) {
        return a = a.replace(/\(|\)|\s+|-/g, ""), this.optional(b) || a.length > 9 && a.match(/^(?:(?:(?:00\s?|\+)44\s?)|(?:\(?0))(?:\d{2}\)?\s?\d{4}\s?\d{4}|\d{3}\)?\s?\d{3}\s?\d{3,4}|\d{4}\)?\s?(?:\d{5}|\d{3}\s?\d{3})|\d{5}\)?\s?\d{4,5})$/)
    }, "Please specify a valid phone number"), a.validator.addMethod("phoneUS", function (a, b) {
        return a = a.replace(/\s+/g, ""), this.optional(b) || a.length > 9 && a.match(/^(\+?1-?)?(\([2-9]([02-9]\d|1[02-9])\)|[2-9]([02-9]\d|1[02-9]))-?[2-9]([02-9]\d|1[02-9])-?\d{4}$/)
    }, "Please specify a valid phone number"), a.validator.addMethod("postalcodeBR", function (a, b) {
        return this.optional(b) || /^\d{2}.\d{3}-\d{3}?$|^\d{5}-?\d{3}?$/.test(a)
    }, "Informe um CEP válido."), a.validator.addMethod("postalCodeCA", function (a, b) {
        return this.optional(b) || /^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJKLMNPRSTVWXYZ] *\d[ABCEGHJKLMNPRSTVWXYZ]\d$/i.test(a)
    }, "Please specify a valid postal code"), a.validator.addMethod("postalcodeIT", function (a, b) {
        return this.optional(b) || /^\d{5}$/.test(a)
    }, "Please specify a valid postal code"), a.validator.addMethod("postalcodeNL", function (a, b) {
        return this.optional(b) || /^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(a)
    }, "Please specify a valid postal code"), a.validator.addMethod("postcodeUK", function (a, b) {
        return this.optional(b) || /^((([A-PR-UWYZ][0-9])|([A-PR-UWYZ][0-9][0-9])|([A-PR-UWYZ][A-HK-Y][0-9])|([A-PR-UWYZ][A-HK-Y][0-9][0-9])|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\s?([0-9][ABD-HJLNP-UW-Z]{2})|(GIR)\s?(0AA))$/i.test(a)
    }, "Please specify a valid UK postcode"), a.validator.addMethod("require_from_group", function (b, c, d) {
        var e = a(d[1], c.form), f = e.eq(0),
            g = f.data("valid_req_grp") ? f.data("valid_req_grp") : a.extend({}, this), h = e.filter(function () {
                return g.elementValue(this)
            }).length >= d[0];
        return f.data("valid_req_grp", g), a(c).data("being_validated") || (e.data("being_validated", !0), e.each(function () {
            g.element(this)
        }), e.data("being_validated", !1)), h
    }, a.validator.format("Please fill at least {0} of these fields.")), a.validator.addMethod("skip_or_fill_minimum", function (b, c, d) {
        var e = a(d[1], c.form), f = e.eq(0), g = f.data("valid_skip") ? f.data("valid_skip") : a.extend({}, this),
            h = e.filter(function () {
                return g.elementValue(this)
            }).length, i = 0 === h || h >= d[0];
        return f.data("valid_skip", g), a(c).data("being_validated") || (e.data("being_validated", !0), e.each(function () {
            g.element(this)
        }), e.data("being_validated", !1)), i
    }, a.validator.format("Please either skip these fields or fill at least {0} of them.")), a.validator.addMethod("stateUS", function (a, b, c) {
        var d, e = "undefined" == typeof c, f = !e && "undefined" != typeof c.caseSensitive && c.caseSensitive,
            g = !e && "undefined" != typeof c.includeTerritories && c.includeTerritories,
            h = !e && "undefined" != typeof c.includeMilitary && c.includeMilitary;
        return d = g || h ? g && h ? "^(A[AEKLPRSZ]|C[AOT]|D[CE]|FL|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEINOPST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$" : g ? "^(A[KLRSZ]|C[AOT]|D[CE]|FL|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEINOPST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$" : "^(A[AEKLPRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$" : "^(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$", d = f ? new RegExp(d) : new RegExp(d, "i"), this.optional(b) || d.test(a)
    }, "Please specify a valid state"), a.validator.addMethod("strippedminlength", function (b, c, d) {
        return a(b).text().length >= d
    }, a.validator.format("Please enter at least {0} characters")), a.validator.addMethod("time", function (a, b) {
        return this.optional(b) || /^([01]\d|2[0-3]|[0-9])(:[0-5]\d){1,2}$/.test(a)
    }, "Please enter a valid time, between 00:00 and 23:59"), a.validator.addMethod("time12h", function (a, b) {
        return this.optional(b) || /^((0?[1-9]|1[012])(:[0-5]\d){1,2}(\ ?[AP]M))$/i.test(a)
    }, "Please enter a valid time in 12-hour am/pm format"), a.validator.addMethod("url2", function (a, b) {
        return this.optional(b) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a)
    }, a.validator.messages.url), a.validator.addMethod("vinUS", function (a) {
        if (17 !== a.length) return !1;
        var b, c, d, e, f, g,
            h = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"],
            i = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9],
            j = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2], k = 0;
        for (b = 0; b < 17; b++) {
            if (e = j[b], d = a.slice(b, b + 1), 8 === b && (g = d), isNaN(d)) {
                for (c = 0; c < h.length; c++) if (d.toUpperCase() === h[c]) {
                    d = i[c], d *= e, isNaN(g) && 8 === c && (g = h[c]);
                    break
                }
            } else d *= e;
            k += d
        }
        return f = k % 11, 10 === f && (f = "X"), f === g
    }, "The specified vehicle identification number (VIN) is invalid."), a.validator.addMethod("zipcodeUS", function (a, b) {
        return this.optional(b) || /^\d{5}(-\d{4})?$/.test(a)
    }, "The specified US ZIP Code is invalid"), a.validator.addMethod("ziprange", function (a, b) {
        return this.optional(b) || /^90[2-5]\d\{2\}-\d{4}$/.test(a)
    }, "Your ZIP-code must be in the range 902xx-xxxx to 905xx-xxxx"), a
});
/*!
* jquery.inputmask.bundle.js
* https://github.com/RobinHerbots/Inputmask
* Copyright (c) 2010 - 2019 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 4.0.6
*/

(function (modules) {
    var installedModules = {};

    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) {
            return installedModules[moduleId].exports
        }
        var module = installedModules[moduleId] = {i: moduleId, l: false, exports: {}};
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.l = true;
        return module.exports
    }

    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.d = function (exports, name, getter) {
        if (!__webpack_require__.o(exports, name)) {
            Object.defineProperty(exports, name, {enumerable: true, get: getter})
        }
    };
    __webpack_require__.r = function (exports) {
        if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
            Object.defineProperty(exports, Symbol.toStringTag, {value: "Module"})
        }
        Object.defineProperty(exports, "__esModule", {value: true})
    };
    __webpack_require__.t = function (value, mode) {
        if (mode & 1) value = __webpack_require__(value);
        if (mode & 8) return value;
        if (mode & 4 && typeof value === "object" && value && value.__esModule) return value;
        var ns = Object.create(null);
        __webpack_require__.r(ns);
        Object.defineProperty(ns, "default", {enumerable: true, value: value});
        if (mode & 2 && typeof value != "string") for (var key in value) __webpack_require__.d(ns, key, function (key) {
            return value[key]
        }.bind(null, key));
        return ns
    };
    __webpack_require__.n = function (module) {
        var getter = module && module.__esModule ? function getDefault() {
            return module["default"]
        } : function getModuleExports() {
            return module
        };
        __webpack_require__.d(getter, "a", getter);
        return getter
    };
    __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property)
    };
    __webpack_require__.p = "";
    return __webpack_require__(__webpack_require__.s = 0)
})([function (module, exports, __webpack_require__) {
    "use strict";
    __webpack_require__(1);
    __webpack_require__(6);
    __webpack_require__(7);
    var _inputmask = __webpack_require__(2);
    var _inputmask2 = _interopRequireDefault(_inputmask);
    var _inputmask3 = __webpack_require__(3);
    var _inputmask4 = _interopRequireDefault(_inputmask3);
    var _jquery = __webpack_require__(4);
    var _jquery2 = _interopRequireDefault(_jquery);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {default: obj}
    }

    if (_inputmask4.default === _jquery2.default) {
        __webpack_require__(8)
    }
    window.Inputmask = _inputmask2.default
}, function (module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function (factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else {
        }
    })(function (Inputmask) {
        Inputmask.extendDefinitions({
            A: {validator: "[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]", casing: "upper"},
            "&": {validator: "[0-9A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]", casing: "upper"},
            "#": {validator: "[0-9A-Fa-f]", casing: "upper"}
        });
        Inputmask.extendAliases({
            cssunit: {regex: "[+-]?[0-9]+\\.?([0-9]+)?(px|em|rem|ex|%|in|cm|mm|pt|pc)"},
            url: {regex: "(https?|ftp)//.*", autoUnmask: false},
            ip: {
                mask: "i[i[i]].i[i[i]].i[i[i]].i[i[i]]",
                definitions: {
                    i: {
                        validator: function validator(chrs, maskset, pos, strict, opts) {
                            if (pos - 1 > -1 && maskset.buffer[pos - 1] !== ".") {
                                chrs = maskset.buffer[pos - 1] + chrs;
                                if (pos - 2 > -1 && maskset.buffer[pos - 2] !== ".") {
                                    chrs = maskset.buffer[pos - 2] + chrs
                                } else chrs = "0" + chrs
                            } else chrs = "00" + chrs;
                            return new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]").test(chrs)
                        }
                    }
                },
                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {
                    return maskedValue
                },
                inputmode: "numeric"
            },
            email: {
                mask: "*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",
                greedy: false,
                casing: "lower",
                onBeforePaste: function onBeforePaste(pastedValue, opts) {
                    pastedValue = pastedValue.toLowerCase();
                    return pastedValue.replace("mailto:", "")
                },
                definitions: {
                    "*": {validator: "[0-9\uff11-\uff19A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5!#$%&'*+/=?^_`{|}~-]"},
                    "-": {validator: "[0-9A-Za-z-]"}
                },
                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {
                    return maskedValue
                },
                inputmode: "email"
            },
            mac: {mask: "##:##:##:##:##:##"},
            vin: {
                mask: "V{13}9{4}",
                definitions: {V: {validator: "[A-HJ-NPR-Za-hj-npr-z\\d]", casing: "upper"}},
                clearIncomplete: true,
                autoUnmask: true
            }
        });
        return Inputmask
    })
}, function (module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function (factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(5)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else {
        }
    })(function ($, window, undefined) {
        var document = window.document, ua = navigator.userAgent,
            ie = ua.indexOf("MSIE ") > 0 || ua.indexOf("Trident/") > 0, mobile = isInputEventSupported("touchstart"),
            iemobile = /iemobile/i.test(ua), iphone = /iphone/i.test(ua) && !iemobile;

        function Inputmask(alias, options, internal) {
            if (!(this instanceof Inputmask)) {
                return new Inputmask(alias, options, internal)
            }
            this.el = undefined;
            this.events = {};
            this.maskset = undefined;
            this.refreshValue = false;
            if (internal !== true) {
                if ($.isPlainObject(alias)) {
                    options = alias
                } else {
                    options = options || {};
                    if (alias) options.alias = alias
                }
                this.opts = $.extend(true, {}, this.defaults, options);
                this.noMasksCache = options && options.definitions !== undefined;
                this.userOptions = options || {};
                this.isRTL = this.opts.numericInput;
                resolveAlias(this.opts.alias, options, this.opts)
            }
        }

        Inputmask.prototype = {
            dataAttribute: "data-inputmask",
            defaults: {
                placeholder: "_",
                optionalmarker: ["[", "]"],
                quantifiermarker: ["{", "}"],
                groupmarker: ["(", ")"],
                alternatormarker: "|",
                escapeChar: "\\",
                mask: null,
                regex: null,
                oncomplete: $.noop,
                onincomplete: $.noop,
                oncleared: $.noop,
                repeat: 0,
                greedy: false,
                autoUnmask: false,
                removeMaskOnSubmit: false,
                clearMaskOnLostFocus: true,
                insertMode: true,
                clearIncomplete: false,
                alias: null,
                onKeyDown: $.noop,
                onBeforeMask: null,
                onBeforePaste: function onBeforePaste(pastedValue, opts) {
                    return $.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(this, pastedValue, opts) : pastedValue
                },
                onBeforeWrite: null,
                onUnMask: null,
                showMaskOnFocus: true,
                showMaskOnHover: true,
                onKeyValidation: $.noop,
                skipOptionalPartCharacter: " ",
                numericInput: false,
                rightAlign: false,
                undoOnEscape: true,
                radixPoint: "",
                _radixDance: false,
                groupSeparator: "",
                keepStatic: null,
                positionCaretOnTab: true,
                tabThrough: false,
                supportsInputType: ["text", "tel", "url", "password", "search"],
                ignorables: [8, 9, 13, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 229],
                isComplete: null,
                preValidation: null,
                postValidation: null,
                staticDefinitionSymbol: undefined,
                jitMasking: false,
                nullable: true,
                inputEventOnly: false,
                noValuePatching: false,
                positionCaretOnClick: "lvp",
                casing: null,
                inputmode: "verbatim",
                colorMask: false,
                disablePredictiveText: false,
                importDataAttributes: true,
                shiftPositions: true
            },
            definitions: {
                9: {validator: "[0-9\uff11-\uff19]", definitionSymbol: "*"},
                a: {validator: "[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]", definitionSymbol: "*"},
                "*": {validator: "[0-9\uff11-\uff19A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]"}
            },
            aliases: {},
            masksCache: {},
            mask: function mask(elems) {
                var that = this;

                function importAttributeOptions(npt, opts, userOptions, dataAttribute) {
                    if (opts.importDataAttributes === true) {
                        var importOption = function importOption(option, optionData) {
                            optionData = optionData !== undefined ? optionData : npt.getAttribute(dataAttribute + "-" + option);
                            if (optionData !== null) {
                                if (typeof optionData === "string") {
                                    if (option.indexOf("on") === 0) optionData = window[optionData]; else if (optionData === "false") optionData = false; else if (optionData === "true") optionData = true
                                }
                                userOptions[option] = optionData
                            }
                        };
                        var attrOptions = npt.getAttribute(dataAttribute), option, dataoptions, optionData, p;
                        if (attrOptions && attrOptions !== "") {
                            attrOptions = attrOptions.replace(/'/g, '"');
                            dataoptions = JSON.parse("{" + attrOptions + "}")
                        }
                        if (dataoptions) {
                            optionData = undefined;
                            for (p in dataoptions) {
                                if (p.toLowerCase() === "alias") {
                                    optionData = dataoptions[p];
                                    break
                                }
                            }
                        }
                        importOption("alias", optionData);
                        if (userOptions.alias) {
                            resolveAlias(userOptions.alias, userOptions, opts)
                        }
                        for (option in opts) {
                            if (dataoptions) {
                                optionData = undefined;
                                for (p in dataoptions) {
                                    if (p.toLowerCase() === option.toLowerCase()) {
                                        optionData = dataoptions[p];
                                        break
                                    }
                                }
                            }
                            importOption(option, optionData)
                        }
                    }
                    $.extend(true, opts, userOptions);
                    if (npt.dir === "rtl" || opts.rightAlign) {
                        npt.style.textAlign = "right"
                    }
                    if (npt.dir === "rtl" || opts.numericInput) {
                        npt.dir = "ltr";
                        npt.removeAttribute("dir");
                        opts.isRTL = true
                    }
                    return Object.keys(userOptions).length
                }

                if (typeof elems === "string") {
                    elems = document.getElementById(elems) || document.querySelectorAll(elems)
                }
                elems = elems.nodeName ? [elems] : elems;
                $.each(elems, function (ndx, el) {
                    var scopedOpts = $.extend(true, {}, that.opts);
                    if (importAttributeOptions(el, scopedOpts, $.extend(true, {}, that.userOptions), that.dataAttribute)) {
                        var maskset = generateMaskSet(scopedOpts, that.noMasksCache);
                        if (maskset !== undefined) {
                            if (el.inputmask !== undefined) {
                                el.inputmask.opts.autoUnmask = true;
                                el.inputmask.remove()
                            }
                            el.inputmask = new Inputmask(undefined, undefined, true);
                            el.inputmask.opts = scopedOpts;
                            el.inputmask.noMasksCache = that.noMasksCache;
                            el.inputmask.userOptions = $.extend(true, {}, that.userOptions);
                            el.inputmask.isRTL = scopedOpts.isRTL || scopedOpts.numericInput;
                            el.inputmask.el = el;
                            el.inputmask.maskset = maskset;
                            $.data(el, "_inputmask_opts", scopedOpts);
                            maskScope.call(el.inputmask, {action: "mask"})
                        }
                    }
                });
                return elems && elems[0] ? elems[0].inputmask || this : this
            },
            option: function option(options, noremask) {
                if (typeof options === "string") {
                    return this.opts[options]
                } else if ((typeof options === "undefined" ? "undefined" : _typeof(options)) === "object") {
                    $.extend(this.userOptions, options);
                    if (this.el && noremask !== true) {
                        this.mask(this.el)
                    }
                    return this
                }
            },
            unmaskedvalue: function unmaskedvalue(value) {
                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);
                return maskScope.call(this, {action: "unmaskedvalue", value: value})
            },
            remove: function remove() {
                return maskScope.call(this, {action: "remove"})
            },
            getemptymask: function getemptymask() {
                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);
                return maskScope.call(this, {action: "getemptymask"})
            },
            hasMaskedValue: function hasMaskedValue() {
                return !this.opts.autoUnmask
            },
            isComplete: function isComplete() {
                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);
                return maskScope.call(this, {action: "isComplete"})
            },
            getmetadata: function getmetadata() {
                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);
                return maskScope.call(this, {action: "getmetadata"})
            },
            isValid: function isValid(value) {
                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);
                return maskScope.call(this, {action: "isValid", value: value})
            },
            format: function format(value, metadata) {
                this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache);
                return maskScope.call(this, {action: "format", value: value, metadata: metadata})
            },
            setValue: function setValue(value) {
                if (this.el) {
                    $(this.el).trigger("setvalue", [value])
                }
            },
            analyseMask: function analyseMask(mask, regexMask, opts) {
                var tokenizer = /(?:[?*+]|\{[0-9\+\*]+(?:,[0-9\+\*]*)?(?:\|[0-9\+\*]*)?\})|[^.?*+^${[]()|\\]+|./g,
                    regexTokenizer = /\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g,
                    escaped = false, currentToken = new MaskToken, match, m, openenings = [], maskTokens = [],
                    openingToken, currentOpeningToken, alternator, lastMatch, groupToken;

                function MaskToken(isGroup, isOptional, isQuantifier, isAlternator) {
                    this.matches = [];
                    this.openGroup = isGroup || false;
                    this.alternatorGroup = false;
                    this.isGroup = isGroup || false;
                    this.isOptional = isOptional || false;
                    this.isQuantifier = isQuantifier || false;
                    this.isAlternator = isAlternator || false;
                    this.quantifier = {min: 1, max: 1}
                }

                function insertTestDefinition(mtoken, element, position) {
                    position = position !== undefined ? position : mtoken.matches.length;
                    var prevMatch = mtoken.matches[position - 1];
                    if (regexMask) {
                        if (element.indexOf("[") === 0 || escaped && /\\d|\\s|\\w]/i.test(element) || element === ".") {
                            mtoken.matches.splice(position++, 0, {
                                fn: new RegExp(element, opts.casing ? "i" : ""),
                                optionality: false,
                                newBlockMarker: prevMatch === undefined ? "master" : prevMatch.def !== element,
                                casing: null,
                                def: element,
                                placeholder: undefined,
                                nativeDef: element
                            })
                        } else {
                            if (escaped) element = element[element.length - 1];
                            $.each(element.split(""), function (ndx, lmnt) {
                                prevMatch = mtoken.matches[position - 1];
                                mtoken.matches.splice(position++, 0, {
                                    fn: null,
                                    optionality: false,
                                    newBlockMarker: prevMatch === undefined ? "master" : prevMatch.def !== lmnt && prevMatch.fn !== null,
                                    casing: null,
                                    def: opts.staticDefinitionSymbol || lmnt,
                                    placeholder: opts.staticDefinitionSymbol !== undefined ? lmnt : undefined,
                                    nativeDef: (escaped ? "'" : "") + lmnt
                                })
                            })
                        }
                        escaped = false
                    } else {
                        var maskdef = (opts.definitions ? opts.definitions[element] : undefined) || Inputmask.prototype.definitions[element];
                        if (maskdef && !escaped) {
                            mtoken.matches.splice(position++, 0, {
                                fn: maskdef.validator ? typeof maskdef.validator == "string" ? new RegExp(maskdef.validator, opts.casing ? "i" : "") : new function () {
                                    this.test = maskdef.validator
                                } : new RegExp("."),
                                optionality: false,
                                newBlockMarker: prevMatch === undefined ? "master" : prevMatch.def !== (maskdef.definitionSymbol || element),
                                casing: maskdef.casing,
                                def: maskdef.definitionSymbol || element,
                                placeholder: maskdef.placeholder,
                                nativeDef: element
                            })
                        } else {
                            mtoken.matches.splice(position++, 0, {
                                fn: null,
                                optionality: false,
                                newBlockMarker: prevMatch === undefined ? "master" : prevMatch.def !== element && prevMatch.fn !== null,
                                casing: null,
                                def: opts.staticDefinitionSymbol || element,
                                placeholder: opts.staticDefinitionSymbol !== undefined ? element : undefined,
                                nativeDef: (escaped ? "'" : "") + element
                            });
                            escaped = false
                        }
                    }
                }

                function verifyGroupMarker(maskToken) {
                    if (maskToken && maskToken.matches) {
                        $.each(maskToken.matches, function (ndx, token) {
                            var nextToken = maskToken.matches[ndx + 1];
                            if ((nextToken === undefined || nextToken.matches === undefined || nextToken.isQuantifier === false) && token && token.isGroup) {
                                token.isGroup = false;
                                if (!regexMask) {
                                    insertTestDefinition(token, opts.groupmarker[0], 0);
                                    if (token.openGroup !== true) {
                                        insertTestDefinition(token, opts.groupmarker[1])
                                    }
                                }
                            }
                            verifyGroupMarker(token)
                        })
                    }
                }

                function defaultCase() {
                    if (openenings.length > 0) {
                        currentOpeningToken = openenings[openenings.length - 1];
                        insertTestDefinition(currentOpeningToken, m);
                        if (currentOpeningToken.isAlternator) {
                            alternator = openenings.pop();
                            for (var mndx = 0; mndx < alternator.matches.length; mndx++) {
                                if (alternator.matches[mndx].isGroup) alternator.matches[mndx].isGroup = false
                            }
                            if (openenings.length > 0) {
                                currentOpeningToken = openenings[openenings.length - 1];
                                currentOpeningToken.matches.push(alternator)
                            } else {
                                currentToken.matches.push(alternator)
                            }
                        }
                    } else {
                        insertTestDefinition(currentToken, m)
                    }
                }

                function reverseTokens(maskToken) {
                    function reverseStatic(st) {
                        if (st === opts.optionalmarker[0]) st = opts.optionalmarker[1]; else if (st === opts.optionalmarker[1]) st = opts.optionalmarker[0]; else if (st === opts.groupmarker[0]) st = opts.groupmarker[1]; else if (st === opts.groupmarker[1]) st = opts.groupmarker[0];
                        return st
                    }

                    maskToken.matches = maskToken.matches.reverse();
                    for (var match in maskToken.matches) {
                        if (maskToken.matches.hasOwnProperty(match)) {
                            var intMatch = parseInt(match);
                            if (maskToken.matches[match].isQuantifier && maskToken.matches[intMatch + 1] && maskToken.matches[intMatch + 1].isGroup) {
                                var qt = maskToken.matches[match];
                                maskToken.matches.splice(match, 1);
                                maskToken.matches.splice(intMatch + 1, 0, qt)
                            }
                            if (maskToken.matches[match].matches !== undefined) {
                                maskToken.matches[match] = reverseTokens(maskToken.matches[match])
                            } else {
                                maskToken.matches[match] = reverseStatic(maskToken.matches[match])
                            }
                        }
                    }
                    return maskToken
                }

                function groupify(matches) {
                    var groupToken = new MaskToken(true);
                    groupToken.openGroup = false;
                    groupToken.matches = matches;
                    return groupToken
                }

                if (regexMask) {
                    opts.optionalmarker[0] = undefined;
                    opts.optionalmarker[1] = undefined
                }
                while (match = regexMask ? regexTokenizer.exec(mask) : tokenizer.exec(mask)) {
                    m = match[0];
                    if (regexMask) {
                        switch (m.charAt(0)) {
                            case"?":
                                m = "{0,1}";
                                break;
                            case"+":
                            case"*":
                                m = "{" + m + "}";
                                break
                        }
                    }
                    if (escaped) {
                        defaultCase();
                        continue
                    }
                    switch (m.charAt(0)) {
                        case"(?=":
                            break;
                        case"(?!":
                            break;
                        case"(?<=":
                            break;
                        case"(?<!":
                            break;
                        case opts.escapeChar:
                            escaped = true;
                            if (regexMask) {
                                defaultCase()
                            }
                            break;
                        case opts.optionalmarker[1]:
                        case opts.groupmarker[1]:
                            openingToken = openenings.pop();
                            openingToken.openGroup = false;
                            if (openingToken !== undefined) {
                                if (openenings.length > 0) {
                                    currentOpeningToken = openenings[openenings.length - 1];
                                    currentOpeningToken.matches.push(openingToken);
                                    if (currentOpeningToken.isAlternator) {
                                        alternator = openenings.pop();
                                        for (var mndx = 0; mndx < alternator.matches.length; mndx++) {
                                            alternator.matches[mndx].isGroup = false;
                                            alternator.matches[mndx].alternatorGroup = false
                                        }
                                        if (openenings.length > 0) {
                                            currentOpeningToken = openenings[openenings.length - 1];
                                            currentOpeningToken.matches.push(alternator)
                                        } else {
                                            currentToken.matches.push(alternator)
                                        }
                                    }
                                } else {
                                    currentToken.matches.push(openingToken)
                                }
                            } else defaultCase();
                            break;
                        case opts.optionalmarker[0]:
                            openenings.push(new MaskToken(false, true));
                            break;
                        case opts.groupmarker[0]:
                            openenings.push(new MaskToken(true));
                            break;
                        case opts.quantifiermarker[0]:
                            var quantifier = new MaskToken(false, false, true);
                            m = m.replace(/[{}]/g, "");
                            var mqj = m.split("|"), mq = mqj[0].split(","),
                                mq0 = isNaN(mq[0]) ? mq[0] : parseInt(mq[0]),
                                mq1 = mq.length === 1 ? mq0 : isNaN(mq[1]) ? mq[1] : parseInt(mq[1]);
                            if (mq0 === "*" || mq0 === "+") {
                                mq0 = mq1 === "*" ? 0 : 1
                            }
                            quantifier.quantifier = {min: mq0, max: mq1, jit: mqj[1]};
                            var matches = openenings.length > 0 ? openenings[openenings.length - 1].matches : currentToken.matches;
                            match = matches.pop();
                            if (match.isAlternator) {
                                matches.push(match);
                                matches = match.matches;
                                var groupToken = new MaskToken(true);
                                var tmpMatch = matches.pop();
                                matches.push(groupToken);
                                matches = groupToken.matches;
                                match = tmpMatch
                            }
                            if (!match.isGroup) {
                                match = groupify([match])
                            }
                            matches.push(match);
                            matches.push(quantifier);
                            break;
                        case opts.alternatormarker:
                            var groupQuantifier = function groupQuantifier(matches) {
                                var lastMatch = matches.pop();
                                if (lastMatch.isQuantifier) {
                                    lastMatch = groupify([matches.pop(), lastMatch])
                                }
                                return lastMatch
                            };
                            if (openenings.length > 0) {
                                currentOpeningToken = openenings[openenings.length - 1];
                                var subToken = currentOpeningToken.matches[currentOpeningToken.matches.length - 1];
                                if (currentOpeningToken.openGroup && (subToken.matches === undefined || subToken.isGroup === false && subToken.isAlternator === false)) {
                                    lastMatch = openenings.pop()
                                } else {
                                    lastMatch = groupQuantifier(currentOpeningToken.matches)
                                }
                            } else {
                                lastMatch = groupQuantifier(currentToken.matches)
                            }
                            if (lastMatch.isAlternator) {
                                openenings.push(lastMatch)
                            } else {
                                if (lastMatch.alternatorGroup) {
                                    alternator = openenings.pop();
                                    lastMatch.alternatorGroup = false
                                } else {
                                    alternator = new MaskToken(false, false, false, true)
                                }
                                alternator.matches.push(lastMatch);
                                openenings.push(alternator);
                                if (lastMatch.openGroup) {
                                    lastMatch.openGroup = false;
                                    var alternatorGroup = new MaskToken(true);
                                    alternatorGroup.alternatorGroup = true;
                                    openenings.push(alternatorGroup)
                                }
                            }
                            break;
                        default:
                            defaultCase()
                    }
                }
                while (openenings.length > 0) {
                    openingToken = openenings.pop();
                    currentToken.matches.push(openingToken)
                }
                if (currentToken.matches.length > 0) {
                    verifyGroupMarker(currentToken);
                    maskTokens.push(currentToken)
                }
                if (opts.numericInput || opts.isRTL) {
                    reverseTokens(maskTokens[0])
                }
                return maskTokens
            }
        };
        Inputmask.extendDefaults = function (options) {
            $.extend(true, Inputmask.prototype.defaults, options)
        };
        Inputmask.extendDefinitions = function (definition) {
            $.extend(true, Inputmask.prototype.definitions, definition)
        };
        Inputmask.extendAliases = function (alias) {
            $.extend(true, Inputmask.prototype.aliases, alias)
        };
        Inputmask.format = function (value, options, metadata) {
            return Inputmask(options).format(value, metadata)
        };
        Inputmask.unmask = function (value, options) {
            return Inputmask(options).unmaskedvalue(value)
        };
        Inputmask.isValid = function (value, options) {
            return Inputmask(options).isValid(value)
        };
        Inputmask.remove = function (elems) {
            if (typeof elems === "string") {
                elems = document.getElementById(elems) || document.querySelectorAll(elems)
            }
            elems = elems.nodeName ? [elems] : elems;
            $.each(elems, function (ndx, el) {
                if (el.inputmask) el.inputmask.remove()
            })
        };
        Inputmask.setValue = function (elems, value) {
            if (typeof elems === "string") {
                elems = document.getElementById(elems) || document.querySelectorAll(elems)
            }
            elems = elems.nodeName ? [elems] : elems;
            $.each(elems, function (ndx, el) {
                if (el.inputmask) el.inputmask.setValue(value); else $(el).trigger("setvalue", [value])
            })
        };
        Inputmask.escapeRegex = function (str) {
            var specials = ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^"];
            return str.replace(new RegExp("(\\" + specials.join("|\\") + ")", "gim"), "\\$1")
        };
        Inputmask.keyCode = {
            BACKSPACE: 8,
            BACKSPACE_SAFARI: 127,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            INSERT: 45,
            LEFT: 37,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38,
            X: 88,
            CONTROL: 17
        };
        Inputmask.dependencyLib = $;

        function resolveAlias(aliasStr, options, opts) {
            var aliasDefinition = Inputmask.prototype.aliases[aliasStr];
            if (aliasDefinition) {
                if (aliasDefinition.alias) resolveAlias(aliasDefinition.alias, undefined, opts);
                $.extend(true, opts, aliasDefinition);
                $.extend(true, opts, options);
                return true
            } else if (opts.mask === null) {
                opts.mask = aliasStr
            }
            return false
        }

        function generateMaskSet(opts, nocache) {
            function generateMask(mask, metadata, opts) {
                var regexMask = false;
                if (mask === null || mask === "") {
                    regexMask = opts.regex !== null;
                    if (regexMask) {
                        mask = opts.regex;
                        mask = mask.replace(/^(\^)(.*)(\$)$/, "$2")
                    } else {
                        regexMask = true;
                        mask = ".*"
                    }
                }
                if (mask.length === 1 && opts.greedy === false && opts.repeat !== 0) {
                    opts.placeholder = ""
                }
                if (opts.repeat > 0 || opts.repeat === "*" || opts.repeat === "+") {
                    var repeatStart = opts.repeat === "*" ? 0 : opts.repeat === "+" ? 1 : opts.repeat;
                    mask = opts.groupmarker[0] + mask + opts.groupmarker[1] + opts.quantifiermarker[0] + repeatStart + "," + opts.repeat + opts.quantifiermarker[1]
                }
                var masksetDefinition,
                    maskdefKey = regexMask ? "regex_" + opts.regex : opts.numericInput ? mask.split("").reverse().join("") : mask;
                if (Inputmask.prototype.masksCache[maskdefKey] === undefined || nocache === true) {
                    masksetDefinition = {
                        mask: mask,
                        maskToken: Inputmask.prototype.analyseMask(mask, regexMask, opts),
                        validPositions: {},
                        _buffer: undefined,
                        buffer: undefined,
                        tests: {},
                        excludes: {},
                        metadata: metadata,
                        maskLength: undefined,
                        jitOffset: {}
                    };
                    if (nocache !== true) {
                        Inputmask.prototype.masksCache[maskdefKey] = masksetDefinition;
                        masksetDefinition = $.extend(true, {}, Inputmask.prototype.masksCache[maskdefKey])
                    }
                } else masksetDefinition = $.extend(true, {}, Inputmask.prototype.masksCache[maskdefKey]);
                return masksetDefinition
            }

            var ms;
            if ($.isFunction(opts.mask)) {
                opts.mask = opts.mask(opts)
            }
            if ($.isArray(opts.mask)) {
                if (opts.mask.length > 1) {
                    if (opts.keepStatic === null) {
                        opts.keepStatic = "auto";
                        for (var i = 0; i < opts.mask.length; i++) {
                            if (opts.mask[i].charAt(0) !== opts.mask[0].charAt(0)) {
                                opts.keepStatic = true;
                                break
                            }
                        }
                    }
                    var altMask = opts.groupmarker[0];
                    $.each(opts.isRTL ? opts.mask.reverse() : opts.mask, function (ndx, msk) {
                        if (altMask.length > 1) {
                            altMask += opts.groupmarker[1] + opts.alternatormarker + opts.groupmarker[0]
                        }
                        if (msk.mask !== undefined && !$.isFunction(msk.mask)) {
                            altMask += msk.mask
                        } else {
                            altMask += msk
                        }
                    });
                    altMask += opts.groupmarker[1];
                    return generateMask(altMask, opts.mask, opts)
                } else opts.mask = opts.mask.pop()
            }
            if (opts.mask && opts.mask.mask !== undefined && !$.isFunction(opts.mask.mask)) {
                ms = generateMask(opts.mask.mask, opts.mask, opts)
            } else {
                ms = generateMask(opts.mask, opts.mask, opts)
            }
            return ms
        }

        function isInputEventSupported(eventName) {
            var el = document.createElement("input"), evName = "on" + eventName, isSupported = evName in el;
            if (!isSupported) {
                el.setAttribute(evName, "return;");
                isSupported = typeof el[evName] === "function"
            }
            el = null;
            return isSupported
        }

        function maskScope(actionObj, maskset, opts) {
            maskset = maskset || this.maskset;
            opts = opts || this.opts;
            var inputmask = this, el = this.el, isRTL = this.isRTL, undoValue, $el, skipKeyPressEvent = false,
                skipInputEvent = false, ignorable = false, maxLength, mouseEnter = false, colorMask,
                originalPlaceholder;

            function getMaskTemplate(baseOnInput, minimalPos, includeMode, noJit, clearOptionalTail) {
                var greedy = opts.greedy;
                if (clearOptionalTail) opts.greedy = false;
                minimalPos = minimalPos || 0;
                var maskTemplate = [], ndxIntlzr, pos = 0, test, testPos, lvp = getLastValidPosition();
                do {
                    if (baseOnInput === true && getMaskSet().validPositions[pos]) {
                        testPos = clearOptionalTail && getMaskSet().validPositions[pos].match.optionality === true && getMaskSet().validPositions[pos + 1] === undefined && (getMaskSet().validPositions[pos].generatedInput === true || getMaskSet().validPositions[pos].input == opts.skipOptionalPartCharacter && pos > 0) ? determineTestTemplate(pos, getTests(pos, ndxIntlzr, pos - 1)) : getMaskSet().validPositions[pos];
                        test = testPos.match;
                        ndxIntlzr = testPos.locator.slice();
                        maskTemplate.push(includeMode === true ? testPos.input : includeMode === false ? test.nativeDef : getPlaceholder(pos, test))
                    } else {
                        testPos = getTestTemplate(pos, ndxIntlzr, pos - 1);
                        test = testPos.match;
                        ndxIntlzr = testPos.locator.slice();
                        var jitMasking = noJit === true ? false : opts.jitMasking !== false ? opts.jitMasking : test.jit;
                        if (jitMasking === false || jitMasking === undefined || typeof jitMasking === "number" && isFinite(jitMasking) && jitMasking > pos) {
                            maskTemplate.push(includeMode === false ? test.nativeDef : getPlaceholder(pos, test))
                        }
                    }
                    if (opts.keepStatic === "auto") {
                        if (test.newBlockMarker && test.fn !== null) {
                            opts.keepStatic = pos - 1
                        }
                    }
                    pos++
                } while ((maxLength === undefined || pos < maxLength) && (test.fn !== null || test.def !== "") || minimalPos > pos);
                if (maskTemplate[maskTemplate.length - 1] === "") {
                    maskTemplate.pop()
                }
                if (includeMode !== false || getMaskSet().maskLength === undefined) getMaskSet().maskLength = pos - 1;
                opts.greedy = greedy;
                return maskTemplate
            }

            function getMaskSet() {
                return maskset
            }

            function resetMaskSet(soft) {
                var maskset = getMaskSet();
                maskset.buffer = undefined;
                if (soft !== true) {
                    maskset.validPositions = {};
                    maskset.p = 0
                }
            }

            function getLastValidPosition(closestTo, strict, validPositions) {
                var before = -1, after = -1, valids = validPositions || getMaskSet().validPositions;
                if (closestTo === undefined) closestTo = -1;
                for (var posNdx in valids) {
                    var psNdx = parseInt(posNdx);
                    if (valids[psNdx] && (strict || valids[psNdx].generatedInput !== true)) {
                        if (psNdx <= closestTo) before = psNdx;
                        if (psNdx >= closestTo) after = psNdx
                    }
                }
                return before === -1 || before == closestTo ? after : after == -1 ? before : closestTo - before < after - closestTo ? before : after
            }

            function getDecisionTaker(tst) {
                var decisionTaker = tst.locator[tst.alternation];
                if (typeof decisionTaker == "string" && decisionTaker.length > 0) {
                    decisionTaker = decisionTaker.split(",")[0]
                }
                return decisionTaker !== undefined ? decisionTaker.toString() : ""
            }

            function getLocator(tst, align) {
                var locator = (tst.alternation != undefined ? tst.mloc[getDecisionTaker(tst)] : tst.locator).join("");
                if (locator !== "") while (locator.length < align) {
                    locator += "0"
                }
                return locator
            }

            function determineTestTemplate(pos, tests) {
                pos = pos > 0 ? pos - 1 : 0;
                var altTest = getTest(pos), targetLocator = getLocator(altTest), tstLocator, closest, bestMatch;
                for (var ndx = 0; ndx < tests.length; ndx++) {
                    var tst = tests[ndx];
                    tstLocator = getLocator(tst, targetLocator.length);
                    var distance = Math.abs(tstLocator - targetLocator);
                    if (closest === undefined || tstLocator !== "" && distance < closest || bestMatch && !opts.greedy && bestMatch.match.optionality && bestMatch.match.newBlockMarker === "master" && (!tst.match.optionality || !tst.match.newBlockMarker) || bestMatch && bestMatch.match.optionalQuantifier && !tst.match.optionalQuantifier) {
                        closest = distance;
                        bestMatch = tst
                    }
                }
                return bestMatch
            }

            function getTestTemplate(pos, ndxIntlzr, tstPs) {
                return getMaskSet().validPositions[pos] || determineTestTemplate(pos, getTests(pos, ndxIntlzr ? ndxIntlzr.slice() : ndxIntlzr, tstPs))
            }

            function getTest(pos, tests) {
                if (getMaskSet().validPositions[pos]) {
                    return getMaskSet().validPositions[pos]
                }
                return (tests || getTests(pos))[0]
            }

            function positionCanMatchDefinition(pos, def) {
                var valid = false, tests = getTests(pos);
                for (var tndx = 0; tndx < tests.length; tndx++) {
                    if (tests[tndx].match && tests[tndx].match.def === def) {
                        valid = true;
                        break
                    }
                }
                return valid
            }

            function getTests(pos, ndxIntlzr, tstPs) {
                var maskTokens = getMaskSet().maskToken, testPos = ndxIntlzr ? tstPs : 0,
                    ndxInitializer = ndxIntlzr ? ndxIntlzr.slice() : [0], matches = [], insertStop = false, latestMatch,
                    cacheDependency = ndxIntlzr ? ndxIntlzr.join("") : "";

                function resolveTestFromToken(maskToken, ndxInitializer, loopNdx, quantifierRecurse) {
                    function handleMatch(match, loopNdx, quantifierRecurse) {
                        function isFirstMatch(latestMatch, tokenGroup) {
                            var firstMatch = $.inArray(latestMatch, tokenGroup.matches) === 0;
                            if (!firstMatch) {
                                $.each(tokenGroup.matches, function (ndx, match) {
                                    if (match.isQuantifier === true) firstMatch = isFirstMatch(latestMatch, tokenGroup.matches[ndx - 1]); else if (match.hasOwnProperty("matches")) firstMatch = isFirstMatch(latestMatch, match);
                                    if (firstMatch) return false
                                })
                            }
                            return firstMatch
                        }

                        function resolveNdxInitializer(pos, alternateNdx, targetAlternation) {
                            var bestMatch, indexPos;
                            if (getMaskSet().tests[pos] || getMaskSet().validPositions[pos]) {
                                $.each(getMaskSet().tests[pos] || [getMaskSet().validPositions[pos]], function (ndx, lmnt) {
                                    if (lmnt.mloc[alternateNdx]) {
                                        bestMatch = lmnt;
                                        return false
                                    }
                                    var alternation = targetAlternation !== undefined ? targetAlternation : lmnt.alternation,
                                        ndxPos = lmnt.locator[alternation] !== undefined ? lmnt.locator[alternation].toString().indexOf(alternateNdx) : -1;
                                    if ((indexPos === undefined || ndxPos < indexPos) && ndxPos !== -1) {
                                        bestMatch = lmnt;
                                        indexPos = ndxPos
                                    }
                                })
                            }
                            if (bestMatch) {
                                var bestMatchAltIndex = bestMatch.locator[bestMatch.alternation];
                                var locator = bestMatch.mloc[alternateNdx] || bestMatch.mloc[bestMatchAltIndex] || bestMatch.locator;
                                return locator.slice((targetAlternation !== undefined ? targetAlternation : bestMatch.alternation) + 1)
                            } else {
                                return targetAlternation !== undefined ? resolveNdxInitializer(pos, alternateNdx) : undefined
                            }
                        }

                        function isSubsetOf(source, target) {
                            function expand(pattern) {
                                var expanded = [], start, end;
                                for (var i = 0, l = pattern.length; i < l; i++) {
                                    if (pattern.charAt(i) === "-") {
                                        end = pattern.charCodeAt(i + 1);
                                        while (++start < end) {
                                            expanded.push(String.fromCharCode(start))
                                        }
                                    } else {
                                        start = pattern.charCodeAt(i);
                                        expanded.push(pattern.charAt(i))
                                    }
                                }
                                return expanded.join("")
                            }

                            if (opts.regex && source.match.fn !== null && target.match.fn !== null) {
                                return expand(target.match.def.replace(/[\[\]]/g, "")).indexOf(expand(source.match.def.replace(/[\[\]]/g, ""))) !== -1
                            }
                            return source.match.def === target.match.nativeDef
                        }

                        function staticCanMatchDefinition(source, target) {
                            var sloc = source.locator.slice(source.alternation).join(""),
                                tloc = target.locator.slice(target.alternation).join(""), canMatch = sloc == tloc;
                            canMatch = canMatch && source.match.fn === null && target.match.fn !== null ? target.match.fn.test(source.match.def, getMaskSet(), pos, false, opts, false) : false;
                            return canMatch
                        }

                        function setMergeLocators(targetMatch, altMatch) {
                            if (altMatch === undefined || targetMatch.alternation === altMatch.alternation && targetMatch.locator[targetMatch.alternation].toString().indexOf(altMatch.locator[altMatch.alternation]) === -1) {
                                targetMatch.mloc = targetMatch.mloc || {};
                                var locNdx = targetMatch.locator[targetMatch.alternation];
                                if (locNdx === undefined) targetMatch.alternation = undefined; else {
                                    if (typeof locNdx === "string") locNdx = locNdx.split(",")[0];
                                    if (targetMatch.mloc[locNdx] === undefined) targetMatch.mloc[locNdx] = targetMatch.locator.slice();
                                    if (altMatch !== undefined) {
                                        for (var ndx in altMatch.mloc) {
                                            if (typeof ndx === "string") ndx = ndx.split(",")[0];
                                            if (targetMatch.mloc[ndx] === undefined) targetMatch.mloc[ndx] = altMatch.mloc[ndx]
                                        }
                                        targetMatch.locator[targetMatch.alternation] = Object.keys(targetMatch.mloc).join(",")
                                    }
                                    return true
                                }
                            }
                            return false
                        }

                        if (testPos > 500 && quantifierRecurse !== undefined) {
                            throw"Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. " + getMaskSet().mask
                        }
                        if (testPos === pos && match.matches === undefined) {
                            matches.push({match: match, locator: loopNdx.reverse(), cd: cacheDependency, mloc: {}});
                            return true
                        } else if (match.matches !== undefined) {
                            if (match.isGroup && quantifierRecurse !== match) {
                                match = handleMatch(maskToken.matches[$.inArray(match, maskToken.matches) + 1], loopNdx, quantifierRecurse);
                                if (match) return true
                            } else if (match.isOptional) {
                                var optionalToken = match;
                                match = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse);
                                if (match) {
                                    $.each(matches, function (ndx, mtch) {
                                        mtch.match.optionality = true
                                    });
                                    latestMatch = matches[matches.length - 1].match;
                                    if (quantifierRecurse === undefined && isFirstMatch(latestMatch, optionalToken)) {
                                        insertStop = true;
                                        testPos = pos
                                    } else return true
                                }
                            } else if (match.isAlternator) {
                                var alternateToken = match, malternateMatches = [], maltMatches,
                                    currentMatches = matches.slice(), loopNdxCnt = loopNdx.length;
                                var altIndex = ndxInitializer.length > 0 ? ndxInitializer.shift() : -1;
                                if (altIndex === -1 || typeof altIndex === "string") {
                                    var currentPos = testPos, ndxInitializerClone = ndxInitializer.slice(),
                                        altIndexArr = [], amndx;
                                    if (typeof altIndex == "string") {
                                        altIndexArr = altIndex.split(",")
                                    } else {
                                        for (amndx = 0; amndx < alternateToken.matches.length; amndx++) {
                                            altIndexArr.push(amndx.toString())
                                        }
                                    }
                                    if (getMaskSet().excludes[pos]) {
                                        var altIndexArrClone = altIndexArr.slice();
                                        for (var i = 0, el = getMaskSet().excludes[pos].length; i < el; i++) {
                                            altIndexArr.splice(altIndexArr.indexOf(getMaskSet().excludes[pos][i].toString()), 1)
                                        }
                                        if (altIndexArr.length === 0) {
                                            getMaskSet().excludes[pos] = undefined;
                                            altIndexArr = altIndexArrClone
                                        }
                                    }
                                    if (opts.keepStatic === true || isFinite(parseInt(opts.keepStatic)) && currentPos >= opts.keepStatic) altIndexArr = altIndexArr.slice(0, 1);
                                    var unMatchedAlternation = false;
                                    for (var ndx = 0; ndx < altIndexArr.length; ndx++) {
                                        amndx = parseInt(altIndexArr[ndx]);
                                        matches = [];
                                        ndxInitializer = typeof altIndex === "string" ? resolveNdxInitializer(testPos, amndx, loopNdxCnt) || ndxInitializerClone.slice() : ndxInitializerClone.slice();
                                        if (alternateToken.matches[amndx] && handleMatch(alternateToken.matches[amndx], [amndx].concat(loopNdx), quantifierRecurse)) match = true; else if (ndx === 0) {
                                            unMatchedAlternation = true
                                        }
                                        maltMatches = matches.slice();
                                        testPos = currentPos;
                                        matches = [];
                                        for (var ndx1 = 0; ndx1 < maltMatches.length; ndx1++) {
                                            var altMatch = maltMatches[ndx1], dropMatch = false;
                                            altMatch.match.jit = altMatch.match.jit || unMatchedAlternation;
                                            altMatch.alternation = altMatch.alternation || loopNdxCnt;
                                            setMergeLocators(altMatch);
                                            for (var ndx2 = 0; ndx2 < malternateMatches.length; ndx2++) {
                                                var altMatch2 = malternateMatches[ndx2];
                                                if (typeof altIndex !== "string" || altMatch.alternation !== undefined && $.inArray(altMatch.locator[altMatch.alternation].toString(), altIndexArr) !== -1) {
                                                    if (altMatch.match.nativeDef === altMatch2.match.nativeDef) {
                                                        dropMatch = true;
                                                        setMergeLocators(altMatch2, altMatch);
                                                        break
                                                    } else if (isSubsetOf(altMatch, altMatch2)) {
                                                        if (setMergeLocators(altMatch, altMatch2)) {
                                                            dropMatch = true;
                                                            malternateMatches.splice(malternateMatches.indexOf(altMatch2), 0, altMatch)
                                                        }
                                                        break
                                                    } else if (isSubsetOf(altMatch2, altMatch)) {
                                                        setMergeLocators(altMatch2, altMatch);
                                                        break
                                                    } else if (staticCanMatchDefinition(altMatch, altMatch2)) {
                                                        if (setMergeLocators(altMatch, altMatch2)) {
                                                            dropMatch = true;
                                                            malternateMatches.splice(malternateMatches.indexOf(altMatch2), 0, altMatch)
                                                        }
                                                        break
                                                    }
                                                }
                                            }
                                            if (!dropMatch) {
                                                malternateMatches.push(altMatch)
                                            }
                                        }
                                    }
                                    matches = currentMatches.concat(malternateMatches);
                                    testPos = pos;
                                    insertStop = matches.length > 0;
                                    match = malternateMatches.length > 0;
                                    ndxInitializer = ndxInitializerClone.slice()
                                } else match = handleMatch(alternateToken.matches[altIndex] || maskToken.matches[altIndex], [altIndex].concat(loopNdx), quantifierRecurse);
                                if (match) return true
                            } else if (match.isQuantifier && quantifierRecurse !== maskToken.matches[$.inArray(match, maskToken.matches) - 1]) {
                                var qt = match;
                                for (var qndx = ndxInitializer.length > 0 ? ndxInitializer.shift() : 0; qndx < (isNaN(qt.quantifier.max) ? qndx + 1 : qt.quantifier.max) && testPos <= pos; qndx++) {
                                    var tokenGroup = maskToken.matches[$.inArray(qt, maskToken.matches) - 1];
                                    match = handleMatch(tokenGroup, [qndx].concat(loopNdx), tokenGroup);
                                    if (match) {
                                        latestMatch = matches[matches.length - 1].match;
                                        latestMatch.optionalQuantifier = qndx >= qt.quantifier.min;
                                        latestMatch.jit = (qndx || 1) * tokenGroup.matches.indexOf(latestMatch) >= qt.quantifier.jit;
                                        if (latestMatch.optionalQuantifier && isFirstMatch(latestMatch, tokenGroup)) {
                                            insertStop = true;
                                            testPos = pos;
                                            break
                                        }
                                        if (latestMatch.jit) {
                                            getMaskSet().jitOffset[pos] = tokenGroup.matches.indexOf(latestMatch)
                                        }
                                        return true
                                    }
                                }
                            } else {
                                match = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse);
                                if (match) return true
                            }
                        } else {
                            testPos++
                        }
                    }

                    for (var tndx = ndxInitializer.length > 0 ? ndxInitializer.shift() : 0; tndx < maskToken.matches.length; tndx++) {
                        if (maskToken.matches[tndx].isQuantifier !== true) {
                            var match = handleMatch(maskToken.matches[tndx], [tndx].concat(loopNdx), quantifierRecurse);
                            if (match && testPos === pos) {
                                return match
                            } else if (testPos > pos) {
                                break
                            }
                        }
                    }
                }

                function mergeLocators(pos, tests) {
                    var locator = [];
                    if (!$.isArray(tests)) tests = [tests];
                    if (tests.length > 0) {
                        if (tests[0].alternation === undefined) {
                            locator = determineTestTemplate(pos, tests.slice()).locator.slice();
                            if (locator.length === 0) locator = tests[0].locator.slice()
                        } else {
                            $.each(tests, function (ndx, tst) {
                                if (tst.def !== "") {
                                    if (locator.length === 0) locator = tst.locator.slice(); else {
                                        for (var i = 0; i < locator.length; i++) {
                                            if (tst.locator[i] && locator[i].toString().indexOf(tst.locator[i]) === -1) {
                                                locator[i] += "," + tst.locator[i]
                                            }
                                        }
                                    }
                                }
                            })
                        }
                    }
                    return locator
                }

                if (pos > -1) {
                    if (ndxIntlzr === undefined) {
                        var previousPos = pos - 1, test;
                        while ((test = getMaskSet().validPositions[previousPos] || getMaskSet().tests[previousPos]) === undefined && previousPos > -1) {
                            previousPos--
                        }
                        if (test !== undefined && previousPos > -1) {
                            ndxInitializer = mergeLocators(previousPos, test);
                            cacheDependency = ndxInitializer.join("");
                            testPos = previousPos
                        }
                    }
                    if (getMaskSet().tests[pos] && getMaskSet().tests[pos][0].cd === cacheDependency) {
                        return getMaskSet().tests[pos]
                    }
                    for (var mtndx = ndxInitializer.shift(); mtndx < maskTokens.length; mtndx++) {
                        var match = resolveTestFromToken(maskTokens[mtndx], ndxInitializer, [mtndx]);
                        if (match && testPos === pos || testPos > pos) {
                            break
                        }
                    }
                }
                if (matches.length === 0 || insertStop) {
                    matches.push({
                        match: {fn: null, optionality: false, casing: null, def: "", placeholder: ""},
                        locator: [],
                        mloc: {},
                        cd: cacheDependency
                    })
                }
                if (ndxIntlzr !== undefined && getMaskSet().tests[pos]) {
                    return $.extend(true, [], matches)
                }
                getMaskSet().tests[pos] = $.extend(true, [], matches);
                return getMaskSet().tests[pos]
            }

            function getBufferTemplate() {
                if (getMaskSet()._buffer === undefined) {
                    getMaskSet()._buffer = getMaskTemplate(false, 1);
                    if (getMaskSet().buffer === undefined) getMaskSet().buffer = getMaskSet()._buffer.slice()
                }
                return getMaskSet()._buffer
            }

            function getBuffer(noCache) {
                if (getMaskSet().buffer === undefined || noCache === true) {
                    getMaskSet().buffer = getMaskTemplate(true, getLastValidPosition(), true);
                    if (getMaskSet()._buffer === undefined) getMaskSet()._buffer = getMaskSet().buffer.slice()
                }
                return getMaskSet().buffer
            }

            function refreshFromBuffer(start, end, buffer) {
                var i, p;
                if (start === true) {
                    resetMaskSet();
                    start = 0;
                    end = buffer.length
                } else {
                    for (i = start; i < end; i++) {
                        delete getMaskSet().validPositions[i]
                    }
                }
                p = start;
                for (i = start; i < end; i++) {
                    resetMaskSet(true);
                    if (buffer[i] !== opts.skipOptionalPartCharacter) {
                        var valResult = isValid(p, buffer[i], true, true);
                        if (valResult !== false) {
                            resetMaskSet(true);
                            p = valResult.caret !== undefined ? valResult.caret : valResult.pos + 1
                        }
                    }
                }
            }

            function casing(elem, test, pos) {
                switch (opts.casing || test.casing) {
                    case"upper":
                        elem = elem.toUpperCase();
                        break;
                    case"lower":
                        elem = elem.toLowerCase();
                        break;
                    case"title":
                        var posBefore = getMaskSet().validPositions[pos - 1];
                        if (pos === 0 || posBefore && posBefore.input === String.fromCharCode(Inputmask.keyCode.SPACE)) {
                            elem = elem.toUpperCase()
                        } else {
                            elem = elem.toLowerCase()
                        }
                        break;
                    default:
                        if ($.isFunction(opts.casing)) {
                            var args = Array.prototype.slice.call(arguments);
                            args.push(getMaskSet().validPositions);
                            elem = opts.casing.apply(this, args)
                        }
                }
                return elem
            }

            function checkAlternationMatch(altArr1, altArr2, na) {
                var altArrC = opts.greedy ? altArr2 : altArr2.slice(0, 1), isMatch = false,
                    naArr = na !== undefined ? na.split(",") : [], naNdx;
                for (var i = 0; i < naArr.length; i++) {
                    if ((naNdx = altArr1.indexOf(naArr[i])) !== -1) {
                        altArr1.splice(naNdx, 1)
                    }
                }
                for (var alndx = 0; alndx < altArr1.length; alndx++) {
                    if ($.inArray(altArr1[alndx], altArrC) !== -1) {
                        isMatch = true;
                        break
                    }
                }
                return isMatch
            }

            function alternate(pos, c, strict, fromSetValid, rAltPos) {
                var validPsClone = $.extend(true, {}, getMaskSet().validPositions), lastAlt, alternation,
                    isValidRslt = false, altPos, prevAltPos, i, validPos, decisionPos,
                    lAltPos = rAltPos !== undefined ? rAltPos : getLastValidPosition();
                if (lAltPos === -1 && rAltPos === undefined) {
                    lastAlt = 0;
                    prevAltPos = getTest(lastAlt);
                    alternation = prevAltPos.alternation
                } else {
                    for (; lAltPos >= 0; lAltPos--) {
                        altPos = getMaskSet().validPositions[lAltPos];
                        if (altPos && altPos.alternation !== undefined) {
                            if (prevAltPos && prevAltPos.locator[altPos.alternation] !== altPos.locator[altPos.alternation]) {
                                break
                            }
                            lastAlt = lAltPos;
                            alternation = getMaskSet().validPositions[lastAlt].alternation;
                            prevAltPos = altPos
                        }
                    }
                }
                if (alternation !== undefined) {
                    decisionPos = parseInt(lastAlt);
                    getMaskSet().excludes[decisionPos] = getMaskSet().excludes[decisionPos] || [];
                    if (pos !== true) {
                        getMaskSet().excludes[decisionPos].push(getDecisionTaker(prevAltPos))
                    }
                    var validInputsClone = [], staticInputsBeforePos = 0;
                    for (i = decisionPos; i < getLastValidPosition(undefined, true) + 1; i++) {
                        validPos = getMaskSet().validPositions[i];
                        if (validPos && validPos.generatedInput !== true) {
                            validInputsClone.push(validPos.input)
                        } else if (i < pos) staticInputsBeforePos++;
                        delete getMaskSet().validPositions[i]
                    }
                    while (getMaskSet().excludes[decisionPos] && getMaskSet().excludes[decisionPos].length < 10) {
                        var posOffset = staticInputsBeforePos * -1, validInputs = validInputsClone.slice();
                        getMaskSet().tests[decisionPos] = undefined;
                        resetMaskSet(true);
                        isValidRslt = true;
                        while (validInputs.length > 0) {
                            var input = validInputs.shift();
                            if (!(isValidRslt = isValid(getLastValidPosition(undefined, true) + 1, input, false, fromSetValid, true))) {
                                break
                            }
                        }
                        if (isValidRslt && c !== undefined) {
                            var targetLvp = getLastValidPosition(pos) + 1;
                            for (i = decisionPos; i < getLastValidPosition() + 1; i++) {
                                validPos = getMaskSet().validPositions[i];
                                if ((validPos === undefined || validPos.match.fn == null) && i < pos + posOffset) {
                                    posOffset++
                                }
                            }
                            pos = pos + posOffset;
                            isValidRslt = isValid(pos > targetLvp ? targetLvp : pos, c, strict, fromSetValid, true)
                        }
                        if (!isValidRslt) {
                            resetMaskSet();
                            prevAltPos = getTest(decisionPos);
                            getMaskSet().validPositions = $.extend(true, {}, validPsClone);
                            if (getMaskSet().excludes[decisionPos]) {
                                var decisionTaker = getDecisionTaker(prevAltPos);
                                if (getMaskSet().excludes[decisionPos].indexOf(decisionTaker) !== -1) {
                                    isValidRslt = alternate(pos, c, strict, fromSetValid, decisionPos - 1);
                                    break
                                }
                                getMaskSet().excludes[decisionPos].push(decisionTaker);
                                for (i = decisionPos; i < getLastValidPosition(undefined, true) + 1; i++) {
                                    delete getMaskSet().validPositions[i]
                                }
                            } else {
                                isValidRslt = alternate(pos, c, strict, fromSetValid, decisionPos - 1);
                                break
                            }
                        } else break
                    }
                }
                getMaskSet().excludes[decisionPos] = undefined;
                return isValidRslt
            }

            function isValid(pos, c, strict, fromSetValid, fromAlternate, validateOnly) {
                function isSelection(posObj) {
                    return isRTL ? posObj.begin - posObj.end > 1 || posObj.begin - posObj.end === 1 : posObj.end - posObj.begin > 1 || posObj.end - posObj.begin === 1
                }

                strict = strict === true;
                var maskPos = pos;
                if (pos.begin !== undefined) {
                    maskPos = isRTL ? pos.end : pos.begin
                }

                function _isValid(position, c, strict) {
                    var rslt = false;
                    $.each(getTests(position), function (ndx, tst) {
                        var test = tst.match;
                        getBuffer(true);
                        rslt = test.fn != null ? test.fn.test(c, getMaskSet(), position, strict, opts, isSelection(pos)) : (c === test.def || c === opts.skipOptionalPartCharacter) && test.def !== "" ? {
                            c: getPlaceholder(position, test, true) || test.def,
                            pos: position
                        } : false;
                        if (rslt !== false) {
                            var elem = rslt.c !== undefined ? rslt.c : c, validatedPos = position;
                            elem = elem === opts.skipOptionalPartCharacter && test.fn === null ? getPlaceholder(position, test, true) || test.def : elem;
                            if (rslt.remove !== undefined) {
                                if (!$.isArray(rslt.remove)) rslt.remove = [rslt.remove];
                                $.each(rslt.remove.sort(function (a, b) {
                                    return b - a
                                }), function (ndx, lmnt) {
                                    revalidateMask({begin: lmnt, end: lmnt + 1})
                                })
                            }
                            if (rslt.insert !== undefined) {
                                if (!$.isArray(rslt.insert)) rslt.insert = [rslt.insert];
                                $.each(rslt.insert.sort(function (a, b) {
                                    return a - b
                                }), function (ndx, lmnt) {
                                    isValid(lmnt.pos, lmnt.c, true, fromSetValid)
                                })
                            }
                            if (rslt !== true && rslt.pos !== undefined && rslt.pos !== position) {
                                validatedPos = rslt.pos
                            }
                            if (rslt !== true && rslt.pos === undefined && rslt.c === undefined) {
                                return false
                            }
                            if (!revalidateMask(pos, $.extend({}, tst, {input: casing(elem, test, validatedPos)}), fromSetValid, validatedPos)) {
                                rslt = false
                            }
                            return false
                        }
                    });
                    return rslt
                }

                var result = true, positionsClone = $.extend(true, {}, getMaskSet().validPositions);
                if ($.isFunction(opts.preValidation) && !strict && fromSetValid !== true && validateOnly !== true) {
                    result = opts.preValidation(getBuffer(), maskPos, c, isSelection(pos), opts, getMaskSet())
                }
                if (result === true) {
                    trackbackPositions(undefined, maskPos, true);
                    if (maxLength === undefined || maskPos < maxLength) {
                        result = _isValid(maskPos, c, strict);
                        if ((!strict || fromSetValid === true) && result === false && validateOnly !== true) {
                            var currentPosValid = getMaskSet().validPositions[maskPos];
                            if (currentPosValid && currentPosValid.match.fn === null && (currentPosValid.match.def === c || c === opts.skipOptionalPartCharacter)) {
                                result = {caret: seekNext(maskPos)}
                            } else {
                                if ((opts.insertMode || getMaskSet().validPositions[seekNext(maskPos)] === undefined) && (!isMask(maskPos, true) || getMaskSet().jitOffset[maskPos])) {
                                    if (getMaskSet().jitOffset[maskPos] && getMaskSet().validPositions[seekNext(maskPos)] === undefined) {
                                        result = isValid(maskPos + getMaskSet().jitOffset[maskPos], c, strict);
                                        if (result !== false) result.caret = maskPos
                                    } else for (var nPos = maskPos + 1, snPos = seekNext(maskPos); nPos <= snPos; nPos++) {
                                        result = _isValid(nPos, c, strict);
                                        if (result !== false) {
                                            result = trackbackPositions(maskPos, result.pos !== undefined ? result.pos : nPos) || result;
                                            maskPos = nPos;
                                            break
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if (result === false && opts.keepStatic !== false && (opts.regex == null || isComplete(getBuffer())) && !strict && fromAlternate !== true) {
                        result = alternate(maskPos, c, strict, fromSetValid)
                    }
                    if (result === true) {
                        result = {pos: maskPos}
                    }
                }
                if ($.isFunction(opts.postValidation) && result !== false && !strict && fromSetValid !== true && validateOnly !== true) {
                    var postResult = opts.postValidation(getBuffer(true), pos.begin !== undefined ? isRTL ? pos.end : pos.begin : pos, result, opts);
                    if (postResult !== undefined) {
                        if (postResult.refreshFromBuffer && postResult.buffer) {
                            var refresh = postResult.refreshFromBuffer;
                            refreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, postResult.buffer)
                        }
                        result = postResult === true ? result : postResult
                    }
                }
                if (result && result.pos === undefined) {
                    result.pos = maskPos
                }
                if (result === false || validateOnly === true) {
                    resetMaskSet(true);
                    getMaskSet().validPositions = $.extend(true, {}, positionsClone)
                }
                return result
            }

            function trackbackPositions(originalPos, newPos, fillOnly) {
                var result;
                if (originalPos === undefined) {
                    for (originalPos = newPos - 1; originalPos > 0; originalPos--) {
                        if (getMaskSet().validPositions[originalPos]) break
                    }
                }
                for (var ps = originalPos; ps < newPos; ps++) {
                    if (getMaskSet().validPositions[ps] === undefined && !isMask(ps, true)) {
                        var vp = ps == 0 ? getTest(ps) : getMaskSet().validPositions[ps - 1];
                        if (vp) {
                            var tests = getTests(ps).slice();
                            if (tests[tests.length - 1].match.def === "") tests.pop();
                            var bestMatch = determineTestTemplate(ps, tests);
                            bestMatch = $.extend({}, bestMatch, {input: getPlaceholder(ps, bestMatch.match, true) || bestMatch.match.def});
                            bestMatch.generatedInput = true;
                            revalidateMask(ps, bestMatch, true);
                            if (fillOnly !== true) {
                                var cvpInput = getMaskSet().validPositions[newPos].input;
                                getMaskSet().validPositions[newPos] = undefined;
                                result = isValid(newPos, cvpInput, true, true)
                            }
                        }
                    }
                }
                return result
            }

            function revalidateMask(pos, validTest, fromSetValid, validatedPos) {
                function IsEnclosedStatic(pos, valids, selection) {
                    var posMatch = valids[pos];
                    if (posMatch !== undefined && (posMatch.match.fn === null && posMatch.match.optionality !== true || posMatch.input === opts.radixPoint)) {
                        var prevMatch = selection.begin <= pos - 1 ? valids[pos - 1] && valids[pos - 1].match.fn === null && valids[pos - 1] : valids[pos - 1],
                            nextMatch = selection.end > pos + 1 ? valids[pos + 1] && valids[pos + 1].match.fn === null && valids[pos + 1] : valids[pos + 1];
                        return prevMatch && nextMatch
                    }
                    return false
                }

                var begin = pos.begin !== undefined ? pos.begin : pos, end = pos.end !== undefined ? pos.end : pos;
                if (pos.begin > pos.end) {
                    begin = pos.end;
                    end = pos.begin
                }
                validatedPos = validatedPos !== undefined ? validatedPos : begin;
                if (begin !== end || opts.insertMode && getMaskSet().validPositions[validatedPos] !== undefined && fromSetValid === undefined) {
                    var positionsClone = $.extend(true, {}, getMaskSet().validPositions),
                        lvp = getLastValidPosition(undefined, true), i;
                    getMaskSet().p = begin;
                    for (i = lvp; i >= begin; i--) {
                        if (getMaskSet().validPositions[i] && getMaskSet().validPositions[i].match.nativeDef === "+") {
                            opts.isNegative = false
                        }
                        delete getMaskSet().validPositions[i]
                    }
                    var valid = true, j = validatedPos, vps = getMaskSet().validPositions, needsValidation = false,
                        posMatch = j, i = j;
                    if (validTest) {
                        getMaskSet().validPositions[validatedPos] = $.extend(true, {}, validTest);
                        posMatch++;
                        j++;
                        if (begin < end) i++
                    }
                    for (; i <= lvp; i++) {
                        var t = positionsClone[i];
                        if (t !== undefined && (i >= end || i >= begin && t.generatedInput !== true && IsEnclosedStatic(i, positionsClone, {
                            begin: begin,
                            end: end
                        }))) {
                            while (getTest(posMatch).match.def !== "") {
                                if (needsValidation === false && positionsClone[posMatch] && positionsClone[posMatch].match.nativeDef === t.match.nativeDef) {
                                    getMaskSet().validPositions[posMatch] = $.extend(true, {}, positionsClone[posMatch]);
                                    getMaskSet().validPositions[posMatch].input = t.input;
                                    trackbackPositions(undefined, posMatch, true);
                                    j = posMatch + 1;
                                    valid = true
                                } else if (opts.shiftPositions && positionCanMatchDefinition(posMatch, t.match.def)) {
                                    var result = isValid(posMatch, t.input, true, true);
                                    valid = result !== false;
                                    j = result.caret || result.insert ? getLastValidPosition() : posMatch + 1;
                                    needsValidation = true
                                } else {
                                    valid = t.generatedInput === true || t.input === opts.radixPoint && opts.numericInput === true
                                }
                                if (valid) break;
                                if (!valid && posMatch > end && isMask(posMatch, true) && (t.match.fn !== null || posMatch > getMaskSet().maskLength)) {
                                    break
                                }
                                posMatch++
                            }
                            if (getTest(posMatch).match.def == "") valid = false;
                            posMatch = j
                        }
                        if (!valid) break
                    }
                    if (!valid) {
                        getMaskSet().validPositions = $.extend(true, {}, positionsClone);
                        resetMaskSet(true);
                        return false
                    }
                } else if (validTest) {
                    getMaskSet().validPositions[validatedPos] = $.extend(true, {}, validTest)
                }
                resetMaskSet(true);
                return true
            }

            function isMask(pos, strict) {
                var test = getTestTemplate(pos).match;
                if (test.def === "") test = getTest(pos).match;
                if (test.fn != null) {
                    return test.fn
                }
                if (strict !== true && pos > -1) {
                    var tests = getTests(pos);
                    return tests.length > 1 + (tests[tests.length - 1].match.def === "" ? 1 : 0)
                }
                return false
            }

            function seekNext(pos, newBlock) {
                var position = pos + 1;
                while (getTest(position).match.def !== "" && (newBlock === true && (getTest(position).match.newBlockMarker !== true || !isMask(position)) || newBlock !== true && !isMask(position))) {
                    position++
                }
                return position
            }

            function seekPrevious(pos, newBlock) {
                var position = pos, tests;
                if (position <= 0) return 0;
                while (--position > 0 && (newBlock === true && getTest(position).match.newBlockMarker !== true || newBlock !== true && !isMask(position) && (tests = getTests(position), tests.length < 2 || tests.length === 2 && tests[1].match.def === ""))) {
                }
                return position
            }

            function writeBuffer(input, buffer, caretPos, event, triggerEvents) {
                if (event && $.isFunction(opts.onBeforeWrite)) {
                    var result = opts.onBeforeWrite.call(inputmask, event, buffer, caretPos, opts);
                    if (result) {
                        if (result.refreshFromBuffer) {
                            var refresh = result.refreshFromBuffer;
                            refreshFromBuffer(refresh === true ? refresh : refresh.start, refresh.end, result.buffer || buffer);
                            buffer = getBuffer(true)
                        }
                        if (caretPos !== undefined) caretPos = result.caret !== undefined ? result.caret : caretPos
                    }
                }
                if (input !== undefined) {
                    input.inputmask._valueSet(buffer.join(""));
                    if (caretPos !== undefined && (event === undefined || event.type !== "blur")) {
                        caret(input, caretPos)
                    } else renderColorMask(input, caretPos, buffer.length === 0);
                    if (triggerEvents === true) {
                        var $input = $(input), nptVal = input.inputmask._valueGet();
                        skipInputEvent = true;
                        $input.trigger("input");
                        setTimeout(function () {
                            if (nptVal === getBufferTemplate().join("")) {
                                $input.trigger("cleared")
                            } else if (isComplete(buffer) === true) {
                                $input.trigger("complete")
                            }
                        }, 0)
                    }
                }
            }

            function getPlaceholder(pos, test, returnPL) {
                test = test || getTest(pos).match;
                if (test.placeholder !== undefined || returnPL === true) {
                    return $.isFunction(test.placeholder) ? test.placeholder(opts) : test.placeholder
                } else if (test.fn === null) {
                    if (pos > -1 && getMaskSet().validPositions[pos] === undefined) {
                        var tests = getTests(pos), staticAlternations = [], prevTest;
                        if (tests.length > 1 + (tests[tests.length - 1].match.def === "" ? 1 : 0)) {
                            for (var i = 0; i < tests.length; i++) {
                                if (tests[i].match.optionality !== true && tests[i].match.optionalQuantifier !== true && (tests[i].match.fn === null || prevTest === undefined || tests[i].match.fn.test(prevTest.match.def, getMaskSet(), pos, true, opts) !== false)) {
                                    staticAlternations.push(tests[i]);
                                    if (tests[i].match.fn === null) prevTest = tests[i];
                                    if (staticAlternations.length > 1) {
                                        if (/[0-9a-bA-Z]/.test(staticAlternations[0].match.def)) {
                                            return opts.placeholder.charAt(pos % opts.placeholder.length)
                                        }
                                    }
                                }
                            }
                        }
                    }
                    return test.def
                }
                return opts.placeholder.charAt(pos % opts.placeholder.length)
            }

            function HandleNativePlaceholder(npt, value) {
                if (ie) {
                    if (npt.inputmask._valueGet() !== value && (npt.placeholder !== value || npt.placeholder === "")) {
                        var buffer = getBuffer().slice(), nptValue = npt.inputmask._valueGet();
                        if (nptValue !== value) {
                            var lvp = getLastValidPosition();
                            if (lvp === -1 && nptValue === getBufferTemplate().join("")) {
                                buffer = []
                            } else if (lvp !== -1) {
                                clearOptionalTail(buffer)
                            }
                            writeBuffer(npt, buffer)
                        }
                    }
                } else if (npt.placeholder !== value) {
                    npt.placeholder = value;
                    if (npt.placeholder === "") npt.removeAttribute("placeholder")
                }
            }

            var EventRuler = {
                on: function on(input, eventName, eventHandler) {
                    var ev = function ev(e) {
                        var that = this;
                        if (that.inputmask === undefined && this.nodeName !== "FORM") {
                            var imOpts = $.data(that, "_inputmask_opts");
                            if (imOpts) new Inputmask(imOpts).mask(that); else EventRuler.off(that)
                        } else if (e.type !== "setvalue" && this.nodeName !== "FORM" && (that.disabled || that.readOnly && !(e.type === "keydown" && e.ctrlKey && e.keyCode === 67 || opts.tabThrough === false && e.keyCode === Inputmask.keyCode.TAB))) {
                            e.preventDefault()
                        } else {
                            switch (e.type) {
                                case"input":
                                    if (skipInputEvent === true) {
                                        skipInputEvent = false;
                                        return e.preventDefault()
                                    }
                                    if (mobile) {
                                        var args = arguments;
                                        setTimeout(function () {
                                            eventHandler.apply(that, args);
                                            caret(that, that.inputmask.caretPos, undefined, true)
                                        }, 0);
                                        return false
                                    }
                                    break;
                                case"keydown":
                                    skipKeyPressEvent = false;
                                    skipInputEvent = false;
                                    break;
                                case"keypress":
                                    if (skipKeyPressEvent === true) {
                                        return e.preventDefault()
                                    }
                                    skipKeyPressEvent = true;
                                    break;
                                case"click":
                                    if (iemobile || iphone) {
                                        var args = arguments;
                                        setTimeout(function () {
                                            eventHandler.apply(that, args)
                                        }, 0);
                                        return false
                                    }
                                    break
                            }
                            var returnVal = eventHandler.apply(that, arguments);
                            if (returnVal === false) {
                                e.preventDefault();
                                e.stopPropagation()
                            }
                            return returnVal
                        }
                    };
                    input.inputmask.events[eventName] = input.inputmask.events[eventName] || [];
                    input.inputmask.events[eventName].push(ev);
                    if ($.inArray(eventName, ["submit", "reset"]) !== -1) {
                        if (input.form !== null) $(input.form).on(eventName, ev)
                    } else {
                        $(input).on(eventName, ev)
                    }
                }, off: function off(input, event) {
                    if (input.inputmask && input.inputmask.events) {
                        var events;
                        if (event) {
                            events = [];
                            events[event] = input.inputmask.events[event]
                        } else {
                            events = input.inputmask.events
                        }
                        $.each(events, function (eventName, evArr) {
                            while (evArr.length > 0) {
                                var ev = evArr.pop();
                                if ($.inArray(eventName, ["submit", "reset"]) !== -1) {
                                    if (input.form !== null) $(input.form).off(eventName, ev)
                                } else {
                                    $(input).off(eventName, ev)
                                }
                            }
                            delete input.inputmask.events[eventName]
                        })
                    }
                }
            };
            var EventHandlers = {
                keydownEvent: function keydownEvent(e) {
                    var input = this, $input = $(input), k = e.keyCode, pos = caret(input);
                    if (k === Inputmask.keyCode.BACKSPACE || k === Inputmask.keyCode.DELETE || iphone && k === Inputmask.keyCode.BACKSPACE_SAFARI || e.ctrlKey && k === Inputmask.keyCode.X && !isInputEventSupported("cut")) {
                        e.preventDefault();
                        handleRemove(input, k, pos);
                        writeBuffer(input, getBuffer(true), getMaskSet().p, e, input.inputmask._valueGet() !== getBuffer().join(""))
                    } else if (k === Inputmask.keyCode.END || k === Inputmask.keyCode.PAGE_DOWN) {
                        e.preventDefault();
                        var caretPos = seekNext(getLastValidPosition());
                        caret(input, e.shiftKey ? pos.begin : caretPos, caretPos, true)
                    } else if (k === Inputmask.keyCode.HOME && !e.shiftKey || k === Inputmask.keyCode.PAGE_UP) {
                        e.preventDefault();
                        caret(input, 0, e.shiftKey ? pos.begin : 0, true)
                    } else if ((opts.undoOnEscape && k === Inputmask.keyCode.ESCAPE || k === 90 && e.ctrlKey) && e.altKey !== true) {
                        checkVal(input, true, false, undoValue.split(""));
                        $input.trigger("click")
                    } else if (k === Inputmask.keyCode.INSERT && !(e.shiftKey || e.ctrlKey)) {
                        opts.insertMode = !opts.insertMode;
                        input.setAttribute("im-insert", opts.insertMode)
                    } else if (opts.tabThrough === true && k === Inputmask.keyCode.TAB) {
                        if (e.shiftKey === true) {
                            if (getTest(pos.begin).match.fn === null) {
                                pos.begin = seekNext(pos.begin)
                            }
                            pos.end = seekPrevious(pos.begin, true);
                            pos.begin = seekPrevious(pos.end, true)
                        } else {
                            pos.begin = seekNext(pos.begin, true);
                            pos.end = seekNext(pos.begin, true);
                            if (pos.end < getMaskSet().maskLength) pos.end--
                        }
                        if (pos.begin < getMaskSet().maskLength) {
                            e.preventDefault();
                            caret(input, pos.begin, pos.end)
                        }
                    }
                    opts.onKeyDown.call(this, e, getBuffer(), caret(input).begin, opts);
                    ignorable = $.inArray(k, opts.ignorables) !== -1
                }, keypressEvent: function keypressEvent(e, checkval, writeOut, strict, ndx) {
                    var input = this, $input = $(input), k = e.which || e.charCode || e.keyCode;
                    if (checkval !== true && !(e.ctrlKey && e.altKey) && (e.ctrlKey || e.metaKey || ignorable)) {
                        if (k === Inputmask.keyCode.ENTER && undoValue !== getBuffer().join("")) {
                            undoValue = getBuffer().join("");
                            setTimeout(function () {
                                $input.trigger("change")
                            }, 0)
                        }
                        return true
                    } else {
                        if (k) {
                            if (k === 46 && e.shiftKey === false && opts.radixPoint !== "") k = opts.radixPoint.charCodeAt(0);
                            var pos = checkval ? {begin: ndx, end: ndx} : caret(input), forwardPosition,
                                c = String.fromCharCode(k), offset = 0;
                            if (opts._radixDance && opts.numericInput) {
                                var caretPos = getBuffer().indexOf(opts.radixPoint.charAt(0)) + 1;
                                if (pos.begin <= caretPos) {
                                    if (k === opts.radixPoint.charCodeAt(0)) offset = 1;
                                    pos.begin -= 1;
                                    pos.end -= 1
                                }
                            }
                            getMaskSet().writeOutBuffer = true;
                            var valResult = isValid(pos, c, strict);
                            if (valResult !== false) {
                                resetMaskSet(true);
                                forwardPosition = valResult.caret !== undefined ? valResult.caret : seekNext(valResult.pos.begin ? valResult.pos.begin : valResult.pos);
                                getMaskSet().p = forwardPosition
                            }
                            forwardPosition = (opts.numericInput && valResult.caret === undefined ? seekPrevious(forwardPosition) : forwardPosition) + offset;
                            if (writeOut !== false) {
                                setTimeout(function () {
                                    opts.onKeyValidation.call(input, k, valResult, opts)
                                }, 0);
                                if (getMaskSet().writeOutBuffer && valResult !== false) {
                                    var buffer = getBuffer();
                                    writeBuffer(input, buffer, forwardPosition, e, checkval !== true)
                                }
                            }
                            e.preventDefault();
                            if (checkval) {
                                if (valResult !== false) valResult.forwardPosition = forwardPosition;
                                return valResult
                            }
                        }
                    }
                }, pasteEvent: function pasteEvent(e) {
                    var input = this, ev = e.originalEvent || e, $input = $(input),
                        inputValue = input.inputmask._valueGet(true), caretPos = caret(input), tempValue;
                    if (isRTL) {
                        tempValue = caretPos.end;
                        caretPos.end = caretPos.begin;
                        caretPos.begin = tempValue
                    }
                    var valueBeforeCaret = inputValue.substr(0, caretPos.begin),
                        valueAfterCaret = inputValue.substr(caretPos.end, inputValue.length);
                    if (valueBeforeCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(0, caretPos.begin).join("")) valueBeforeCaret = "";
                    if (valueAfterCaret === (isRTL ? getBufferTemplate().reverse() : getBufferTemplate()).slice(caretPos.end).join("")) valueAfterCaret = "";
                    if (window.clipboardData && window.clipboardData.getData) {
                        inputValue = valueBeforeCaret + window.clipboardData.getData("Text") + valueAfterCaret
                    } else if (ev.clipboardData && ev.clipboardData.getData) {
                        inputValue = valueBeforeCaret + ev.clipboardData.getData("text/plain") + valueAfterCaret
                    } else return true;
                    var pasteValue = inputValue;
                    if ($.isFunction(opts.onBeforePaste)) {
                        pasteValue = opts.onBeforePaste.call(inputmask, inputValue, opts);
                        if (pasteValue === false) {
                            return e.preventDefault()
                        }
                        if (!pasteValue) {
                            pasteValue = inputValue
                        }
                    }
                    checkVal(input, false, false, pasteValue.toString().split(""));
                    writeBuffer(input, getBuffer(), seekNext(getLastValidPosition()), e, undoValue !== getBuffer().join(""));
                    return e.preventDefault()
                }, inputFallBackEvent: function inputFallBackEvent(e) {
                    function radixPointHandler(input, inputValue, caretPos) {
                        if (inputValue.charAt(caretPos.begin - 1) === "." && opts.radixPoint !== "") {
                            inputValue = inputValue.split("");
                            inputValue[caretPos.begin - 1] = opts.radixPoint.charAt(0);
                            inputValue = inputValue.join("")
                        }
                        return inputValue
                    }

                    function ieMobileHandler(input, inputValue, caretPos) {
                        if (iemobile) {
                            var inputChar = inputValue.replace(getBuffer().join(""), "");
                            if (inputChar.length === 1) {
                                var iv = inputValue.split("");
                                iv.splice(caretPos.begin, 0, inputChar);
                                inputValue = iv.join("")
                            }
                        }
                        return inputValue
                    }

                    var input = this, inputValue = input.inputmask._valueGet();
                    if (getBuffer().join("") !== inputValue) {
                        var caretPos = caret(input);
                        inputValue = radixPointHandler(input, inputValue, caretPos);
                        inputValue = ieMobileHandler(input, inputValue, caretPos);
                        if (getBuffer().join("") !== inputValue) {
                            var buffer = getBuffer().join(""),
                                offset = !opts.numericInput && inputValue.length > buffer.length ? -1 : 0,
                                frontPart = inputValue.substr(0, caretPos.begin),
                                backPart = inputValue.substr(caretPos.begin),
                                frontBufferPart = buffer.substr(0, caretPos.begin + offset),
                                backBufferPart = buffer.substr(caretPos.begin + offset);
                            var selection = caretPos, entries = "", isEntry = false;
                            if (frontPart !== frontBufferPart) {
                                var fpl = (isEntry = frontPart.length >= frontBufferPart.length) ? frontPart.length : frontBufferPart.length,
                                    i;
                                for (i = 0; frontPart.charAt(i) === frontBufferPart.charAt(i) && i < fpl; i++) {
                                }
                                if (isEntry) {
                                    selection.begin = i - offset;
                                    entries += frontPart.slice(i, selection.end)
                                }
                            }
                            if (backPart !== backBufferPart) {
                                if (backPart.length > backBufferPart.length) {
                                    entries += backPart.slice(0, 1)
                                } else {
                                    if (backPart.length < backBufferPart.length) {
                                        selection.end += backBufferPart.length - backPart.length;
                                        if (!isEntry && opts.radixPoint !== "" && backPart === "" && frontPart.charAt(selection.begin + offset - 1) === opts.radixPoint) {
                                            selection.begin--;
                                            entries = opts.radixPoint
                                        }
                                    }
                                }
                            }
                            writeBuffer(input, getBuffer(), {
                                begin: selection.begin + offset,
                                end: selection.end + offset
                            });
                            if (entries.length > 0) {
                                $.each(entries.split(""), function (ndx, entry) {
                                    var keypress = new $.Event("keypress");
                                    keypress.which = entry.charCodeAt(0);
                                    ignorable = false;
                                    EventHandlers.keypressEvent.call(input, keypress)
                                })
                            } else {
                                if (selection.begin === selection.end - 1) {
                                    selection.begin = seekPrevious(selection.begin + 1);
                                    if (selection.begin === selection.end - 1) {
                                        caret(input, selection.begin)
                                    } else {
                                        caret(input, selection.begin, selection.end)
                                    }
                                }
                                var keydown = new $.Event("keydown");
                                keydown.keyCode = opts.numericInput ? Inputmask.keyCode.BACKSPACE : Inputmask.keyCode.DELETE;
                                EventHandlers.keydownEvent.call(input, keydown)
                            }
                            e.preventDefault()
                        }
                    }
                }, beforeInputEvent: function beforeInputEvent(e) {
                    if (e.cancelable) {
                        var input = this;
                        switch (e.inputType) {
                            case"insertText":
                                $.each(e.data.split(""), function (ndx, entry) {
                                    var keypress = new $.Event("keypress");
                                    keypress.which = entry.charCodeAt(0);
                                    ignorable = false;
                                    EventHandlers.keypressEvent.call(input, keypress)
                                });
                                return e.preventDefault();
                            case"deleteContentBackward":
                                var keydown = new $.Event("keydown");
                                keydown.keyCode = Inputmask.keyCode.BACKSPACE;
                                EventHandlers.keydownEvent.call(input, keydown);
                                return e.preventDefault();
                            case"deleteContentForward":
                                var keydown = new $.Event("keydown");
                                keydown.keyCode = Inputmask.keyCode.DELETE;
                                EventHandlers.keydownEvent.call(input, keydown);
                                return e.preventDefault()
                        }
                    }
                }, setValueEvent: function setValueEvent(e) {
                    this.inputmask.refreshValue = false;
                    var input = this, value = e && e.detail ? e.detail[0] : arguments[1],
                        value = value || input.inputmask._valueGet(true);
                    if ($.isFunction(opts.onBeforeMask)) value = opts.onBeforeMask.call(inputmask, value, opts) || value;
                    value = value.split("");
                    checkVal(input, true, false, value);
                    undoValue = getBuffer().join("");
                    if ((opts.clearMaskOnLostFocus || opts.clearIncomplete) && input.inputmask._valueGet() === getBufferTemplate().join("")) {
                        input.inputmask._valueSet("")
                    }
                }, focusEvent: function focusEvent(e) {
                    var input = this, nptValue = input.inputmask._valueGet();
                    if (opts.showMaskOnFocus) {
                        if (nptValue !== getBuffer().join("")) {
                            writeBuffer(input, getBuffer(), seekNext(getLastValidPosition()))
                        } else if (mouseEnter === false) {
                            caret(input, seekNext(getLastValidPosition()))
                        }
                    }
                    if (opts.positionCaretOnTab === true && mouseEnter === false) {
                        EventHandlers.clickEvent.apply(input, [e, true])
                    }
                    undoValue = getBuffer().join("")
                }, mouseleaveEvent: function mouseleaveEvent(e) {
                    var input = this;
                    mouseEnter = false;
                    if (opts.clearMaskOnLostFocus && document.activeElement !== input) {
                        HandleNativePlaceholder(input, originalPlaceholder)
                    }
                }, clickEvent: function clickEvent(e, tabbed) {
                    function doRadixFocus(clickPos) {
                        if (opts.radixPoint !== "") {
                            var vps = getMaskSet().validPositions;
                            if (vps[clickPos] === undefined || vps[clickPos].input === getPlaceholder(clickPos)) {
                                if (clickPos < seekNext(-1)) return true;
                                var radixPos = $.inArray(opts.radixPoint, getBuffer());
                                if (radixPos !== -1) {
                                    for (var vp in vps) {
                                        if (radixPos < vp && vps[vp].input !== getPlaceholder(vp)) {
                                            return false
                                        }
                                    }
                                    return true
                                }
                            }
                        }
                        return false
                    }

                    var input = this;
                    setTimeout(function () {
                        if (document.activeElement === input) {
                            var selectedCaret = caret(input);
                            if (tabbed) {
                                if (isRTL) {
                                    selectedCaret.end = selectedCaret.begin
                                } else {
                                    selectedCaret.begin = selectedCaret.end
                                }
                            }
                            if (selectedCaret.begin === selectedCaret.end) {
                                switch (opts.positionCaretOnClick) {
                                    case"none":
                                        break;
                                    case"select":
                                        caret(input, 0, getBuffer().length);
                                        break;
                                    case"ignore":
                                        caret(input, seekNext(getLastValidPosition()));
                                        break;
                                    case"radixFocus":
                                        if (doRadixFocus(selectedCaret.begin)) {
                                            var radixPos = getBuffer().join("").indexOf(opts.radixPoint);
                                            caret(input, opts.numericInput ? seekNext(radixPos) : radixPos);
                                            break
                                        }
                                    default:
                                        var clickPosition = selectedCaret.begin,
                                            lvclickPosition = getLastValidPosition(clickPosition, true),
                                            lastPosition = seekNext(lvclickPosition);
                                        if (clickPosition < lastPosition) {
                                            caret(input, !isMask(clickPosition, true) && !isMask(clickPosition - 1, true) ? seekNext(clickPosition) : clickPosition)
                                        } else {
                                            var lvp = getMaskSet().validPositions[lvclickPosition],
                                                tt = getTestTemplate(lastPosition, lvp ? lvp.match.locator : undefined, lvp),
                                                placeholder = getPlaceholder(lastPosition, tt.match);
                                            if (placeholder !== "" && getBuffer()[lastPosition] !== placeholder && tt.match.optionalQuantifier !== true && tt.match.newBlockMarker !== true || !isMask(lastPosition, opts.keepStatic) && tt.match.def === placeholder) {
                                                var newPos = seekNext(lastPosition);
                                                if (clickPosition >= newPos || clickPosition === lastPosition) {
                                                    lastPosition = newPos
                                                }
                                            }
                                            caret(input, lastPosition)
                                        }
                                        break
                                }
                            }
                        }
                    }, 0)
                }, cutEvent: function cutEvent(e) {
                    var input = this, $input = $(input), pos = caret(input), ev = e.originalEvent || e;
                    var clipboardData = window.clipboardData || ev.clipboardData,
                        clipData = isRTL ? getBuffer().slice(pos.end, pos.begin) : getBuffer().slice(pos.begin, pos.end);
                    clipboardData.setData("text", isRTL ? clipData.reverse().join("") : clipData.join(""));
                    if (document.execCommand) document.execCommand("copy");
                    handleRemove(input, Inputmask.keyCode.DELETE, pos);
                    writeBuffer(input, getBuffer(), getMaskSet().p, e, undoValue !== getBuffer().join(""))
                }, blurEvent: function blurEvent(e) {
                    var $input = $(this), input = this;
                    if (input.inputmask) {
                        HandleNativePlaceholder(input, originalPlaceholder);
                        var nptValue = input.inputmask._valueGet(), buffer = getBuffer().slice();
                        if (nptValue !== "" || colorMask !== undefined) {
                            if (opts.clearMaskOnLostFocus) {
                                if (getLastValidPosition() === -1 && nptValue === getBufferTemplate().join("")) {
                                    buffer = []
                                } else {
                                    clearOptionalTail(buffer)
                                }
                            }
                            if (isComplete(buffer) === false) {
                                setTimeout(function () {
                                    $input.trigger("incomplete")
                                }, 0);
                                if (opts.clearIncomplete) {
                                    resetMaskSet();
                                    if (opts.clearMaskOnLostFocus) {
                                        buffer = []
                                    } else {
                                        buffer = getBufferTemplate().slice()
                                    }
                                }
                            }
                            writeBuffer(input, buffer, undefined, e)
                        }
                        if (undoValue !== getBuffer().join("")) {
                            undoValue = buffer.join("");
                            $input.trigger("change")
                        }
                    }
                }, mouseenterEvent: function mouseenterEvent(e) {
                    var input = this;
                    mouseEnter = true;
                    if (document.activeElement !== input && opts.showMaskOnHover) {
                        HandleNativePlaceholder(input, (isRTL ? getBuffer().slice().reverse() : getBuffer()).join(""))
                    }
                }, submitEvent: function submitEvent(e) {
                    if (undoValue !== getBuffer().join("")) {
                        $el.trigger("change")
                    }
                    if (opts.clearMaskOnLostFocus && getLastValidPosition() === -1 && el.inputmask._valueGet && el.inputmask._valueGet() === getBufferTemplate().join("")) {
                        el.inputmask._valueSet("")
                    }
                    if (opts.clearIncomplete && isComplete(getBuffer()) === false) {
                        el.inputmask._valueSet("")
                    }
                    if (opts.removeMaskOnSubmit) {
                        el.inputmask._valueSet(el.inputmask.unmaskedvalue(), true);
                        setTimeout(function () {
                            writeBuffer(el, getBuffer())
                        }, 0)
                    }
                }, resetEvent: function resetEvent(e) {
                    el.inputmask.refreshValue = true;
                    setTimeout(function () {
                        $el.trigger("setvalue")
                    }, 0)
                }
            };

            function checkVal(input, writeOut, strict, nptvl, initiatingEvent) {
                var inputmask = this || input.inputmask, inputValue = nptvl.slice(), charCodes = "", initialNdx = -1,
                    result = undefined;

                function isTemplateMatch(ndx, charCodes) {
                    var charCodeNdx = getMaskTemplate(true, 0, false).slice(ndx, seekNext(ndx)).join("").replace(/'/g, "").indexOf(charCodes);
                    return charCodeNdx !== -1 && !isMask(ndx) && (getTest(ndx).match.nativeDef === charCodes.charAt(0) || getTest(ndx).match.fn === null && getTest(ndx).match.nativeDef === "'" + charCodes.charAt(0) || getTest(ndx).match.nativeDef === " " && (getTest(ndx + 1).match.nativeDef === charCodes.charAt(0) || getTest(ndx + 1).match.fn === null && getTest(ndx + 1).match.nativeDef === "'" + charCodes.charAt(0)))
                }

                resetMaskSet();
                if (!strict && opts.autoUnmask !== true) {
                    var staticInput = getBufferTemplate().slice(0, seekNext(-1)).join(""),
                        matches = inputValue.join("").match(new RegExp("^" + Inputmask.escapeRegex(staticInput), "g"));
                    if (matches && matches.length > 0) {
                        inputValue.splice(0, matches.length * staticInput.length);
                        initialNdx = seekNext(initialNdx)
                    }
                } else {
                    initialNdx = seekNext(initialNdx)
                }
                if (initialNdx === -1) {
                    getMaskSet().p = seekNext(initialNdx);
                    initialNdx = 0
                } else getMaskSet().p = initialNdx;
                inputmask.caretPos = {begin: initialNdx};
                $.each(inputValue, function (ndx, charCode) {
                    if (charCode !== undefined) {
                        if (getMaskSet().validPositions[ndx] === undefined && inputValue[ndx] === getPlaceholder(ndx) && isMask(ndx, true) && isValid(ndx, inputValue[ndx], true, undefined, undefined, true) === false) {
                            getMaskSet().p++
                        } else {
                            var keypress = new $.Event("_checkval");
                            keypress.which = charCode.charCodeAt(0);
                            charCodes += charCode;
                            var lvp = getLastValidPosition(undefined, true);
                            if (!isTemplateMatch(initialNdx, charCodes)) {
                                result = EventHandlers.keypressEvent.call(input, keypress, true, false, strict, inputmask.caretPos.begin);
                                if (result) {
                                    initialNdx = inputmask.caretPos.begin + 1;
                                    charCodes = ""
                                }
                            } else {
                                result = EventHandlers.keypressEvent.call(input, keypress, true, false, strict, lvp + 1)
                            }
                            if (result) {
                                writeBuffer(undefined, getBuffer(), result.forwardPosition, keypress, false);
                                inputmask.caretPos = {begin: result.forwardPosition, end: result.forwardPosition}
                            }
                        }
                    }
                });
                if (writeOut) writeBuffer(input, getBuffer(), result ? result.forwardPosition : undefined, initiatingEvent || new $.Event("checkval"), initiatingEvent && initiatingEvent.type === "input")
            }

            function unmaskedvalue(input) {
                if (input) {
                    if (input.inputmask === undefined) {
                        return input.value
                    }
                    if (input.inputmask && input.inputmask.refreshValue) {
                        EventHandlers.setValueEvent.call(input)
                    }
                }
                var umValue = [], vps = getMaskSet().validPositions;
                for (var pndx in vps) {
                    if (vps[pndx].match && vps[pndx].match.fn != null) {
                        umValue.push(vps[pndx].input)
                    }
                }
                var unmaskedValue = umValue.length === 0 ? "" : (isRTL ? umValue.reverse() : umValue).join("");
                if ($.isFunction(opts.onUnMask)) {
                    var bufferValue = (isRTL ? getBuffer().slice().reverse() : getBuffer()).join("");
                    unmaskedValue = opts.onUnMask.call(inputmask, bufferValue, unmaskedValue, opts)
                }
                return unmaskedValue
            }

            function caret(input, begin, end, notranslate) {
                function translatePosition(pos) {
                    if (isRTL && typeof pos === "number" && (!opts.greedy || opts.placeholder !== "") && el) {
                        pos = el.inputmask._valueGet().length - pos
                    }
                    return pos
                }

                var range;
                if (begin !== undefined) {
                    if ($.isArray(begin)) {
                        end = isRTL ? begin[0] : begin[1];
                        begin = isRTL ? begin[1] : begin[0]
                    }
                    if (begin.begin !== undefined) {
                        end = isRTL ? begin.begin : begin.end;
                        begin = isRTL ? begin.end : begin.begin
                    }
                    if (typeof begin === "number") {
                        begin = notranslate ? begin : translatePosition(begin);
                        end = notranslate ? end : translatePosition(end);
                        end = typeof end == "number" ? end : begin;
                        var scrollCalc = parseInt(((input.ownerDocument.defaultView || window).getComputedStyle ? (input.ownerDocument.defaultView || window).getComputedStyle(input, null) : input.currentStyle).fontSize) * end;
                        input.scrollLeft = scrollCalc > input.scrollWidth ? scrollCalc : 0;
                        input.inputmask.caretPos = {begin: begin, end: end};
                        if (input === document.activeElement) {
                            if ("selectionStart" in input) {
                                input.selectionStart = begin;
                                input.selectionEnd = end
                            } else if (window.getSelection) {
                                range = document.createRange();
                                if (input.firstChild === undefined || input.firstChild === null) {
                                    var textNode = document.createTextNode("");
                                    input.appendChild(textNode)
                                }
                                range.setStart(input.firstChild, begin < input.inputmask._valueGet().length ? begin : input.inputmask._valueGet().length);
                                range.setEnd(input.firstChild, end < input.inputmask._valueGet().length ? end : input.inputmask._valueGet().length);
                                range.collapse(true);
                                var sel = window.getSelection();
                                sel.removeAllRanges();
                                sel.addRange(range)
                            } else if (input.createTextRange) {
                                range = input.createTextRange();
                                range.collapse(true);
                                range.moveEnd("character", end);
                                range.moveStart("character", begin);
                                range.select()
                            }
                            renderColorMask(input, {begin: begin, end: end})
                        }
                    }
                } else {
                    if ("selectionStart" in input) {
                        begin = input.selectionStart;
                        end = input.selectionEnd
                    } else if (window.getSelection) {
                        range = window.getSelection().getRangeAt(0);
                        if (range.commonAncestorContainer.parentNode === input || range.commonAncestorContainer === input) {
                            begin = range.startOffset;
                            end = range.endOffset
                        }
                    } else if (document.selection && document.selection.createRange) {
                        range = document.selection.createRange();
                        begin = 0 - range.duplicate().moveStart("character", -input.inputmask._valueGet().length);
                        end = begin + range.text.length
                    }
                    return {
                        begin: notranslate ? begin : translatePosition(begin),
                        end: notranslate ? end : translatePosition(end)
                    }
                }
            }

            function determineLastRequiredPosition(returnDefinition) {
                var buffer = getMaskTemplate(true, getLastValidPosition(), true, true), bl = buffer.length, pos,
                    lvp = getLastValidPosition(), positions = {}, lvTest = getMaskSet().validPositions[lvp],
                    ndxIntlzr = lvTest !== undefined ? lvTest.locator.slice() : undefined, testPos;
                for (pos = lvp + 1; pos < buffer.length; pos++) {
                    testPos = getTestTemplate(pos, ndxIntlzr, pos - 1);
                    ndxIntlzr = testPos.locator.slice();
                    positions[pos] = $.extend(true, {}, testPos)
                }
                var lvTestAlt = lvTest && lvTest.alternation !== undefined ? lvTest.locator[lvTest.alternation] : undefined;
                for (pos = bl - 1; pos > lvp; pos--) {
                    testPos = positions[pos];
                    if ((testPos.match.optionality || testPos.match.optionalQuantifier && testPos.match.newBlockMarker || lvTestAlt && (lvTestAlt !== positions[pos].locator[lvTest.alternation] && testPos.match.fn != null || testPos.match.fn === null && testPos.locator[lvTest.alternation] && checkAlternationMatch(testPos.locator[lvTest.alternation].toString().split(","), lvTestAlt.toString().split(",")) && getTests(pos)[0].def !== "")) && buffer[pos] === getPlaceholder(pos, testPos.match)) {
                        bl--
                    } else break
                }
                return returnDefinition ? {l: bl, def: positions[bl] ? positions[bl].match : undefined} : bl
            }

            function clearOptionalTail(buffer) {
                buffer.length = 0;
                var template = getMaskTemplate(true, 0, true, undefined, true), lmnt, validPos;
                while (lmnt = template.shift(), lmnt !== undefined) {
                    buffer.push(lmnt)
                }
                return buffer
            }

            function isComplete(buffer) {
                if ($.isFunction(opts.isComplete)) return opts.isComplete(buffer, opts);
                if (opts.repeat === "*") return undefined;
                var complete = false, lrp = determineLastRequiredPosition(true), aml = seekPrevious(lrp.l);
                if (lrp.def === undefined || lrp.def.newBlockMarker || lrp.def.optionality || lrp.def.optionalQuantifier) {
                    complete = true;
                    for (var i = 0; i <= aml; i++) {
                        var test = getTestTemplate(i).match;
                        if (test.fn !== null && getMaskSet().validPositions[i] === undefined && test.optionality !== true && test.optionalQuantifier !== true || test.fn === null && buffer[i] !== getPlaceholder(i, test)) {
                            complete = false;
                            break
                        }
                    }
                }
                return complete
            }

            function handleRemove(input, k, pos, strict, fromIsValid) {
                if (opts.numericInput || isRTL) {
                    if (k === Inputmask.keyCode.BACKSPACE) {
                        k = Inputmask.keyCode.DELETE
                    } else if (k === Inputmask.keyCode.DELETE) {
                        k = Inputmask.keyCode.BACKSPACE
                    }
                    if (isRTL) {
                        var pend = pos.end;
                        pos.end = pos.begin;
                        pos.begin = pend
                    }
                }
                if (k === Inputmask.keyCode.BACKSPACE && pos.end - pos.begin < 1) {
                    pos.begin = seekPrevious(pos.begin);
                    if (getMaskSet().validPositions[pos.begin] !== undefined && getMaskSet().validPositions[pos.begin].input === opts.groupSeparator) {
                        pos.begin--
                    }
                } else if (k === Inputmask.keyCode.DELETE && pos.begin === pos.end) {
                    pos.end = isMask(pos.end, true) && getMaskSet().validPositions[pos.end] && getMaskSet().validPositions[pos.end].input !== opts.radixPoint ? pos.end + 1 : seekNext(pos.end) + 1;
                    if (getMaskSet().validPositions[pos.begin] !== undefined && getMaskSet().validPositions[pos.begin].input === opts.groupSeparator) {
                        pos.end++
                    }
                }
                revalidateMask(pos);
                if (strict !== true && opts.keepStatic !== false || opts.regex !== null) {
                    var result = alternate(true);
                    if (result) {
                        var newPos = result.caret !== undefined ? result.caret : result.pos ? seekNext(result.pos.begin ? result.pos.begin : result.pos) : getLastValidPosition(-1, true);
                        if (k !== Inputmask.keyCode.DELETE || pos.begin > newPos) {
                            pos.begin == newPos
                        }
                    }
                }
                var lvp = getLastValidPosition(pos.begin, true);
                if (lvp < pos.begin || pos.begin === -1) {
                    getMaskSet().p = seekNext(lvp)
                } else if (strict !== true) {
                    getMaskSet().p = pos.begin;
                    if (fromIsValid !== true) {
                        while (getMaskSet().p < lvp && getMaskSet().validPositions[getMaskSet().p] === undefined) {
                            getMaskSet().p++
                        }
                    }
                }
            }

            function initializeColorMask(input) {
                var computedStyle = (input.ownerDocument.defaultView || window).getComputedStyle(input, null);

                function findCaretPos(clientx) {
                    var e = document.createElement("span"), caretPos;
                    for (var style in computedStyle) {
                        if (isNaN(style) && style.indexOf("font") !== -1) {
                            e.style[style] = computedStyle[style]
                        }
                    }
                    e.style.textTransform = computedStyle.textTransform;
                    e.style.letterSpacing = computedStyle.letterSpacing;
                    e.style.position = "absolute";
                    e.style.height = "auto";
                    e.style.width = "auto";
                    e.style.visibility = "hidden";
                    e.style.whiteSpace = "nowrap";
                    document.body.appendChild(e);
                    var inputText = input.inputmask._valueGet(), previousWidth = 0, itl;
                    for (caretPos = 0, itl = inputText.length; caretPos <= itl; caretPos++) {
                        e.innerHTML += inputText.charAt(caretPos) || "_";
                        if (e.offsetWidth >= clientx) {
                            var offset1 = clientx - previousWidth;
                            var offset2 = e.offsetWidth - clientx;
                            e.innerHTML = inputText.charAt(caretPos);
                            offset1 -= e.offsetWidth / 3;
                            caretPos = offset1 < offset2 ? caretPos - 1 : caretPos;
                            break
                        }
                        previousWidth = e.offsetWidth
                    }
                    document.body.removeChild(e);
                    return caretPos
                }

                var template = document.createElement("div");
                template.style.width = computedStyle.width;
                template.style.textAlign = computedStyle.textAlign;
                colorMask = document.createElement("div");
                input.inputmask.colorMask = colorMask;
                colorMask.className = "im-colormask";
                input.parentNode.insertBefore(colorMask, input);
                input.parentNode.removeChild(input);
                colorMask.appendChild(input);
                colorMask.appendChild(template);
                input.style.left = template.offsetLeft + "px";
                $(colorMask).on("mouseleave", function (e) {
                    return EventHandlers.mouseleaveEvent.call(input, [e])
                });
                $(colorMask).on("mouseenter", function (e) {
                    return EventHandlers.mouseenterEvent.call(input, [e])
                });
                $(colorMask).on("click", function (e) {
                    caret(input, findCaretPos(e.clientX));
                    return EventHandlers.clickEvent.call(input, [e])
                })
            }

            Inputmask.prototype.positionColorMask = function (input, template) {
                input.style.left = template.offsetLeft + "px"
            };

            function renderColorMask(input, caretPos, clear) {
                var maskTemplate = [], isStatic = false, test, testPos, ndxIntlzr, pos = 0;

                function setEntry(entry) {
                    if (entry === undefined) entry = "";
                    if (!isStatic && (test.fn === null || testPos.input === undefined)) {
                        isStatic = true;
                        maskTemplate.push("<span class='im-static'>" + entry)
                    } else if (isStatic && (test.fn !== null && testPos.input !== undefined || test.def === "")) {
                        isStatic = false;
                        var mtl = maskTemplate.length;
                        maskTemplate[mtl - 1] = maskTemplate[mtl - 1] + "</span>";
                        maskTemplate.push(entry)
                    } else maskTemplate.push(entry)
                }

                function setCaret() {
                    if (document.activeElement === input) {
                        maskTemplate.splice(caretPos.begin, 0, caretPos.begin === caretPos.end || caretPos.end > getMaskSet().maskLength ? '<mark class="im-caret" style="border-right-width: 1px;border-right-style: solid;">' : '<mark class="im-caret-select">');
                        maskTemplate.splice(caretPos.end + 1, 0, "</mark>")
                    }
                }

                if (colorMask !== undefined) {
                    var buffer = getBuffer();
                    if (caretPos === undefined) {
                        caretPos = caret(input)
                    } else if (caretPos.begin === undefined) {
                        caretPos = {begin: caretPos, end: caretPos}
                    }
                    if (clear !== true) {
                        var lvp = getLastValidPosition();
                        do {
                            if (getMaskSet().validPositions[pos]) {
                                testPos = getMaskSet().validPositions[pos];
                                test = testPos.match;
                                ndxIntlzr = testPos.locator.slice();
                                setEntry(buffer[pos])
                            } else {
                                testPos = getTestTemplate(pos, ndxIntlzr, pos - 1);
                                test = testPos.match;
                                ndxIntlzr = testPos.locator.slice();
                                if (opts.jitMasking === false || pos < lvp || typeof opts.jitMasking === "number" && isFinite(opts.jitMasking) && opts.jitMasking > pos) {
                                    setEntry(getPlaceholder(pos, test))
                                } else isStatic = false
                            }
                            pos++
                        } while ((maxLength === undefined || pos < maxLength) && (test.fn !== null || test.def !== "") || lvp > pos || isStatic);
                        if (isStatic) setEntry();
                        setCaret()
                    }
                    var template = colorMask.getElementsByTagName("div")[0];
                    template.innerHTML = maskTemplate.join("");
                    input.inputmask.positionColorMask(input, template)
                }
            }

            function mask(elem) {
                function isElementTypeSupported(input, opts) {
                    function patchValueProperty(npt) {
                        var valueGet;
                        var valueSet;

                        function patchValhook(type) {
                            if ($.valHooks && ($.valHooks[type] === undefined || $.valHooks[type].inputmaskpatch !== true)) {
                                var valhookGet = $.valHooks[type] && $.valHooks[type].get ? $.valHooks[type].get : function (elem) {
                                    return elem.value
                                };
                                var valhookSet = $.valHooks[type] && $.valHooks[type].set ? $.valHooks[type].set : function (elem, value) {
                                    elem.value = value;
                                    return elem
                                };
                                $.valHooks[type] = {
                                    get: function get(elem) {
                                        if (elem.inputmask) {
                                            if (elem.inputmask.opts.autoUnmask) {
                                                return elem.inputmask.unmaskedvalue()
                                            } else {
                                                var result = valhookGet(elem);
                                                return getLastValidPosition(undefined, undefined, elem.inputmask.maskset.validPositions) !== -1 || opts.nullable !== true ? result : ""
                                            }
                                        } else return valhookGet(elem)
                                    }, set: function set(elem, value) {
                                        var $elem = $(elem), result;
                                        result = valhookSet(elem, value);
                                        if (elem.inputmask) {
                                            $elem.trigger("setvalue", [value])
                                        }
                                        return result
                                    }, inputmaskpatch: true
                                }
                            }
                        }

                        function getter() {
                            if (this.inputmask) {
                                return this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : getLastValidPosition() !== -1 || opts.nullable !== true ? document.activeElement === this && opts.clearMaskOnLostFocus ? (isRTL ? clearOptionalTail(getBuffer().slice()).reverse() : clearOptionalTail(getBuffer().slice())).join("") : valueGet.call(this) : ""
                            } else return valueGet.call(this)
                        }

                        function setter(value) {
                            valueSet.call(this, value);
                            if (this.inputmask) {
                                $(this).trigger("setvalue", [value])
                            }
                        }

                        function installNativeValueSetFallback(npt) {
                            EventRuler.on(npt, "mouseenter", function (event) {
                                var $input = $(this), input = this, value = input.inputmask._valueGet();
                                if (value !== getBuffer().join("")) {
                                    $input.trigger("setvalue")
                                }
                            })
                        }

                        if (!npt.inputmask.__valueGet) {
                            if (opts.noValuePatching !== true) {
                                if (Object.getOwnPropertyDescriptor) {
                                    if (typeof Object.getPrototypeOf !== "function") {
                                        Object.getPrototypeOf = _typeof("test".__proto__) === "object" ? function (object) {
                                            return object.__proto__
                                        } : function (object) {
                                            return object.constructor.prototype
                                        }
                                    }
                                    var valueProperty = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(npt), "value") : undefined;
                                    if (valueProperty && valueProperty.get && valueProperty.set) {
                                        valueGet = valueProperty.get;
                                        valueSet = valueProperty.set;
                                        Object.defineProperty(npt, "value", {
                                            get: getter,
                                            set: setter,
                                            configurable: true
                                        })
                                    } else if (npt.tagName !== "INPUT") {
                                        valueGet = function valueGet() {
                                            return this.textContent
                                        };
                                        valueSet = function valueSet(value) {
                                            this.textContent = value
                                        };
                                        Object.defineProperty(npt, "value", {
                                            get: getter,
                                            set: setter,
                                            configurable: true
                                        })
                                    }
                                } else if (document.__lookupGetter__ && npt.__lookupGetter__("value")) {
                                    valueGet = npt.__lookupGetter__("value");
                                    valueSet = npt.__lookupSetter__("value");
                                    npt.__defineGetter__("value", getter);
                                    npt.__defineSetter__("value", setter)
                                }
                                npt.inputmask.__valueGet = valueGet;
                                npt.inputmask.__valueSet = valueSet
                            }
                            npt.inputmask._valueGet = function (overruleRTL) {
                                return isRTL && overruleRTL !== true ? valueGet.call(this.el).split("").reverse().join("") : valueGet.call(this.el)
                            };
                            npt.inputmask._valueSet = function (value, overruleRTL) {
                                valueSet.call(this.el, value === null || value === undefined ? "" : overruleRTL !== true && isRTL ? value.split("").reverse().join("") : value)
                            };
                            if (valueGet === undefined) {
                                valueGet = function valueGet() {
                                    return this.value
                                };
                                valueSet = function valueSet(value) {
                                    this.value = value
                                };
                                patchValhook(npt.type);
                                installNativeValueSetFallback(npt)
                            }
                        }
                    }

                    var elementType = input.getAttribute("type");
                    var isSupported = input.tagName === "INPUT" && $.inArray(elementType, opts.supportsInputType) !== -1 || input.isContentEditable || input.tagName === "TEXTAREA";
                    if (!isSupported) {
                        if (input.tagName === "INPUT") {
                            var el = document.createElement("input");
                            el.setAttribute("type", elementType);
                            isSupported = el.type === "text";
                            el = null
                        } else isSupported = "partial"
                    }
                    if (isSupported !== false) {
                        patchValueProperty(input)
                    } else input.inputmask = undefined;
                    return isSupported
                }

                EventRuler.off(elem);
                var isSupported = isElementTypeSupported(elem, opts);
                if (isSupported !== false) {
                    el = elem;
                    $el = $(el);
                    originalPlaceholder = el.placeholder;
                    maxLength = el !== undefined ? el.maxLength : undefined;
                    if (maxLength === -1) maxLength = undefined;
                    if (opts.colorMask === true) {
                        initializeColorMask(el)
                    }
                    if (mobile) {
                        if ("inputmode" in el) {
                            el.inputmode = opts.inputmode;
                            el.setAttribute("inputmode", opts.inputmode)
                        }
                        if (opts.disablePredictiveText === true) {
                            if ("autocorrect" in el) {
                                el.autocorrect = false
                            } else {
                                if (opts.colorMask !== true) {
                                    initializeColorMask(el)
                                }
                                el.type = "password"
                            }
                        }
                    }
                    if (isSupported === true) {
                        el.setAttribute("im-insert", opts.insertMode);
                        EventRuler.on(el, "submit", EventHandlers.submitEvent);
                        EventRuler.on(el, "reset", EventHandlers.resetEvent);
                        EventRuler.on(el, "blur", EventHandlers.blurEvent);
                        EventRuler.on(el, "focus", EventHandlers.focusEvent);
                        if (opts.colorMask !== true) {
                            EventRuler.on(el, "click", EventHandlers.clickEvent);
                            EventRuler.on(el, "mouseleave", EventHandlers.mouseleaveEvent);
                            EventRuler.on(el, "mouseenter", EventHandlers.mouseenterEvent)
                        }
                        EventRuler.on(el, "paste", EventHandlers.pasteEvent);
                        EventRuler.on(el, "cut", EventHandlers.cutEvent);
                        EventRuler.on(el, "complete", opts.oncomplete);
                        EventRuler.on(el, "incomplete", opts.onincomplete);
                        EventRuler.on(el, "cleared", opts.oncleared);
                        if (!mobile && opts.inputEventOnly !== true) {
                            EventRuler.on(el, "keydown", EventHandlers.keydownEvent);
                            EventRuler.on(el, "keypress", EventHandlers.keypressEvent)
                        } else {
                            el.removeAttribute("maxLength")
                        }
                        EventRuler.on(el, "input", EventHandlers.inputFallBackEvent);
                        EventRuler.on(el, "beforeinput", EventHandlers.beforeInputEvent)
                    }
                    EventRuler.on(el, "setvalue", EventHandlers.setValueEvent);
                    undoValue = getBufferTemplate().join("");
                    if (el.inputmask._valueGet(true) !== "" || opts.clearMaskOnLostFocus === false || document.activeElement === el) {
                        var initialValue = $.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(inputmask, el.inputmask._valueGet(true), opts) || el.inputmask._valueGet(true) : el.inputmask._valueGet(true);
                        if (initialValue !== "") checkVal(el, true, false, initialValue.split(""));
                        var buffer = getBuffer().slice();
                        undoValue = buffer.join("");
                        if (isComplete(buffer) === false) {
                            if (opts.clearIncomplete) {
                                resetMaskSet()
                            }
                        }
                        if (opts.clearMaskOnLostFocus && document.activeElement !== el) {
                            if (getLastValidPosition() === -1) {
                                buffer = []
                            } else {
                                clearOptionalTail(buffer)
                            }
                        }
                        if (opts.clearMaskOnLostFocus === false || opts.showMaskOnFocus && document.activeElement === el || el.inputmask._valueGet(true) !== "") writeBuffer(el, buffer);
                        if (document.activeElement === el) {
                            caret(el, seekNext(getLastValidPosition()))
                        }
                    }
                }
            }

            var valueBuffer;
            if (actionObj !== undefined) {
                switch (actionObj.action) {
                    case"isComplete":
                        el = actionObj.el;
                        return isComplete(getBuffer());
                    case"unmaskedvalue":
                        if (el === undefined || actionObj.value !== undefined) {
                            valueBuffer = actionObj.value;
                            valueBuffer = ($.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(inputmask, valueBuffer, opts) || valueBuffer : valueBuffer).split("");
                            checkVal.call(this, undefined, false, false, valueBuffer);
                            if ($.isFunction(opts.onBeforeWrite)) opts.onBeforeWrite.call(inputmask, undefined, getBuffer(), 0, opts)
                        }
                        return unmaskedvalue(el);
                    case"mask":
                        mask(el);
                        break;
                    case"format":
                        valueBuffer = ($.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(inputmask, actionObj.value, opts) || actionObj.value : actionObj.value).split("");
                        checkVal.call(this, undefined, true, false, valueBuffer);
                        if (actionObj.metadata) {
                            return {
                                value: isRTL ? getBuffer().slice().reverse().join("") : getBuffer().join(""),
                                metadata: maskScope.call(this, {action: "getmetadata"}, maskset, opts)
                            }
                        }
                        return isRTL ? getBuffer().slice().reverse().join("") : getBuffer().join("");
                    case"isValid":
                        if (actionObj.value) {
                            valueBuffer = actionObj.value.split("");
                            checkVal.call(this, undefined, true, true, valueBuffer)
                        } else {
                            actionObj.value = getBuffer().join("")
                        }
                        var buffer = getBuffer();
                        var rl = determineLastRequiredPosition(), lmib = buffer.length - 1;
                        for (; lmib > rl; lmib--) {
                            if (isMask(lmib)) break
                        }
                        buffer.splice(rl, lmib + 1 - rl);
                        return isComplete(buffer) && actionObj.value === getBuffer().join("");
                    case"getemptymask":
                        return getBufferTemplate().join("");
                    case"remove":
                        if (el && el.inputmask) {
                            $.data(el, "_inputmask_opts", null);
                            $el = $(el);
                            el.inputmask._valueSet(opts.autoUnmask ? unmaskedvalue(el) : el.inputmask._valueGet(true));
                            EventRuler.off(el);
                            if (el.inputmask.colorMask) {
                                colorMask = el.inputmask.colorMask;
                                colorMask.removeChild(el);
                                colorMask.parentNode.insertBefore(el, colorMask);
                                colorMask.parentNode.removeChild(colorMask)
                            }
                            var valueProperty;
                            if (Object.getOwnPropertyDescriptor && Object.getPrototypeOf) {
                                valueProperty = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(el), "value");
                                if (valueProperty) {
                                    if (el.inputmask.__valueGet) {
                                        Object.defineProperty(el, "value", {
                                            get: el.inputmask.__valueGet,
                                            set: el.inputmask.__valueSet,
                                            configurable: true
                                        })
                                    }
                                }
                            } else if (document.__lookupGetter__ && el.__lookupGetter__("value")) {
                                if (el.inputmask.__valueGet) {
                                    el.__defineGetter__("value", el.inputmask.__valueGet);
                                    el.__defineSetter__("value", el.inputmask.__valueSet)
                                }
                            }
                            el.inputmask = undefined
                        }
                        return el;
                        break;
                    case"getmetadata":
                        if ($.isArray(maskset.metadata)) {
                            var maskTarget = getMaskTemplate(true, 0, false).join("");
                            $.each(maskset.metadata, function (ndx, mtdt) {
                                if (mtdt.mask === maskTarget) {
                                    maskTarget = mtdt;
                                    return false
                                }
                            });
                            return maskTarget
                        }
                        return maskset.metadata
                }
            }
        }

        return Inputmask
    })
}, function (module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function (factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else {
        }
    })(function ($) {
        return $
    })
}, function (module, exports) {
    module.exports = jQuery
}, function (module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
        return typeof window !== "undefined" ? window : new (eval("require('jsdom').JSDOM"))("").window
    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else {
    }
}, function (module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function (factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else {
        }
    })(function (Inputmask) {
        var $ = Inputmask.dependencyLib;
        var formatCode = {
            d: ["[1-9]|[12][0-9]|3[01]", Date.prototype.setDate, "day", Date.prototype.getDate],
            dd: ["0[1-9]|[12][0-9]|3[01]", Date.prototype.setDate, "day", function () {
                return pad(Date.prototype.getDate.call(this), 2)
            }],
            ddd: [""],
            dddd: [""],
            m: ["[1-9]|1[012]", Date.prototype.setMonth, "month", function () {
                return Date.prototype.getMonth.call(this) + 1
            }],
            mm: ["0[1-9]|1[012]", Date.prototype.setMonth, "month", function () {
                return pad(Date.prototype.getMonth.call(this) + 1, 2)
            }],
            mmm: [""],
            mmmm: [""],
            yy: ["[0-9]{2}", Date.prototype.setFullYear, "year", function () {
                return pad(Date.prototype.getFullYear.call(this), 2)
            }],
            yyyy: ["[0-9]{4}", Date.prototype.setFullYear, "year", function () {
                return pad(Date.prototype.getFullYear.call(this), 4)
            }],
            h: ["[1-9]|1[0-2]", Date.prototype.setHours, "hours", Date.prototype.getHours],
            hh: ["0[1-9]|1[0-2]", Date.prototype.setHours, "hours", function () {
                return pad(Date.prototype.getHours.call(this), 2)
            }],
            hhh: ["[0-9]+", Date.prototype.setHours, "hours", Date.prototype.getHours],
            H: ["1?[0-9]|2[0-3]", Date.prototype.setHours, "hours", Date.prototype.getHours],
            HH: ["0[0-9]|1[0-9]|2[0-3]", Date.prototype.setHours, "hours", function () {
                return pad(Date.prototype.getHours.call(this), 2)
            }],
            HHH: ["[0-9]+", Date.prototype.setHours, "hours", Date.prototype.getHours],
            M: ["[1-5]?[0-9]", Date.prototype.setMinutes, "minutes", Date.prototype.getMinutes],
            MM: ["0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]", Date.prototype.setMinutes, "minutes", function () {
                return pad(Date.prototype.getMinutes.call(this), 2)
            }],
            ss: ["[0-5][0-9]", Date.prototype.setSeconds, "seconds", function () {
                return pad(Date.prototype.getSeconds.call(this), 2)
            }],
            l: ["[0-9]{3}", Date.prototype.setMilliseconds, "milliseconds", function () {
                return pad(Date.prototype.getMilliseconds.call(this), 3)
            }],
            L: ["[0-9]{2}", Date.prototype.setMilliseconds, "milliseconds", function () {
                return pad(Date.prototype.getMilliseconds.call(this), 2)
            }],
            t: ["[ap]"],
            tt: ["[ap]m"],
            T: ["[AP]"],
            TT: ["[AP]M"],
            Z: [""],
            o: [""],
            S: [""]
        }, formatAlias = {
            isoDate: "yyyy-mm-dd",
            isoTime: "HH:MM:ss",
            isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
            isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
        };

        function getTokenizer(opts) {
            if (!opts.tokenizer) {
                var tokens = [];
                for (var ndx in formatCode) {
                    if (tokens.indexOf(ndx[0]) === -1) tokens.push(ndx[0])
                }
                opts.tokenizer = "(" + tokens.join("+|") + ")+?|.";
                opts.tokenizer = new RegExp(opts.tokenizer, "g")
            }
            return opts.tokenizer
        }

        function isValidDate(dateParts, currentResult) {
            return !isFinite(dateParts.rawday) || dateParts.day == "29" && !isFinite(dateParts.rawyear) || new Date(dateParts.date.getFullYear(), isFinite(dateParts.rawmonth) ? dateParts.month : dateParts.date.getMonth() + 1, 0).getDate() >= dateParts.day ? currentResult : false
        }

        function isDateInRange(dateParts, opts) {
            var result = true;
            if (opts.min) {
                if (dateParts["rawyear"]) {
                    var rawYear = dateParts["rawyear"].replace(/[^0-9]/g, ""),
                        minYear = opts.min.year.substr(0, rawYear.length);
                    result = minYear <= rawYear
                }
                if (dateParts["year"] === dateParts["rawyear"]) {
                    if (opts.min.date.getTime() === opts.min.date.getTime()) {
                        result = opts.min.date.getTime() <= dateParts.date.getTime()
                    }
                }
            }
            if (result && opts.max && opts.max.date.getTime() === opts.max.date.getTime()) {
                result = opts.max.date.getTime() >= dateParts.date.getTime()
            }
            return result
        }

        function parse(format, dateObjValue, opts, raw) {
            var mask = "", match;
            while (match = getTokenizer(opts).exec(format)) {
                if (dateObjValue === undefined) {
                    if (formatCode[match[0]]) {
                        mask += "(" + formatCode[match[0]][0] + ")"
                    } else {
                        switch (match[0]) {
                            case"[":
                                mask += "(";
                                break;
                            case"]":
                                mask += ")?";
                                break;
                            default:
                                mask += Inputmask.escapeRegex(match[0])
                        }
                    }
                } else {
                    if (formatCode[match[0]]) {
                        if (raw !== true && formatCode[match[0]][3]) {
                            var getFn = formatCode[match[0]][3];
                            mask += getFn.call(dateObjValue.date)
                        } else if (formatCode[match[0]][2]) mask += dateObjValue["raw" + formatCode[match[0]][2]]; else mask += match[0]
                    } else mask += match[0]
                }
            }
            return mask
        }

        function pad(val, len) {
            val = String(val);
            len = len || 2;
            while (val.length < len) {
                val = "0" + val
            }
            return val
        }

        function analyseMask(maskString, format, opts) {
            var dateObj = {date: new Date(1, 0, 1)}, targetProp, mask = maskString, match, dateOperation,
                targetValidator;

            function extendProperty(value) {
                var correctedValue = value.replace(/[^0-9]/g, "0");
                if (correctedValue != value) {
                    var enteredPart = value.replace(/[^0-9]/g, ""),
                        min = (opts.min && opts.min[targetProp] || value).toString(),
                        max = (opts.max && opts.max[targetProp] || value).toString();
                    correctedValue = enteredPart + (enteredPart < min.slice(0, enteredPart.length) ? min.slice(enteredPart.length) : enteredPart > max.slice(0, enteredPart.length) ? max.slice(enteredPart.length) : correctedValue.toString().slice(enteredPart.length))
                }
                return correctedValue
            }

            function setValue(dateObj, value, opts) {
                dateObj[targetProp] = extendProperty(value);
                dateObj["raw" + targetProp] = value;
                if (dateOperation !== undefined) dateOperation.call(dateObj.date, targetProp == "month" ? parseInt(dateObj[targetProp]) - 1 : dateObj[targetProp])
            }

            if (typeof mask === "string") {
                while (match = getTokenizer(opts).exec(format)) {
                    var value = mask.slice(0, match[0].length);
                    if (formatCode.hasOwnProperty(match[0])) {
                        targetValidator = formatCode[match[0]][0];
                        targetProp = formatCode[match[0]][2];
                        dateOperation = formatCode[match[0]][1];
                        setValue(dateObj, value, opts)
                    }
                    mask = mask.slice(value.length)
                }
                return dateObj
            } else if (mask && (typeof mask === "undefined" ? "undefined" : _typeof(mask)) === "object" && mask.hasOwnProperty("date")) {
                return mask
            }
            return undefined
        }

        Inputmask.extendAliases({
            datetime: {
                mask: function mask(opts) {
                    formatCode.S = opts.i18n.ordinalSuffix.join("|");
                    opts.inputFormat = formatAlias[opts.inputFormat] || opts.inputFormat;
                    opts.displayFormat = formatAlias[opts.displayFormat] || opts.displayFormat || opts.inputFormat;
                    opts.outputFormat = formatAlias[opts.outputFormat] || opts.outputFormat || opts.inputFormat;
                    opts.placeholder = opts.placeholder !== "" ? opts.placeholder : opts.inputFormat.replace(/[\[\]]/, "");
                    opts.regex = parse(opts.inputFormat, undefined, opts);
                    return null
                },
                placeholder: "",
                inputFormat: "isoDateTime",
                displayFormat: undefined,
                outputFormat: undefined,
                min: null,
                max: null,
                i18n: {
                    dayNames: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
                    monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                    ordinalSuffix: ["st", "nd", "rd", "th"]
                },
                postValidation: function postValidation(buffer, pos, currentResult, opts) {
                    opts.min = analyseMask(opts.min, opts.inputFormat, opts);
                    opts.max = analyseMask(opts.max, opts.inputFormat, opts);
                    var result = currentResult, dateParts = analyseMask(buffer.join(""), opts.inputFormat, opts);
                    if (result && dateParts.date.getTime() === dateParts.date.getTime()) {
                        result = isValidDate(dateParts, result);
                        result = result && isDateInRange(dateParts, opts)
                    }
                    if (pos && result && currentResult.pos !== pos) {
                        return {
                            buffer: parse(opts.inputFormat, dateParts, opts),
                            refreshFromBuffer: {start: pos, end: currentResult.pos}
                        }
                    }
                    return result
                },
                onKeyDown: function onKeyDown(e, buffer, caretPos, opts) {
                    var input = this;
                    if (e.ctrlKey && e.keyCode === Inputmask.keyCode.RIGHT) {
                        var today = new Date, match, date = "";
                        while (match = getTokenizer(opts).exec(opts.inputFormat)) {
                            if (match[0].charAt(0) === "d") {
                                date += pad(today.getDate(), match[0].length)
                            } else if (match[0].charAt(0) === "m") {
                                date += pad(today.getMonth() + 1, match[0].length)
                            } else if (match[0] === "yyyy") {
                                date += today.getFullYear().toString()
                            } else if (match[0].charAt(0) === "y") {
                                date += pad(today.getYear(), match[0].length)
                            }
                        }
                        input.inputmask._valueSet(date);
                        $(input).trigger("setvalue")
                    }
                },
                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {
                    return parse(opts.outputFormat, analyseMask(maskedValue, opts.inputFormat, opts), opts, true)
                },
                casing: function casing(elem, test, pos, validPositions) {
                    if (test.nativeDef.indexOf("[ap]") == 0) return elem.toLowerCase();
                    if (test.nativeDef.indexOf("[AP]") == 0) return elem.toUpperCase();
                    return elem
                },
                insertMode: false,
                shiftPositions: false
            }
        });
        return Inputmask
    })
}, function (module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function (factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else {
        }
    })(function (Inputmask) {
        var $ = Inputmask.dependencyLib;

        function autoEscape(txt, opts) {
            var escapedTxt = "";
            for (var i = 0; i < txt.length; i++) {
                if (Inputmask.prototype.definitions[txt.charAt(i)] || opts.definitions[txt.charAt(i)] || opts.optionalmarker.start === txt.charAt(i) || opts.optionalmarker.end === txt.charAt(i) || opts.quantifiermarker.start === txt.charAt(i) || opts.quantifiermarker.end === txt.charAt(i) || opts.groupmarker.start === txt.charAt(i) || opts.groupmarker.end === txt.charAt(i) || opts.alternatormarker === txt.charAt(i)) {
                    escapedTxt += "\\" + txt.charAt(i)
                } else escapedTxt += txt.charAt(i)
            }
            return escapedTxt
        }

        function alignDigits(buffer, digits, opts) {
            if (digits > 0) {
                var radixPosition = $.inArray(opts.radixPoint, buffer);
                if (radixPosition === -1) {
                    buffer.push(opts.radixPoint);
                    radixPosition = buffer.length - 1
                }
                for (var i = 1; i <= digits; i++) {
                    buffer[radixPosition + i] = buffer[radixPosition + i] || "0"
                }
            }
            return buffer
        }

        Inputmask.extendAliases({
            numeric: {
                mask: function mask(opts) {
                    if (opts.repeat !== 0 && isNaN(opts.integerDigits)) {
                        opts.integerDigits = opts.repeat
                    }
                    opts.repeat = 0;
                    if (opts.groupSeparator === opts.radixPoint && opts.digits && opts.digits !== "0") {
                        if (opts.radixPoint === ".") {
                            opts.groupSeparator = ","
                        } else if (opts.radixPoint === ",") {
                            opts.groupSeparator = "."
                        } else opts.groupSeparator = ""
                    }
                    if (opts.groupSeparator === " ") {
                        opts.skipOptionalPartCharacter = undefined
                    }
                    opts.autoGroup = opts.autoGroup && opts.groupSeparator !== "";
                    if (opts.autoGroup) {
                        if (typeof opts.groupSize == "string" && isFinite(opts.groupSize)) opts.groupSize = parseInt(opts.groupSize);
                        if (isFinite(opts.integerDigits)) {
                            var seps = Math.floor(opts.integerDigits / opts.groupSize);
                            var mod = opts.integerDigits % opts.groupSize;
                            opts.integerDigits = parseInt(opts.integerDigits) + (mod === 0 ? seps - 1 : seps);
                            if (opts.integerDigits < 1) {
                                opts.integerDigits = "*"
                            }
                        }
                    }
                    if (opts.placeholder.length > 1) {
                        opts.placeholder = opts.placeholder.charAt(0)
                    }
                    if (opts.positionCaretOnClick === "radixFocus" && opts.placeholder === "" && opts.integerOptional === false) {
                        opts.positionCaretOnClick = "lvp"
                    }
                    opts.definitions[";"] = opts.definitions["~"];
                    opts.definitions[";"].definitionSymbol = "~";
                    if (opts.numericInput === true) {
                        opts.positionCaretOnClick = opts.positionCaretOnClick === "radixFocus" ? "lvp" : opts.positionCaretOnClick;
                        opts.digitsOptional = false;
                        if (isNaN(opts.digits)) opts.digits = 2;
                        opts.decimalProtect = false
                    }
                    var mask = "[+]";
                    mask += autoEscape(opts.prefix, opts);
                    if (opts.integerOptional === true) {
                        mask += "~{1," + opts.integerDigits + "}"
                    } else mask += "~{" + opts.integerDigits + "}";
                    if (opts.digits !== undefined) {
                        var radixDef = opts.decimalProtect ? ":" : opts.radixPoint;
                        var dq = opts.digits.toString().split(",");
                        if (isFinite(dq[0]) && dq[1] && isFinite(dq[1])) {
                            mask += radixDef + ";{" + opts.digits + "}"
                        } else if (isNaN(opts.digits) || parseInt(opts.digits) > 0) {
                            if (opts.digitsOptional) {
                                mask += "[" + radixDef + ";{1," + opts.digits + "}]"
                            } else mask += radixDef + ";{" + opts.digits + "}"
                        }
                    }
                    mask += autoEscape(opts.suffix, opts);
                    mask += "[-]";
                    opts.greedy = false;
                    return mask
                },
                placeholder: "",
                greedy: false,
                digits: "*",
                digitsOptional: true,
                enforceDigitsOnBlur: false,
                radixPoint: ".",
                positionCaretOnClick: "radixFocus",
                groupSize: 3,
                groupSeparator: "",
                autoGroup: false,
                allowMinus: true,
                negationSymbol: {front: "-", back: ""},
                integerDigits: "+",
                integerOptional: true,
                prefix: "",
                suffix: "",
                rightAlign: true,
                decimalProtect: true,
                min: null,
                max: null,
                step: 1,
                insertMode: true,
                autoUnmask: false,
                unmaskAsNumber: false,
                inputType: "text",
                inputmode: "numeric",
                preValidation: function preValidation(buffer, pos, c, isSelection, opts, maskset) {
                    if (c === "-" || c === opts.negationSymbol.front) {
                        if (opts.allowMinus !== true) return false;
                        opts.isNegative = opts.isNegative === undefined ? true : !opts.isNegative;
                        if (buffer.join("") === "") return true;
                        return {caret: maskset.validPositions[pos] ? pos : undefined, dopost: true}
                    }
                    if (isSelection === false && c === opts.radixPoint && opts.digits !== undefined && (isNaN(opts.digits) || parseInt(opts.digits) > 0)) {
                        var radixPos = $.inArray(opts.radixPoint, buffer);
                        if (radixPos !== -1 && maskset.validPositions[radixPos] !== undefined) {
                            if (opts.numericInput === true) {
                                return pos === radixPos
                            }
                            return {caret: radixPos + 1}
                        }
                    }
                    return true
                },
                postValidation: function postValidation(buffer, pos, currentResult, opts) {
                    function buildPostMask(buffer, opts) {
                        var postMask = "";
                        postMask += "(" + opts.groupSeparator + "*{" + opts.groupSize + "}){*}";
                        if (opts.radixPoint !== "") {
                            var radixSplit = buffer.join("").split(opts.radixPoint);
                            if (radixSplit[1]) {
                                postMask += opts.radixPoint + "*{" + radixSplit[1].match(/^\d*\??\d*/)[0].length + "}"
                            }
                        }
                        return postMask
                    }

                    var suffix = opts.suffix.split(""), prefix = opts.prefix.split("");
                    if (currentResult.pos === undefined && currentResult.caret !== undefined && currentResult.dopost !== true) return currentResult;
                    var caretPos = currentResult.caret !== undefined ? currentResult.caret : currentResult.pos;
                    var maskedValue = buffer.slice();
                    if (opts.numericInput) {
                        caretPos = maskedValue.length - caretPos - 1;
                        maskedValue = maskedValue.reverse()
                    }
                    var charAtPos = maskedValue[caretPos];
                    if (charAtPos === opts.groupSeparator) {
                        caretPos += 1;
                        charAtPos = maskedValue[caretPos]
                    }
                    if (caretPos === maskedValue.length - opts.suffix.length - 1 && charAtPos === opts.radixPoint) return currentResult;
                    if (charAtPos !== undefined) {
                        if (charAtPos !== opts.radixPoint && charAtPos !== opts.negationSymbol.front && charAtPos !== opts.negationSymbol.back) {
                            maskedValue[caretPos] = "?";
                            if (opts.prefix.length > 0 && caretPos >= (opts.isNegative === false ? 1 : 0) && caretPos < opts.prefix.length - 1 + (opts.isNegative === false ? 1 : 0)) {
                                prefix[caretPos - (opts.isNegative === false ? 1 : 0)] = "?"
                            } else if (opts.suffix.length > 0 && caretPos >= maskedValue.length - opts.suffix.length - (opts.isNegative === false ? 1 : 0)) {
                                suffix[caretPos - (maskedValue.length - opts.suffix.length - (opts.isNegative === false ? 1 : 0))] = "?"
                            }
                        }
                    }
                    prefix = prefix.join("");
                    suffix = suffix.join("");
                    var processValue = maskedValue.join("").replace(prefix, "");
                    processValue = processValue.replace(suffix, "");
                    processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), "g"), "");
                    processValue = processValue.replace(new RegExp("[-" + Inputmask.escapeRegex(opts.negationSymbol.front) + "]", "g"), "");
                    processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + "$"), "");
                    if (isNaN(opts.placeholder)) {
                        processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.placeholder), "g"), "")
                    }
                    if (processValue.length > 1 && processValue.indexOf(opts.radixPoint) !== 1) {
                        if (charAtPos === "0") {
                            processValue = processValue.replace(/^\?/g, "")
                        }
                        processValue = processValue.replace(/^0/g, "")
                    }
                    if (processValue.charAt(0) === opts.radixPoint && opts.radixPoint !== "" && opts.numericInput !== true) {
                        processValue = "0" + processValue
                    }
                    if (processValue !== "") {
                        processValue = processValue.split("");
                        if ((!opts.digitsOptional || opts.enforceDigitsOnBlur && currentResult.event === "blur") && isFinite(opts.digits)) {
                            var radixPosition = $.inArray(opts.radixPoint, processValue);
                            var rpb = $.inArray(opts.radixPoint, maskedValue);
                            if (radixPosition === -1) {
                                processValue.push(opts.radixPoint);
                                radixPosition = processValue.length - 1
                            }
                            for (var i = 1; i <= opts.digits; i++) {
                                if ((!opts.digitsOptional || opts.enforceDigitsOnBlur && currentResult.event === "blur") && (processValue[radixPosition + i] === undefined || processValue[radixPosition + i] === opts.placeholder.charAt(0))) {
                                    processValue[radixPosition + i] = currentResult.placeholder || opts.placeholder.charAt(0)
                                } else if (rpb !== -1 && maskedValue[rpb + i] !== undefined) {
                                    processValue[radixPosition + i] = processValue[radixPosition + i] || maskedValue[rpb + i]
                                }
                            }
                        }
                        if (opts.autoGroup === true && opts.groupSeparator !== "" && (charAtPos !== opts.radixPoint || currentResult.pos !== undefined || currentResult.dopost)) {
                            var addRadix = processValue[processValue.length - 1] === opts.radixPoint && currentResult.c === opts.radixPoint;
                            processValue = Inputmask(buildPostMask(processValue, opts), {
                                numericInput: true,
                                jitMasking: true,
                                definitions: {"*": {validator: "[0-9?]", cardinality: 1}}
                            }).format(processValue.join(""));
                            if (addRadix) processValue += opts.radixPoint;
                            if (processValue.charAt(0) === opts.groupSeparator) {
                                processValue.substr(1)
                            }
                        } else processValue = processValue.join("")
                    }
                    if (opts.isNegative && currentResult.event === "blur") {
                        opts.isNegative = processValue !== "0"
                    }
                    processValue = prefix + processValue;
                    processValue += suffix;
                    if (opts.isNegative) {
                        processValue = opts.negationSymbol.front + processValue;
                        processValue += opts.negationSymbol.back
                    }
                    processValue = processValue.split("");
                    if (charAtPos !== undefined) {
                        if (charAtPos !== opts.radixPoint && charAtPos !== opts.negationSymbol.front && charAtPos !== opts.negationSymbol.back) {
                            caretPos = $.inArray("?", processValue);
                            if (caretPos > -1) {
                                processValue[caretPos] = charAtPos
                            } else caretPos = currentResult.caret || 0
                        } else if (charAtPos === opts.radixPoint || charAtPos === opts.negationSymbol.front || charAtPos === opts.negationSymbol.back) {
                            var newCaretPos = $.inArray(charAtPos, processValue);
                            if (newCaretPos !== -1) caretPos = newCaretPos
                        }
                    }
                    if (opts.numericInput) {
                        caretPos = processValue.length - caretPos - 1;
                        processValue = processValue.reverse()
                    }
                    var rslt = {
                        caret: (charAtPos === undefined || currentResult.pos !== undefined) && caretPos !== undefined ? caretPos + (opts.numericInput ? -1 : 1) : caretPos,
                        buffer: processValue,
                        refreshFromBuffer: currentResult.dopost || buffer.join("") !== processValue.join("")
                    };
                    return rslt.refreshFromBuffer ? rslt : currentResult
                },
                onBeforeWrite: function onBeforeWrite(e, buffer, caretPos, opts) {
                    function parseMinMaxOptions(opts) {
                        if (opts.parseMinMaxOptions === undefined) {
                            if (opts.min !== null) {
                                opts.min = opts.min.toString().replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), "g"), "");
                                if (opts.radixPoint === ",") opts.min = opts.min.replace(opts.radixPoint, ".");
                                opts.min = isFinite(opts.min) ? parseFloat(opts.min) : NaN;
                                if (isNaN(opts.min)) opts.min = Number.MIN_VALUE
                            }
                            if (opts.max !== null) {
                                opts.max = opts.max.toString().replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), "g"), "");
                                if (opts.radixPoint === ",") opts.max = opts.max.replace(opts.radixPoint, ".");
                                opts.max = isFinite(opts.max) ? parseFloat(opts.max) : NaN;
                                if (isNaN(opts.max)) opts.max = Number.MAX_VALUE
                            }
                            opts.parseMinMaxOptions = "done"
                        }
                    }

                    if (e) {
                        switch (e.type) {
                            case"keydown":
                                return opts.postValidation(buffer, caretPos, {caret: caretPos, dopost: true}, opts);
                            case"blur":
                            case"checkval":
                                var unmasked;
                                parseMinMaxOptions(opts);
                                if (opts.min !== null || opts.max !== null) {
                                    unmasked = opts.onUnMask(buffer.join(""), undefined, $.extend({}, opts, {unmaskAsNumber: true}));
                                    if (opts.min !== null && unmasked < opts.min) {
                                        opts.isNegative = opts.min < 0;
                                        return opts.postValidation(opts.min.toString().replace(".", opts.radixPoint).split(""), caretPos, {
                                            caret: caretPos,
                                            dopost: true,
                                            placeholder: "0"
                                        }, opts)
                                    } else if (opts.max !== null && unmasked > opts.max) {
                                        opts.isNegative = opts.max < 0;
                                        return opts.postValidation(opts.max.toString().replace(".", opts.radixPoint).split(""), caretPos, {
                                            caret: caretPos,
                                            dopost: true,
                                            placeholder: "0"
                                        }, opts)
                                    }
                                }
                                return opts.postValidation(buffer, caretPos, {
                                    caret: caretPos,
                                    placeholder: "0",
                                    event: "blur"
                                }, opts);
                            case"_checkval":
                                return {caret: caretPos};
                            default:
                                break
                        }
                    }
                },
                regex: {
                    integerPart: function integerPart(opts, emptyCheck) {
                        return emptyCheck ? new RegExp("[" + Inputmask.escapeRegex(opts.negationSymbol.front) + "+]?") : new RegExp("[" + Inputmask.escapeRegex(opts.negationSymbol.front) + "+]?\\d+")
                    }, integerNPart: function integerNPart(opts) {
                        return new RegExp("[\\d" + Inputmask.escapeRegex(opts.groupSeparator) + Inputmask.escapeRegex(opts.placeholder.charAt(0)) + "]+")
                    }
                },
                definitions: {
                    "~": {
                        validator: function validator(chrs, maskset, pos, strict, opts, isSelection) {
                            var isValid, l;
                            if (chrs === "k" || chrs === "m") {
                                isValid = {insert: [], c: 0};
                                for (var i = 0, l = chrs === "k" ? 2 : 5; i < l; i++) {
                                    isValid.insert.push({pos: pos + i, c: 0})
                                }
                                isValid.pos = pos + l;
                                return isValid
                            }
                            isValid = strict ? new RegExp("[0-9" + Inputmask.escapeRegex(opts.groupSeparator) + "]").test(chrs) : new RegExp("[0-9]").test(chrs);
                            if (isValid === true) {
                                if (opts.numericInput !== true && maskset.validPositions[pos] !== undefined && maskset.validPositions[pos].match.def === "~" && !isSelection) {
                                    var processValue = maskset.buffer.join("");
                                    processValue = processValue.replace(new RegExp("[-" + Inputmask.escapeRegex(opts.negationSymbol.front) + "]", "g"), "");
                                    processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + "$"), "");
                                    var pvRadixSplit = processValue.split(opts.radixPoint);
                                    if (pvRadixSplit.length > 1) {
                                        pvRadixSplit[1] = pvRadixSplit[1].replace(/0/g, opts.placeholder.charAt(0))
                                    }
                                    if (pvRadixSplit[0] === "0") {
                                        pvRadixSplit[0] = pvRadixSplit[0].replace(/0/g, opts.placeholder.charAt(0))
                                    }
                                    processValue = pvRadixSplit[0] + opts.radixPoint + pvRadixSplit[1] || "";
                                    var bufferTemplate = maskset._buffer.join("");
                                    if (processValue === opts.radixPoint) {
                                        processValue = bufferTemplate
                                    }
                                    while (processValue.match(Inputmask.escapeRegex(bufferTemplate) + "$") === null) {
                                        bufferTemplate = bufferTemplate.slice(1)
                                    }
                                    processValue = processValue.replace(bufferTemplate, "");
                                    processValue = processValue.split("");
                                    if (processValue[pos] === undefined) {
                                        isValid = {pos: pos, remove: pos}
                                    } else {
                                        isValid = {pos: pos}
                                    }
                                }
                            } else if (!strict && chrs === opts.radixPoint && maskset.validPositions[pos - 1] === undefined) {
                                isValid = {insert: {pos: pos, c: 0}, pos: pos + 1}
                            }
                            return isValid
                        }, cardinality: 1
                    }, "+": {
                        validator: function validator(chrs, maskset, pos, strict, opts) {
                            return opts.allowMinus && (chrs === "-" || chrs === opts.negationSymbol.front)
                        }, cardinality: 1, placeholder: ""
                    }, "-": {
                        validator: function validator(chrs, maskset, pos, strict, opts) {
                            return opts.allowMinus && chrs === opts.negationSymbol.back
                        }, cardinality: 1, placeholder: ""
                    }, ":": {
                        validator: function validator(chrs, maskset, pos, strict, opts) {
                            var radix = "[" + Inputmask.escapeRegex(opts.radixPoint) + "]";
                            var isValid = new RegExp(radix).test(chrs);
                            if (isValid && maskset.validPositions[pos] && maskset.validPositions[pos].match.placeholder === opts.radixPoint) {
                                isValid = {caret: pos + 1}
                            }
                            return isValid
                        }, cardinality: 1, placeholder: function placeholder(opts) {
                            return opts.radixPoint
                        }
                    }
                },
                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {
                    if (unmaskedValue === "" && opts.nullable === true) {
                        return unmaskedValue
                    }
                    var processValue = maskedValue.replace(opts.prefix, "");
                    processValue = processValue.replace(opts.suffix, "");
                    processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), "g"), "");
                    if (opts.placeholder.charAt(0) !== "") {
                        processValue = processValue.replace(new RegExp(opts.placeholder.charAt(0), "g"), "0")
                    }
                    if (opts.unmaskAsNumber) {
                        if (opts.radixPoint !== "" && processValue.indexOf(opts.radixPoint) !== -1) processValue = processValue.replace(Inputmask.escapeRegex.call(this, opts.radixPoint), ".");
                        processValue = processValue.replace(new RegExp("^" + Inputmask.escapeRegex(opts.negationSymbol.front)), "-");
                        processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + "$"), "");
                        return Number(processValue)
                    }
                    return processValue
                },
                isComplete: function isComplete(buffer, opts) {
                    var maskedValue = (opts.numericInput ? buffer.slice().reverse() : buffer).join("");
                    maskedValue = maskedValue.replace(new RegExp("^" + Inputmask.escapeRegex(opts.negationSymbol.front)), "-");
                    maskedValue = maskedValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + "$"), "");
                    maskedValue = maskedValue.replace(opts.prefix, "");
                    maskedValue = maskedValue.replace(opts.suffix, "");
                    maskedValue = maskedValue.replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator) + "([0-9]{3})", "g"), "$1");
                    if (opts.radixPoint === ",") maskedValue = maskedValue.replace(Inputmask.escapeRegex(opts.radixPoint), ".");
                    return isFinite(maskedValue)
                },
                onBeforeMask: function onBeforeMask(initialValue, opts) {
                    opts.isNegative = undefined;
                    var radixPoint = opts.radixPoint || ",";
                    if ((typeof initialValue == "number" || opts.inputType === "number") && radixPoint !== "") {
                        initialValue = initialValue.toString().replace(".", radixPoint)
                    }
                    var valueParts = initialValue.split(radixPoint),
                        integerPart = valueParts[0].replace(/[^\-0-9]/g, ""),
                        decimalPart = valueParts.length > 1 ? valueParts[1].replace(/[^0-9]/g, "") : "";
                    initialValue = integerPart + (decimalPart !== "" ? radixPoint + decimalPart : decimalPart);
                    var digits = 0;
                    if (radixPoint !== "") {
                        digits = decimalPart.length;
                        if (decimalPart !== "") {
                            var digitsFactor = Math.pow(10, digits || 1);
                            if (isFinite(opts.digits)) {
                                digits = parseInt(opts.digits);
                                digitsFactor = Math.pow(10, digits)
                            }
                            initialValue = initialValue.replace(Inputmask.escapeRegex(radixPoint), ".");
                            if (isFinite(initialValue)) initialValue = Math.round(parseFloat(initialValue) * digitsFactor) / digitsFactor;
                            initialValue = initialValue.toString().replace(".", radixPoint)
                        }
                    }
                    if (opts.digits === 0 && initialValue.indexOf(Inputmask.escapeRegex(radixPoint)) !== -1) {
                        initialValue = initialValue.substring(0, initialValue.indexOf(Inputmask.escapeRegex(radixPoint)))
                    }
                    return alignDigits(initialValue.toString().split(""), digits, opts).join("")
                },
                onKeyDown: function onKeyDown(e, buffer, caretPos, opts) {
                    var $input = $(this);
                    if (e.ctrlKey) {
                        switch (e.keyCode) {
                            case Inputmask.keyCode.UP:
                                $input.val(parseFloat(this.inputmask.unmaskedvalue()) + parseInt(opts.step));
                                $input.trigger("setvalue");
                                break;
                            case Inputmask.keyCode.DOWN:
                                $input.val(parseFloat(this.inputmask.unmaskedvalue()) - parseInt(opts.step));
                                $input.trigger("setvalue");
                                break
                        }
                    }
                }
            },
            currency: {
                prefix: "$ ",
                groupSeparator: ",",
                alias: "numeric",
                placeholder: "0",
                autoGroup: true,
                digits: 2,
                digitsOptional: false,
                clearMaskOnLostFocus: false
            },
            decimal: {alias: "numeric"},
            integer: {alias: "numeric", digits: 0, radixPoint: ""},
            percentage: {
                alias: "numeric",
                digits: 2,
                digitsOptional: true,
                radixPoint: ".",
                placeholder: "0",
                autoGroup: false,
                min: 0,
                max: 100,
                suffix: " %",
                allowMinus: false
            }
        });
        return Inputmask
    })
}, function (module, exports, __webpack_require__) {
    "use strict";
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj
    };
    (function (factory) {
        if (true) {
            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function" ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
        } else {
        }
    })(function ($, Inputmask) {
        if ($.fn.inputmask === undefined) {
            $.fn.inputmask = function (fn, options) {
                var nptmask, input = this[0];
                if (options === undefined) options = {};
                if (typeof fn === "string") {
                    switch (fn) {
                        case"unmaskedvalue":
                            return input && input.inputmask ? input.inputmask.unmaskedvalue() : $(input).val();
                        case"remove":
                            return this.each(function () {
                                if (this.inputmask) this.inputmask.remove()
                            });
                        case"getemptymask":
                            return input && input.inputmask ? input.inputmask.getemptymask() : "";
                        case"hasMaskedValue":
                            return input && input.inputmask ? input.inputmask.hasMaskedValue() : false;
                        case"isComplete":
                            return input && input.inputmask ? input.inputmask.isComplete() : true;
                        case"getmetadata":
                            return input && input.inputmask ? input.inputmask.getmetadata() : undefined;
                        case"setvalue":
                            Inputmask.setValue(input, options);
                            break;
                        case"option":
                            if (typeof options === "string") {
                                if (input && input.inputmask !== undefined) {
                                    return input.inputmask.option(options)
                                }
                            } else {
                                return this.each(function () {
                                    if (this.inputmask !== undefined) {
                                        return this.inputmask.option(options)
                                    }
                                })
                            }
                            break;
                        default:
                            options.alias = fn;
                            nptmask = new Inputmask(options);
                            return this.each(function () {
                                nptmask.mask(this)
                            })
                    }
                } else if (Array.isArray(fn)) {
                    options.alias = fn;
                    nptmask = new Inputmask(options);
                    return this.each(function () {
                        nptmask.mask(this)
                    })
                } else if ((typeof fn === "undefined" ? "undefined" : _typeof(fn)) == "object") {
                    nptmask = new Inputmask(fn);
                    if (fn.mask === undefined && fn.alias === undefined) {
                        return this.each(function () {
                            if (this.inputmask !== undefined) {
                                return this.inputmask.option(fn)
                            } else nptmask.mask(this)
                        })
                    } else {
                        return this.each(function () {
                            nptmask.mask(this)
                        })
                    }
                } else if (fn === undefined) {
                    return this.each(function () {
                        nptmask = new Inputmask(options);
                        nptmask.mask(this)
                    })
                }
            }
        }
        return $.fn.inputmask
    })
}]);
/*
 * This plugin filters keyboard input by specified regular expression.
 * Version 1.8
 * $Id$
 *
 * Source code inspired by Ext.JS (Ext.form.TextField, Ext.EventManager)
 *
 * Procedural style:
 * $('#ggg').keyfilter(/[\dA-F]/);
 * Also you can pass test function instead of regexp. Its arguments:
   * this - HTML DOM Element (event target).
   * c - String that contains incoming character.
 * $('#ggg').keyfilter(function(c) { return c != 'a'; });
 *
 * Class style:
 * <input type="text" class="mask-num" />
 *
 * Available classes:
   * mask-pint:     /[\d]/
   * mask-int:      /[\d\-]/
   * mask-pnum:     /[\d\.]/
   * mask-money     /[\d\.\s,]/
   * mask-num:      /[\d\-\.]/
   * mask-hex:      /[0-9a-f]/i
   * mask-email:    /[a-z0-9_\.\-@]/i
   * mask-alpha:    /[a-z_]/i
   * mask-alphanum: /[a-z0-9_]/i
 */

(function ($) {
    // $.browser fallback for jQuery 1.9+.
    if ($.browser === undefined) {
        $.browser = (function () {
            var ua_match = function (ua) {
                    ua = ua.toLowerCase();
                    var match = /(chrome)[ \/]([\w.]+)/.exec(ua) ||
                        /(webkit)[ \/]([\w.]+)/.exec(ua) ||
                        /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) ||
                        /(msie) ([\w.]+)/.exec(ua) ||
                        ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) ||
                        [];

                    return {browser: match[1] || "", version: match[2] || "0"};
                },
                matched = ua_match(navigator.userAgent),
                browser = {};

            if (matched.browser) {
                browser[matched.browser] = true;
                browser.version = matched.version;
            }

            if (browser.chrome) {
                browser.webkit = true;
            } else if (browser.webkit) {
                browser.safari = true;
            }
            return browser;
        })();
    }

    var defaultMasks = {
        pint: /[\d]/,
        'int': /[\d\-]/,
        pnum: /[\d\.]/,
        money: /[\d\.\s,]/,
        num: /[\d\-\.]/,
        hex: /[0-9a-f]/i,
        email: /[a-z0-9_\.\-@]/i,
        alpha: /[a-z_]/i,
        alphanum: /[a-z0-9_]/i
    };

    var Keys = {
        TAB: 9,
        RETURN: 13,
        ESC: 27,
        BACKSPACE: 8,
        DELETE: 46
    };

    // safari keypress events for special keys return bad keycodes
    var SafariKeys = {
        63234: 37, // left
        63235: 39, // right
        63232: 38, // up
        63233: 40, // down
        63276: 33, // page up
        63277: 34, // page down
        63272: 46, // delete
        63273: 36, // home
        63275: 35  // end
    };

    var isNavKeyPress = function (e) {
        var k = e.keyCode;
        k = $.browser.safari ? (SafariKeys[k] || k) : k;
        return (k >= 33 && k <= 40) || k == Keys.RETURN || k == Keys.TAB || k == Keys.ESC;
    };

    var isSpecialKey = function (e) {
        var k = e.keyCode;
        var c = e.charCode;
        return k == 9 || k == 13 || k == 27 ||
            k == 16 || k == 17 ||
            (k >= 18 && k <= 20) ||
            ($.browser.opera && !e.shiftKey && (k == 8 || (k >= 33 && k <= 35) || (k >= 36 && k <= 39) || (k >= 44 && k <= 45)))
            ;

    };

    /**
     * Returns a normalized keyCode for the event.
     * @return {Number} The key code
     */
    var getKey = function (e) {
        var k = e.keyCode || e.charCode;
        return $.browser.safari ? (SafariKeys[k] || k) : k;
    };

    var getCharCode = function (e) {
        return e.charCode || e.keyCode || e.which;
    };

    $.fn.keyfilter = function (re) {
        return this.on('keypress', function (e) {
            if (e.ctrlKey || e.altKey) {
                return;
            }
            var k = getKey(e);
            if ($.browser.mozilla && (isNavKeyPress(e) || k == Keys.BACKSPACE || (k == Keys.DELETE && e.charCode == 0))) {
                return;
            }
            var c = getCharCode(e), cc = String.fromCharCode(c), ok = true;
            if (!$.browser.mozilla && (isSpecialKey(e) || !cc)) {
                return;
            }
            if ($.isFunction(re)) {
                ok = re.call(this, cc);
            } else {
                ok = re.test(cc);
            }
            if (!ok) {
                e.preventDefault();
            }
        });
    };

    $.extend($.fn.keyfilter, {
        defaults: {
            masks: defaultMasks
        },
        version: 1.7
    });

    $(document).ready(function () {
        var tags = $('input[class*=mask],textarea[class*=mask]');
        for (var key in $.fn.keyfilter.defaults.masks) {
            tags.filter('.mask-' + key).keyfilter($.fn.keyfilter.defaults.masks[key]);
        }
    });

})(jQuery);

/*!
	autosize 4.0.2
	license: MIT
	http://www.jacklmoore.com/autosize
*/
!function (e, t) {
    if ("function" == typeof define && define.amd) define(["module", "exports"], t); else if ("undefined" != typeof exports) t(module, exports); else {
        var n = {exports: {}};
        t(n, n.exports), e.autosize = n.exports
    }
}(this, function (e, t) {
    "use strict";
    var n, o, p = "function" == typeof Map ? new Map : (n = [], o = [], {
        has: function (e) {
            return -1 < n.indexOf(e)
        }, get: function (e) {
            return o[n.indexOf(e)]
        }, set: function (e, t) {
            -1 === n.indexOf(e) && (n.push(e), o.push(t))
        }, delete: function (e) {
            var t = n.indexOf(e);
            -1 < t && (n.splice(t, 1), o.splice(t, 1))
        }
    }), c = function (e) {
        return new Event(e, {bubbles: !0})
    };
    try {
        new Event("test")
    } catch (e) {
        c = function (e) {
            var t = document.createEvent("Event");
            return t.initEvent(e, !0, !1), t
        }
    }

    function r(r) {
        if (r && r.nodeName && "TEXTAREA" === r.nodeName && !p.has(r)) {
            var e, n = null, o = null, i = null, d = function () {
                r.clientWidth !== o && a()
            }, l = function (t) {
                window.removeEventListener("resize", d, !1), r.removeEventListener("input", a, !1), r.removeEventListener("keyup", a, !1), r.removeEventListener("autosize:destroy", l, !1), r.removeEventListener("autosize:update", a, !1), Object.keys(t).forEach(function (e) {
                    r.style[e] = t[e]
                }), p.delete(r)
            }.bind(r, {
                height: r.style.height,
                resize: r.style.resize,
                overflowY: r.style.overflowY,
                overflowX: r.style.overflowX,
                wordWrap: r.style.wordWrap
            });
            r.addEventListener("autosize:destroy", l, !1), "onpropertychange" in r && "oninput" in r && r.addEventListener("keyup", a, !1), window.addEventListener("resize", d, !1), r.addEventListener("input", a, !1), r.addEventListener("autosize:update", a, !1), r.style.overflowX = "hidden", r.style.wordWrap = "break-word", p.set(r, {
                destroy: l,
                update: a
            }), "vertical" === (e = window.getComputedStyle(r, null)).resize ? r.style.resize = "none" : "both" === e.resize && (r.style.resize = "horizontal"), n = "content-box" === e.boxSizing ? -(parseFloat(e.paddingTop) + parseFloat(e.paddingBottom)) : parseFloat(e.borderTopWidth) + parseFloat(e.borderBottomWidth), isNaN(n) && (n = 0), a()
        }

        function s(e) {
            var t = r.style.width;
            r.style.width = "0px", r.offsetWidth, r.style.width = t, r.style.overflowY = e
        }

        function u() {
            if (0 !== r.scrollHeight) {
                var e = function (e) {
                    for (var t = []; e && e.parentNode && e.parentNode instanceof Element;) e.parentNode.scrollTop && t.push({
                        node: e.parentNode,
                        scrollTop: e.parentNode.scrollTop
                    }), e = e.parentNode;
                    return t
                }(r), t = document.documentElement && document.documentElement.scrollTop;
                r.style.height = "", r.style.height = r.scrollHeight + n + "px", o = r.clientWidth, e.forEach(function (e) {
                    e.node.scrollTop = e.scrollTop
                }), t && (document.documentElement.scrollTop = t)
            }
        }

        function a() {
            u();
            var e = Math.round(parseFloat(r.style.height)), t = window.getComputedStyle(r, null),
                n = "content-box" === t.boxSizing ? Math.round(parseFloat(t.height)) : r.offsetHeight;
            if (n < e ? "hidden" === t.overflowY && (s("scroll"), u(), n = "content-box" === t.boxSizing ? Math.round(parseFloat(window.getComputedStyle(r, null).height)) : r.offsetHeight) : "hidden" !== t.overflowY && (s("hidden"), u(), n = "content-box" === t.boxSizing ? Math.round(parseFloat(window.getComputedStyle(r, null).height)) : r.offsetHeight), i !== n) {
                i = n;
                var o = c("autosize:resized");
                try {
                    r.dispatchEvent(o)
                } catch (e) {
                }
            }
        }
    }

    function i(e) {
        var t = p.get(e);
        t && t.destroy()
    }

    function d(e) {
        var t = p.get(e);
        t && t.update()
    }

    var l = null;
    "undefined" == typeof window || "function" != typeof window.getComputedStyle ? ((l = function (e) {
        return e
    }).destroy = function (e) {
        return e
    }, l.update = function (e) {
        return e
    }) : ((l = function (e, t) {
        return e && Array.prototype.forEach.call(e.length ? e : [e], function (e) {
            return r(e)
        }), e
    }).destroy = function (e) {
        return e && Array.prototype.forEach.call(e.length ? e : [e], i), e
    }, l.update = function (e) {
        return e && Array.prototype.forEach.call(e.length ? e : [e], d), e
    }), t.default = l, e.exports = t.default
});
(function (factory) {

    if (typeof define === 'function' && define.amd) {

        // AMD. Register as an anonymous module.
        define([], factory);

    } else if (typeof exports === 'object') {

        // Node/CommonJS
        module.exports = factory();

    } else {

        // Browser globals
        window.wNumb = factory();
    }

}(function () {

    'use strict';

    var FormatOptions = [
        'decimals',
        'thousand',
        'mark',
        'prefix',
        'suffix',
        'encoder',
        'decoder',
        'negativeBefore',
        'negative',
        'edit',
        'undo'
    ];

// General

    // Reverse a string
    function strReverse(a) {
        return a.split('').reverse().join('');
    }

    // Check if a string starts with a specified prefix.
    function strStartsWith(input, match) {
        return input.substring(0, match.length) === match;
    }

    // Check is a string ends in a specified suffix.
    function strEndsWith(input, match) {
        return input.slice(-1 * match.length) === match;
    }

    // Throw an error if formatting options are incompatible.
    function throwEqualError(F, a, b) {
        if ((F[a] || F[b]) && (F[a] === F[b])) {
            throw new Error(a);
        }
    }

    // Check if a number is finite and not NaN
    function isValidNumber(input) {
        return typeof input === 'number' && isFinite(input);
    }

    // Provide rounding-accurate toFixed method.
    // Borrowed: http://stackoverflow.com/a/21323330/775265
    function toFixed(value, exp) {
        value = value.toString().split('e');
        value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp)));
        value = value.toString().split('e');
        return (+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp))).toFixed(exp);
    }


// Formatting

    // Accept a number as input, output formatted string.
    function formatTo(decimals, thousand, mark, prefix, suffix, encoder, decoder, negativeBefore, negative, edit, undo, input) {

        var originalInput = input, inputIsNegative, inputPieces, inputBase, inputDecimals = '', output = '';

        // Apply user encoder to the input.
        // Expected outcome: number.
        if (encoder) {
            input = encoder(input);
        }

        // Stop if no valid number was provided, the number is infinite or NaN.
        if (!isValidNumber(input)) {
            return false;
        }

        // Rounding away decimals might cause a value of -0
        // when using very small ranges. Remove those cases.
        if (decimals !== false && parseFloat(input.toFixed(decimals)) === 0) {
            input = 0;
        }

        // Formatting is done on absolute numbers,
        // decorated by an optional negative symbol.
        if (input < 0) {
            inputIsNegative = true;
            input = Math.abs(input);
        }

        // Reduce the number of decimals to the specified option.
        if (decimals !== false) {
            input = toFixed(input, decimals);
        }

        // Transform the number into a string, so it can be split.
        input = input.toString();

        // Break the number on the decimal separator.
        if (input.indexOf('.') !== -1) {
            inputPieces = input.split('.');

            inputBase = inputPieces[0];

            if (mark) {
                inputDecimals = mark + inputPieces[1];
            }

        } else {

            // If it isn't split, the entire number will do.
            inputBase = input;
        }

        // Group numbers in sets of three.
        if (thousand) {
            inputBase = strReverse(inputBase).match(/.{1,3}/g);
            inputBase = strReverse(inputBase.join(strReverse(thousand)));
        }

        // If the number is negative, prefix with negation symbol.
        if (inputIsNegative && negativeBefore) {
            output += negativeBefore;
        }

        // Prefix the number
        if (prefix) {
            output += prefix;
        }

        // Normal negative option comes after the prefix. Defaults to '-'.
        if (inputIsNegative && negative) {
            output += negative;
        }

        // Append the actual number.
        output += inputBase;
        output += inputDecimals;

        // Apply the suffix.
        if (suffix) {
            output += suffix;
        }

        // Run the output through a user-specified post-formatter.
        if (edit) {
            output = edit(output, originalInput);
        }

        // All done.
        return output;
    }

    // Accept a sting as input, output decoded number.
    function formatFrom(decimals, thousand, mark, prefix, suffix, encoder, decoder, negativeBefore, negative, edit, undo, input) {

        var originalInput = input, inputIsNegative, output = '';

        // User defined pre-decoder. Result must be a non empty string.
        if (undo) {
            input = undo(input);
        }

        // Test the input. Can't be empty.
        if (!input || typeof input !== 'string') {
            return false;
        }

        // If the string starts with the negativeBefore value: remove it.
        // Remember is was there, the number is negative.
        if (negativeBefore && strStartsWith(input, negativeBefore)) {
            input = input.replace(negativeBefore, '');
            inputIsNegative = true;
        }

        // Repeat the same procedure for the prefix.
        if (prefix && strStartsWith(input, prefix)) {
            input = input.replace(prefix, '');
        }

        // And again for negative.
        if (negative && strStartsWith(input, negative)) {
            input = input.replace(negative, '');
            inputIsNegative = true;
        }

        // Remove the suffix.
        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice
        if (suffix && strEndsWith(input, suffix)) {
            input = input.slice(0, -1 * suffix.length);
        }

        // Remove the thousand grouping.
        if (thousand) {
            input = input.split(thousand).join('');
        }

        // Set the decimal separator back to period.
        if (mark) {
            input = input.replace(mark, '.');
        }

        // Prepend the negative symbol.
        if (inputIsNegative) {
            output += '-';
        }

        // Add the number
        output += input;

        // Trim all non-numeric characters (allow '.' and '-');
        output = output.replace(/[^0-9\.\-.]/g, '');

        // The value contains no parse-able number.
        if (output === '') {
            return false;
        }

        // Covert to number.
        output = Number(output);

        // Run the user-specified post-decoder.
        if (decoder) {
            output = decoder(output);
        }

        // Check is the output is valid, otherwise: return false.
        if (!isValidNumber(output)) {
            return false;
        }

        return output;
    }


// Framework

    // Validate formatting options
    function validate(inputOptions) {

        var i, optionName, optionValue,
            filteredOptions = {};

        if (inputOptions['suffix'] === undefined) {
            inputOptions['suffix'] = inputOptions['postfix'];
        }

        for (i = 0; i < FormatOptions.length; i += 1) {

            optionName = FormatOptions[i];
            optionValue = inputOptions[optionName];

            if (optionValue === undefined) {

                // Only default if negativeBefore isn't set.
                if (optionName === 'negative' && !filteredOptions.negativeBefore) {
                    filteredOptions[optionName] = '-';
                    // Don't set a default for mark when 'thousand' is set.
                } else if (optionName === 'mark' && filteredOptions.thousand !== '.') {
                    filteredOptions[optionName] = '.';
                } else {
                    filteredOptions[optionName] = false;
                }

                // Floating points in JS are stable up to 7 decimals.
            } else if (optionName === 'decimals') {
                if (optionValue >= 0 && optionValue < 8) {
                    filteredOptions[optionName] = optionValue;
                } else {
                    throw new Error(optionName);
                }

                // These options, when provided, must be functions.
            } else if (optionName === 'encoder' || optionName === 'decoder' || optionName === 'edit' || optionName === 'undo') {
                if (typeof optionValue === 'function') {
                    filteredOptions[optionName] = optionValue;
                } else {
                    throw new Error(optionName);
                }

                // Other options are strings.
            } else {

                if (typeof optionValue === 'string') {
                    filteredOptions[optionName] = optionValue;
                } else {
                    throw new Error(optionName);
                }
            }
        }

        // Some values can't be extracted from a
        // string if certain combinations are present.
        throwEqualError(filteredOptions, 'mark', 'thousand');
        throwEqualError(filteredOptions, 'prefix', 'negative');
        throwEqualError(filteredOptions, 'prefix', 'negativeBefore');

        return filteredOptions;
    }

    // Pass all options as function arguments
    function passAll(options, method, input) {
        var i, args = [];

        // Add all options in order of FormatOptions
        for (i = 0; i < FormatOptions.length; i += 1) {
            args.push(options[FormatOptions[i]]);
        }

        // Append the input, then call the method, presenting all
        // options as arguments.
        args.push(input);
        return method.apply('', args);
    }

    function wNumb(options) {

        if (!(this instanceof wNumb)) {
            return new wNumb(options);
        }

        if (typeof options !== "object") {
            return;
        }

        options = validate(options);

        // Call 'formatTo' with proper arguments.
        this.to = function (input) {
            return passAll(options, formatTo, input);
        };

        // Call 'formatFrom' with proper arguments.
        this.from = function (input) {
            return passAll(options, formatFrom, input);
        };
    }

    return wNumb;

}));

/*! nouislider - 9.2.0 - 2017-01-11 10:35:35 */

!function (a) {
    "function" == typeof define && define.amd ? define([], a) : "object" == typeof exports ? module.exports = a() : window.noUiSlider = a()
}(function () {
    "use strict";

    function a(a, b) {
        var c = document.createElement("div");
        return j(c, b), a.appendChild(c), c
    }

    function b(a) {
        return a.filter(function (a) {
            return !this[a] && (this[a] = !0)
        }, {})
    }

    function c(a, b) {
        return Math.round(a / b) * b
    }

    function d(a, b) {
        var c = a.getBoundingClientRect(), d = a.ownerDocument, e = d.documentElement, f = m();
        return /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) && (f.x = 0), b ? c.top + f.y - e.clientTop : c.left + f.x - e.clientLeft
    }

    function e(a) {
        return "number" == typeof a && !isNaN(a) && isFinite(a)
    }

    function f(a, b, c) {
        c > 0 && (j(a, b), setTimeout(function () {
            k(a, b)
        }, c))
    }

    function g(a) {
        return Math.max(Math.min(a, 100), 0)
    }

    function h(a) {
        return Array.isArray(a) ? a : [a]
    }

    function i(a) {
        a = String(a);
        var b = a.split(".");
        return b.length > 1 ? b[1].length : 0
    }

    function j(a, b) {
        a.classList ? a.classList.add(b) : a.className += " " + b
    }

    function k(a, b) {
        a.classList ? a.classList.remove(b) : a.className = a.className.replace(new RegExp("(^|\\b)" + b.split(" ").join("|") + "(\\b|$)", "gi"), " ")
    }

    function l(a, b) {
        return a.classList ? a.classList.contains(b) : new RegExp("\\b" + b + "\\b").test(a.className)
    }

    function m() {
        var a = void 0 !== window.pageXOffset, b = "CSS1Compat" === (document.compatMode || ""),
            c = a ? window.pageXOffset : b ? document.documentElement.scrollLeft : document.body.scrollLeft,
            d = a ? window.pageYOffset : b ? document.documentElement.scrollTop : document.body.scrollTop;
        return {x: c, y: d}
    }

    function n() {
        return window.navigator.pointerEnabled ? {
            start: "pointerdown",
            move: "pointermove",
            end: "pointerup"
        } : window.navigator.msPointerEnabled ? {
            start: "MSPointerDown",
            move: "MSPointerMove",
            end: "MSPointerUp"
        } : {start: "mousedown touchstart", move: "mousemove touchmove", end: "mouseup touchend"}
    }

    function o(a, b) {
        return 100 / (b - a)
    }

    function p(a, b) {
        return 100 * b / (a[1] - a[0])
    }

    function q(a, b) {
        return p(a, a[0] < 0 ? b + Math.abs(a[0]) : b - a[0])
    }

    function r(a, b) {
        return b * (a[1] - a[0]) / 100 + a[0]
    }

    function s(a, b) {
        for (var c = 1; a >= b[c];) c += 1;
        return c
    }

    function t(a, b, c) {
        if (c >= a.slice(-1)[0]) return 100;
        var d, e, f, g, h = s(c, a);
        return d = a[h - 1], e = a[h], f = b[h - 1], g = b[h], f + q([d, e], c) / o(f, g)
    }

    function u(a, b, c) {
        if (c >= 100) return a.slice(-1)[0];
        var d, e, f, g, h = s(c, b);
        return d = a[h - 1], e = a[h], f = b[h - 1], g = b[h], r([d, e], (c - f) * o(f, g))
    }

    function v(a, b, d, e) {
        if (100 === e) return e;
        var f, g, h = s(e, a);
        return d ? (f = a[h - 1], g = a[h], e - f > (g - f) / 2 ? g : f) : b[h - 1] ? a[h - 1] + c(e - a[h - 1], b[h - 1]) : e
    }

    function w(a, b, c) {
        var d;
        if ("number" == typeof b && (b = [b]), "[object Array]" !== Object.prototype.toString.call(b)) throw new Error("noUiSlider (" + U + "): 'range' contains invalid value.");
        if (d = "min" === a ? 0 : "max" === a ? 100 : parseFloat(a), !e(d) || !e(b[0])) throw new Error("noUiSlider (" + U + "): 'range' value isn't numeric.");
        c.xPct.push(d), c.xVal.push(b[0]), d ? c.xSteps.push(!isNaN(b[1]) && b[1]) : isNaN(b[1]) || (c.xSteps[0] = b[1]), c.xHighestCompleteStep.push(0)
    }

    function x(a, b, c) {
        if (!b) return !0;
        c.xSteps[a] = p([c.xVal[a], c.xVal[a + 1]], b) / o(c.xPct[a], c.xPct[a + 1]);
        var d = (c.xVal[a + 1] - c.xVal[a]) / c.xNumSteps[a], e = Math.ceil(Number(d.toFixed(3)) - 1),
            f = c.xVal[a] + c.xNumSteps[a] * e;
        c.xHighestCompleteStep[a] = f
    }

    function y(a, b, c, d) {
        this.xPct = [], this.xVal = [], this.xSteps = [d || !1], this.xNumSteps = [!1], this.xHighestCompleteStep = [], this.snap = b, this.direction = c;
        var e, f = [];
        for (e in a) a.hasOwnProperty(e) && f.push([a[e], e]);
        for (f.length && "object" == typeof f[0][0] ? f.sort(function (a, b) {
            return a[0][0] - b[0][0]
        }) : f.sort(function (a, b) {
            return a[0] - b[0]
        }), e = 0; e < f.length; e++) w(f[e][1], f[e][0], this);
        for (this.xNumSteps = this.xSteps.slice(0), e = 0; e < this.xNumSteps.length; e++) x(e, this.xNumSteps[e], this)
    }

    function z(a, b) {
        if (!e(b)) throw new Error("noUiSlider (" + U + "): 'step' is not numeric.");
        a.singleStep = b
    }

    function A(a, b) {
        if ("object" != typeof b || Array.isArray(b)) throw new Error("noUiSlider (" + U + "): 'range' is not an object.");
        if (void 0 === b.min || void 0 === b.max) throw new Error("noUiSlider (" + U + "): Missing 'min' or 'max' in 'range'.");
        if (b.min === b.max) throw new Error("noUiSlider (" + U + "): 'range' 'min' and 'max' cannot be equal.");
        a.spectrum = new y(b, a.snap, a.dir, a.singleStep)
    }

    function B(a, b) {
        if (b = h(b), !Array.isArray(b) || !b.length) throw new Error("noUiSlider (" + U + "): 'start' option is incorrect.");
        a.handles = b.length, a.start = b
    }

    function C(a, b) {
        if (a.snap = b, "boolean" != typeof b) throw new Error("noUiSlider (" + U + "): 'snap' option must be a boolean.")
    }

    function D(a, b) {
        if (a.animate = b, "boolean" != typeof b) throw new Error("noUiSlider (" + U + "): 'animate' option must be a boolean.")
    }

    function E(a, b) {
        if (a.animationDuration = b, "number" != typeof b) throw new Error("noUiSlider (" + U + "): 'animationDuration' option must be a number.")
    }

    function F(a, b) {
        var c, d = [!1];
        if ("lower" === b ? b = [!0, !1] : "upper" === b && (b = [!1, !0]), b === !0 || b === !1) {
            for (c = 1; c < a.handles; c++) d.push(b);
            d.push(!1)
        } else {
            if (!Array.isArray(b) || !b.length || b.length !== a.handles + 1) throw new Error("noUiSlider (" + U + "): 'connect' option doesn't match handle count.");
            d = b
        }
        a.connect = d
    }

    function G(a, b) {
        switch (b) {
            case"horizontal":
                a.ort = 0;
                break;
            case"vertical":
                a.ort = 1;
                break;
            default:
                throw new Error("noUiSlider (" + U + "): 'orientation' option is invalid.")
        }
    }

    function H(a, b) {
        if (!e(b)) throw new Error("noUiSlider (" + U + "): 'margin' option must be numeric.");
        if (0 !== b && (a.margin = a.spectrum.getMargin(b), !a.margin)) throw new Error("noUiSlider (" + U + "): 'margin' option is only supported on linear sliders.")
    }

    function I(a, b) {
        if (!e(b)) throw new Error("noUiSlider (" + U + "): 'limit' option must be numeric.");
        if (a.limit = a.spectrum.getMargin(b), !a.limit || a.handles < 2) throw new Error("noUiSlider (" + U + "): 'limit' option is only supported on linear sliders with 2 or more handles.")
    }

    function J(a, b) {
        if (!e(b)) throw new Error("noUiSlider (" + U + "): 'padding' option must be numeric.");
        if (0 !== b) {
            if (a.padding = a.spectrum.getMargin(b), !a.padding) throw new Error("noUiSlider (" + U + "): 'padding' option is only supported on linear sliders.");
            if (a.padding < 0) throw new Error("noUiSlider (" + U + "): 'padding' option must be a positive number.");
            if (a.padding >= 50) throw new Error("noUiSlider (" + U + "): 'padding' option must be less than half the range.")
        }
    }

    function K(a, b) {
        switch (b) {
            case"ltr":
                a.dir = 0;
                break;
            case"rtl":
                a.dir = 1;
                break;
            default:
                throw new Error("noUiSlider (" + U + "): 'direction' option was not recognized.")
        }
    }

    function L(a, b) {
        if ("string" != typeof b) throw new Error("noUiSlider (" + U + "): 'behaviour' must be a string containing options.");
        var c = b.indexOf("tap") >= 0, d = b.indexOf("drag") >= 0, e = b.indexOf("fixed") >= 0,
            f = b.indexOf("snap") >= 0, g = b.indexOf("hover") >= 0;
        if (e) {
            if (2 !== a.handles) throw new Error("noUiSlider (" + U + "): 'fixed' behaviour must be used with 2 handles");
            H(a, a.start[1] - a.start[0])
        }
        a.events = {tap: c || f, drag: d, fixed: e, snap: f, hover: g}
    }

    function M(a, b) {
        if (b !== !1) if (b === !0) {
            a.tooltips = [];
            for (var c = 0; c < a.handles; c++) a.tooltips.push(!0)
        } else {
            if (a.tooltips = h(b), a.tooltips.length !== a.handles) throw new Error("noUiSlider (" + U + "): must pass a formatter for all handles.");
            a.tooltips.forEach(function (a) {
                if ("boolean" != typeof a && ("object" != typeof a || "function" != typeof a.to)) throw new Error("noUiSlider (" + U + "): 'tooltips' must be passed a formatter or 'false'.")
            })
        }
    }

    function N(a, b) {
        if (a.format = b, "function" == typeof b.to && "function" == typeof b.from) return !0;
        throw new Error("noUiSlider (" + U + "): 'format' requires 'to' and 'from' methods.")
    }

    function O(a, b) {
        if (void 0 !== b && "string" != typeof b && b !== !1) throw new Error("noUiSlider (" + U + "): 'cssPrefix' must be a string or `false`.");
        a.cssPrefix = b
    }

    function P(a, b) {
        if (void 0 !== b && "object" != typeof b) throw new Error("noUiSlider (" + U + "): 'cssClasses' must be an object.");
        if ("string" == typeof a.cssPrefix) {
            a.cssClasses = {};
            for (var c in b) b.hasOwnProperty(c) && (a.cssClasses[c] = a.cssPrefix + b[c])
        } else a.cssClasses = b
    }

    function Q(a, b) {
        if (b !== !0 && b !== !1) throw new Error("noUiSlider (" + U + "): 'useRequestAnimationFrame' option should be true (default) or false.");
        a.useRequestAnimationFrame = b
    }

    function R(a) {
        var b = {margin: 0, limit: 0, padding: 0, animate: !0, animationDuration: 300, format: V}, c = {
            step: {r: !1, t: z},
            start: {r: !0, t: B},
            connect: {r: !0, t: F},
            direction: {r: !0, t: K},
            snap: {r: !1, t: C},
            animate: {r: !1, t: D},
            animationDuration: {r: !1, t: E},
            range: {r: !0, t: A},
            orientation: {r: !1, t: G},
            margin: {r: !1, t: H},
            limit: {r: !1, t: I},
            padding: {r: !1, t: J},
            behaviour: {r: !0, t: L},
            format: {r: !1, t: N},
            tooltips: {r: !1, t: M},
            cssPrefix: {r: !1, t: O},
            cssClasses: {r: !1, t: P},
            useRequestAnimationFrame: {r: !1, t: Q}
        }, d = {
            connect: !1,
            direction: "ltr",
            behaviour: "tap",
            orientation: "horizontal",
            cssPrefix: "noUi-",
            cssClasses: {
                target: "target",
                base: "base",
                origin: "origin",
                handle: "handle",
                handleLower: "handle-lower",
                handleUpper: "handle-upper",
                horizontal: "horizontal",
                vertical: "vertical",
                background: "background",
                connect: "connect",
                ltr: "ltr",
                rtl: "rtl",
                draggable: "draggable",
                drag: "state-drag",
                tap: "state-tap",
                active: "active",
                tooltip: "tooltip",
                pips: "pips",
                pipsHorizontal: "pips-horizontal",
                pipsVertical: "pips-vertical",
                marker: "marker",
                markerHorizontal: "marker-horizontal",
                markerVertical: "marker-vertical",
                markerNormal: "marker-normal",
                markerLarge: "marker-large",
                markerSub: "marker-sub",
                value: "value",
                valueHorizontal: "value-horizontal",
                valueVertical: "value-vertical",
                valueNormal: "value-normal",
                valueLarge: "value-large",
                valueSub: "value-sub"
            },
            useRequestAnimationFrame: !0
        };
        Object.keys(c).forEach(function (e) {
            if (void 0 === a[e] && void 0 === d[e]) {
                if (c[e].r) throw new Error("noUiSlider (" + U + "): '" + e + "' is required.");
                return !0
            }
            c[e].t(b, void 0 === a[e] ? d[e] : a[e])
        }), b.pips = a.pips;
        var e = [["left", "top"], ["right", "bottom"]];
        return b.style = e[b.dir][b.ort], b.styleOposite = e[b.dir ? 0 : 1][b.ort], b
    }

    function S(c, e, i) {
        function o(b, c) {
            var d = a(b, e.cssClasses.origin), f = a(d, e.cssClasses.handle);
            return f.setAttribute("data-handle", c), 0 === c ? j(f, e.cssClasses.handleLower) : c === e.handles - 1 && j(f, e.cssClasses.handleUpper), d
        }

        function p(b, c) {
            return !!c && a(b, e.cssClasses.connect)
        }

        function q(a, b) {
            ca = [], da = [], da.push(p(b, a[0]));
            for (var c = 0; c < e.handles; c++) ca.push(o(b, c)), ia[c] = c, da.push(p(b, a[c + 1]))
        }

        function r(b) {
            j(b, e.cssClasses.target), 0 === e.dir ? j(b, e.cssClasses.ltr) : j(b, e.cssClasses.rtl), 0 === e.ort ? j(b, e.cssClasses.horizontal) : j(b, e.cssClasses.vertical), ba = a(b, e.cssClasses.base)
        }

        function s(b, c) {
            return !!e.tooltips[c] && a(b.firstChild, e.cssClasses.tooltip)
        }

        function t() {
            var a = ca.map(s);
            $("update", function (b, c, d) {
                if (a[c]) {
                    var f = b[c];
                    e.tooltips[c] !== !0 && (f = e.tooltips[c].to(d[c])), a[c].innerHTML = f
                }
            })
        }

        function u(a, b, c) {
            if ("range" === a || "steps" === a) return ka.xVal;
            if ("count" === a) {
                if (!b) throw new Error("noUiSlider (" + U + "): 'values' required for mode 'count'.");
                var d, e = 100 / (b - 1), f = 0;
                for (b = []; (d = f++ * e) <= 100;) b.push(d);
                a = "positions"
            }
            return "positions" === a ? b.map(function (a) {
                return ka.fromStepping(c ? ka.getStep(a) : a)
            }) : "values" === a ? c ? b.map(function (a) {
                return ka.fromStepping(ka.getStep(ka.toStepping(a)))
            }) : b : void 0
        }

        function v(a, c, d) {
            function e(a, b) {
                return (a + b).toFixed(7) / 1
            }

            var f = {}, g = ka.xVal[0], h = ka.xVal[ka.xVal.length - 1], i = !1, j = !1, k = 0;
            return d = b(d.slice().sort(function (a, b) {
                return a - b
            })), d[0] !== g && (d.unshift(g), i = !0), d[d.length - 1] !== h && (d.push(h), j = !0), d.forEach(function (b, g) {
                var h, l, m, n, o, p, q, r, s, t, u = b, v = d[g + 1];
                if ("steps" === c && (h = ka.xNumSteps[g]), h || (h = v - u), u !== !1 && void 0 !== v) for (h = Math.max(h, 1e-7), l = u; l <= v; l = e(l, h)) {
                    for (n = ka.toStepping(l), o = n - k, r = o / a, s = Math.round(r), t = o / s, m = 1; m <= s; m += 1) p = k + m * t, f[p.toFixed(5)] = ["x", 0];
                    q = d.indexOf(l) > -1 ? 1 : "steps" === c ? 2 : 0, !g && i && (q = 0), l === v && j || (f[n.toFixed(5)] = [l, q]), k = n
                }
            }), f
        }

        function w(a, b, c) {
            function d(a, b) {
                var c = b === e.cssClasses.value, d = c ? m : n, f = c ? k : l;
                return b + " " + d[e.ort] + " " + f[a]
            }

            function f(a, b, c) {
                return 'class="' + d(c[1], b) + '" style="' + e.style + ": " + a + '%"'
            }

            function g(a, d) {
                d[1] = d[1] && b ? b(d[0], d[1]) : d[1], i += "<div " + f(a, e.cssClasses.marker, d) + "></div>", d[1] && (i += "<div " + f(a, e.cssClasses.value, d) + ">" + c.to(d[0]) + "</div>")
            }

            var h = document.createElement("div"), i = "",
                k = [e.cssClasses.valueNormal, e.cssClasses.valueLarge, e.cssClasses.valueSub],
                l = [e.cssClasses.markerNormal, e.cssClasses.markerLarge, e.cssClasses.markerSub],
                m = [e.cssClasses.valueHorizontal, e.cssClasses.valueVertical],
                n = [e.cssClasses.markerHorizontal, e.cssClasses.markerVertical];
            return j(h, e.cssClasses.pips), j(h, 0 === e.ort ? e.cssClasses.pipsHorizontal : e.cssClasses.pipsVertical), Object.keys(a).forEach(function (b) {
                g(b, a[b])
            }), h.innerHTML = i, h
        }

        function x(a) {
            var b = a.mode, c = a.density || 1, d = a.filter || !1, e = a.values || !1, f = a.stepped || !1,
                g = u(b, e, f), h = v(c, b, g), i = a.format || {to: Math.round};
            return ga.appendChild(w(h, d, i))
        }

        function y() {
            var a = ba.getBoundingClientRect(), b = "offset" + ["Width", "Height"][e.ort];
            return 0 === e.ort ? a.width || ba[b] : a.height || ba[b]
        }

        function z(a, b, c, d) {
            var f = function (b) {
                return !ga.hasAttribute("disabled") && (!l(ga, e.cssClasses.tap) && (!!(b = A(b, d.pageOffset)) && (!(a === fa.start && void 0 !== b.buttons && b.buttons > 1) && ((!d.hover || !b.buttons) && (b.calcPoint = b.points[e.ort], void c(b, d))))))
            }, g = [];
            return a.split(" ").forEach(function (a) {
                b.addEventListener(a, f, !1), g.push([a, f])
            }), g
        }

        function A(a, b) {
            a.preventDefault();
            var c, d, e = 0 === a.type.indexOf("touch"), f = 0 === a.type.indexOf("mouse"),
                g = 0 === a.type.indexOf("pointer");
            if (0 === a.type.indexOf("MSPointer") && (g = !0), e) {
                if (a.touches.length > 1) return !1;
                c = a.changedTouches[0].pageX, d = a.changedTouches[0].pageY
            }
            return b = b || m(), (f || g) && (c = a.clientX + b.x, d = a.clientY + b.y), a.pageOffset = b, a.points = [c, d], a.cursor = f || g, a
        }

        function B(a) {
            var b = a - d(ba, e.ort), c = 100 * b / y();
            return e.dir ? 100 - c : c
        }

        function C(a) {
            var b = 100, c = !1;
            return ca.forEach(function (d, e) {
                if (!d.hasAttribute("disabled")) {
                    var f = Math.abs(ha[e] - a);
                    f < b && (c = e, b = f)
                }
            }), c
        }

        function D(a, b, c, d) {
            var e = c.slice(), f = [!a, a], g = [a, !a];
            d = d.slice(), a && d.reverse(), d.length > 1 ? d.forEach(function (a, c) {
                var d = M(e, a, e[a] + b, f[c], g[c]);
                d === !1 ? b = 0 : (b = d - e[a], e[a] = d)
            }) : f = g = [!0];
            var h = !1;
            d.forEach(function (a, d) {
                h = Q(a, c[a] + b, f[d], g[d]) || h
            }), h && d.forEach(function (a) {
                E("update", a), E("slide", a)
            })
        }

        function E(a, b, c) {
            Object.keys(ma).forEach(function (d) {
                var f = d.split(".")[0];
                a === f && ma[d].forEach(function (a) {
                    a.call(ea, la.map(e.format.to), b, la.slice(), c || !1, ha.slice())
                })
            })
        }

        function F(a, b) {
            "mouseout" === a.type && "HTML" === a.target.nodeName && null === a.relatedTarget && H(a, b)
        }

        function G(a, b) {
            if (navigator.appVersion.indexOf("MSIE 9") === -1 && 0 === a.buttons && 0 !== b.buttonsProperty) return H(a, b);
            var c = (e.dir ? -1 : 1) * (a.calcPoint - b.startCalcPoint), d = 100 * c / b.baseSize;
            D(c > 0, d, b.locations, b.handleNumbers)
        }

        function H(a, b) {
            ja && (k(ja, e.cssClasses.active), ja = !1), a.cursor && (document.body.style.cursor = "", document.body.removeEventListener("selectstart", document.body.noUiListener)), document.documentElement.noUiListeners.forEach(function (a) {
                document.documentElement.removeEventListener(a[0], a[1])
            }), k(ga, e.cssClasses.drag), P(), b.handleNumbers.forEach(function (a) {
                E("set", a), E("change", a), E("end", a)
            })
        }

        function I(a, b) {
            if (1 === b.handleNumbers.length) {
                var c = ca[b.handleNumbers[0]];
                if (c.hasAttribute("disabled")) return !1;
                ja = c.children[0], j(ja, e.cssClasses.active)
            }
            a.preventDefault(), a.stopPropagation();
            var d = z(fa.move, document.documentElement, G, {
                    startCalcPoint: a.calcPoint,
                    baseSize: y(),
                    pageOffset: a.pageOffset,
                    handleNumbers: b.handleNumbers,
                    buttonsProperty: a.buttons,
                    locations: ha.slice()
                }), f = z(fa.end, document.documentElement, H, {handleNumbers: b.handleNumbers}),
                g = z("mouseout", document.documentElement, F, {handleNumbers: b.handleNumbers});
            if (document.documentElement.noUiListeners = d.concat(f, g), a.cursor) {
                document.body.style.cursor = getComputedStyle(a.target).cursor, ca.length > 1 && j(ga, e.cssClasses.drag);
                var h = function () {
                    return !1
                };
                document.body.noUiListener = h, document.body.addEventListener("selectstart", h, !1)
            }
            b.handleNumbers.forEach(function (a) {
                E("start", a)
            })
        }

        function J(a) {
            a.stopPropagation();
            var b = B(a.calcPoint), c = C(b);
            return c !== !1 && (e.events.snap || f(ga, e.cssClasses.tap, e.animationDuration), Q(c, b, !0, !0), P(), E("slide", c, !0), E("set", c, !0), E("change", c, !0), E("update", c, !0), void (e.events.snap && I(a, {handleNumbers: [c]})))
        }

        function K(a) {
            var b = B(a.calcPoint), c = ka.getStep(b), d = ka.fromStepping(c);
            Object.keys(ma).forEach(function (a) {
                "hover" === a.split(".")[0] && ma[a].forEach(function (a) {
                    a.call(ea, d)
                })
            })
        }

        function L(a) {
            a.fixed || ca.forEach(function (a, b) {
                z(fa.start, a.children[0], I, {handleNumbers: [b]})
            }), a.tap && z(fa.start, ba, J, {}), a.hover && z(fa.move, ba, K, {hover: !0}), a.drag && da.forEach(function (b, c) {
                if (b !== !1 && 0 !== c && c !== da.length - 1) {
                    var d = ca[c - 1], f = ca[c], g = [b];
                    j(b, e.cssClasses.draggable), a.fixed && (g.push(d.children[0]), g.push(f.children[0])), g.forEach(function (a) {
                        z(fa.start, a, I, {handles: [d, f], handleNumbers: [c - 1, c]})
                    })
                }
            })
        }

        function M(a, b, c, d, f) {
            return ca.length > 1 && (d && b > 0 && (c = Math.max(c, a[b - 1] + e.margin)), f && b < ca.length - 1 && (c = Math.min(c, a[b + 1] - e.margin))), ca.length > 1 && e.limit && (d && b > 0 && (c = Math.min(c, a[b - 1] + e.limit)), f && b < ca.length - 1 && (c = Math.max(c, a[b + 1] - e.limit))), e.padding && (0 === b && (c = Math.max(c, e.padding)), b === ca.length - 1 && (c = Math.min(c, 100 - e.padding))), c = ka.getStep(c), c = g(c), c !== a[b] && c
        }

        function N(a) {
            return a + "%"
        }

        function O(a, b) {
            ha[a] = b, la[a] = ka.fromStepping(b);
            var c = function () {
                ca[a].style[e.style] = N(b), S(a), S(a + 1)
            };
            window.requestAnimationFrame && e.useRequestAnimationFrame ? window.requestAnimationFrame(c) : c()
        }

        function P() {
            ia.forEach(function (a) {
                var b = ha[a] > 50 ? -1 : 1, c = 3 + (ca.length + b * a);
                ca[a].childNodes[0].style.zIndex = c
            })
        }

        function Q(a, b, c, d) {
            return b = M(ha, a, b, c, d), b !== !1 && (O(a, b), !0)
        }

        function S(a) {
            if (da[a]) {
                var b = 0, c = 100;
                0 !== a && (b = ha[a - 1]), a !== da.length - 1 && (c = ha[a]), da[a].style[e.style] = N(b), da[a].style[e.styleOposite] = N(100 - c)
            }
        }

        function T(a, b) {
            null !== a && a !== !1 && ("number" == typeof a && (a = String(a)), a = e.format.from(a), a === !1 || isNaN(a) || Q(b, ka.toStepping(a), !1, !1))
        }

        function V(a, b) {
            var c = h(a), d = void 0 === ha[0];
            b = void 0 === b || !!b, c.forEach(T), e.animate && !d && f(ga, e.cssClasses.tap, e.animationDuration), ia.forEach(function (a) {
                Q(a, ha[a], !0, !1)
            }), P(), ia.forEach(function (a) {
                E("update", a), null !== c[a] && b && E("set", a)
            })
        }

        function W(a) {
            V(e.start, a)
        }

        function X() {
            var a = la.map(e.format.to);
            return 1 === a.length ? a[0] : a
        }

        function Y() {
            for (var a in e.cssClasses) e.cssClasses.hasOwnProperty(a) && k(ga, e.cssClasses[a]);
            for (; ga.firstChild;) ga.removeChild(ga.firstChild);
            delete ga.noUiSlider
        }

        function Z() {
            return ha.map(function (a, b) {
                var c = ka.getNearbySteps(a), d = la[b], e = c.thisStep.step, f = null;
                e !== !1 && d + e > c.stepAfter.startValue && (e = c.stepAfter.startValue - d), f = d > c.thisStep.startValue ? c.thisStep.step : c.stepBefore.step !== !1 && d - c.stepBefore.highestStep, 100 === a ? e = null : 0 === a && (f = null);
                var g = ka.countStepDecimals();
                return null !== e && e !== !1 && (e = Number(e.toFixed(g))), null !== f && f !== !1 && (f = Number(f.toFixed(g))), [f, e]
            })
        }

        function $(a, b) {
            ma[a] = ma[a] || [], ma[a].push(b), "update" === a.split(".")[0] && ca.forEach(function (a, b) {
                E("update", b)
            })
        }

        function _(a) {
            var b = a && a.split(".")[0], c = b && a.substring(b.length);
            Object.keys(ma).forEach(function (a) {
                var d = a.split(".")[0], e = a.substring(d.length);
                b && b !== d || c && c !== e || delete ma[a]
            })
        }

        function aa(a, b) {
            var c = X(), d = ["margin", "limit", "padding", "range", "animate", "snap", "step", "format"];
            d.forEach(function (b) {
                void 0 !== a[b] && (i[b] = a[b])
            });
            var f = R(i);
            d.forEach(function (b) {
                void 0 !== a[b] && (e[b] = f[b])
            }), f.spectrum.direction = ka.direction, ka = f.spectrum, e.margin = f.margin, e.limit = f.limit, e.padding = f.padding, ha = [], V(a.start || c, b)
        }

        var ba, ca, da, ea, fa = n(), ga = c, ha = [], ia = [], ja = !1, ka = e.spectrum, la = [], ma = {};
        if (ga.noUiSlider) throw new Error("noUiSlider (" + U + "): Slider was already initialized.");
        return r(ga), q(e.connect, ba), ea = {
            destroy: Y,
            steps: Z,
            on: $,
            off: _,
            get: X,
            set: V,
            reset: W,
            __moveHandles: function (a, b, c) {
                D(a, b, ha, c)
            },
            options: i,
            updateOptions: aa,
            target: ga,
            pips: x
        }, L(e.events), V(e.start), e.pips && x(e.pips), e.tooltips && t(), ea
    }

    function T(a, b) {
        if (!a.nodeName) throw new Error("noUiSlider (" + U + "): create requires a single element.");
        var c = R(b, a), d = S(a, c, b);
        return a.noUiSlider = d, d
    }

    var U = "9.2.0";
    y.prototype.getMargin = function (a) {
        var b = this.xNumSteps[0];
        if (b && a / b % 1 !== 0) throw new Error("noUiSlider (" + U + "): 'limit', 'margin' and 'padding' must be divisible by step.");
        return 2 === this.xPct.length && p(this.xVal, a)
    }, y.prototype.toStepping = function (a) {
        return a = t(this.xVal, this.xPct, a)
    }, y.prototype.fromStepping = function (a) {
        return u(this.xVal, this.xPct, a)
    }, y.prototype.getStep = function (a) {
        return a = v(this.xPct, this.xSteps, this.snap, a)
    }, y.prototype.getNearbySteps = function (a) {
        var b = s(a, this.xPct);
        return {
            stepBefore: {
                startValue: this.xVal[b - 2],
                step: this.xNumSteps[b - 2],
                highestStep: this.xHighestCompleteStep[b - 2]
            },
            thisStep: {
                startValue: this.xVal[b - 1],
                step: this.xNumSteps[b - 1],
                highestStep: this.xHighestCompleteStep[b - 1]
            },
            stepAfter: {
                startValue: this.xVal[b - 0],
                step: this.xNumSteps[b - 0],
                highestStep: this.xHighestCompleteStep[b - 0]
            }
        }
    }, y.prototype.countStepDecimals = function () {
        var a = this.xNumSteps.map(i);
        return Math.max.apply(null, a)
    }, y.prototype.convert = function (a) {
        return this.getStep(this.toStepping(a))
    };
    var V = {
        to: function (a) {
            return void 0 !== a && a.toFixed(2)
        }, from: Number
    };
    return {version: U, create: T}
});
"use strict";
!function (factory) {
    "function" == typeof define && define.amd ? define(["jquery"], factory) : "object" == typeof exports ? module.exports = factory(require("jquery")) : factory(jQuery)
}(function ($) {
    var spinningTimer, Spinner, Spinning = function ($element, options) {
        return this.$el = $element, this.options = $.extend({}, Spinning.rules.defaults, Spinning.rules[options.rule] || {}, options), this.min = Number(this.options.min) || 0, this.max = Number(this.options.max) || 0, this.$el.on({
            "focus.spinner": $.proxy(function (e) {
                e.preventDefault(), $(document).trigger("mouseup.spinner"), this.oldValue = this.value()
            }, this), "change.spinner": $.proxy(function (e) {
                e.preventDefault(), this.value(this.$el.val())
            }, this), "keydown.spinner": $.proxy(function (e) {
                var dir = {38: "up", 40: "down"}[e.which];
                dir && (e.preventDefault(), this.spin(dir))
            }, this)
        }), this.oldValue = this.value(), this.value(this.$el.val()), this
    };
    Spinning.rules = {
        defaults: {min: null, max: null, step: 1, precision: 0},
        currency: {min: 0, max: null, step: .01, precision: 2},
        quantity: {min: 1, max: 999, step: 1, precision: 0},
        percent: {min: 1, max: 100, step: 1, precision: 0},
        month: {min: 1, max: 12, step: 1, precision: 0},
        day: {min: 1, max: 31, step: 1, precision: 0},
        hour: {min: 0, max: 23, step: 1, precision: 0},
        minute: {min: 1, max: 59, step: 1, precision: 0},
        second: {min: 1, max: 59, step: 1, precision: 0}
    }, Spinning.prototype = {
        spin: function (dir) {
            if (!this.$el.prop("disabled")) {
                this.oldValue = this.value();
                var step = $.isFunction(this.options.step) ? this.options.step.call(this, dir) : this.options.step,
                    multipler = "up" === dir ? 1 : -1;
                this.value(this.oldValue + Number(step) * multipler)
            }
        }, value: function (v) {
            if (null == v) return this.numeric(this.$el.val());
            v = this.numeric(v);
            var valid = this.validate(v);
            0 !== valid && (v = -1 === valid ? this.min : this.max), this.$el.val(v.toFixed(this.options.precision)), this.oldValue !== this.value() && (this.$el.trigger("changing.spinner", [this.value(), this.oldValue]), clearTimeout(spinningTimer), spinningTimer = setTimeout($.proxy(function () {
                this.$el.trigger("changed.spinner", [this.value(), this.oldValue])
            }, this), Spinner.delay))
        }, numeric: function (v) {
            return v = 0 < this.options.precision ? parseFloat(v, 10) : parseInt(v, 10), isFinite(v) ? v : v || this.options.min || 0
        }, validate: function (val) {
            return null !== this.options.min && val < this.min ? -1 : null !== this.options.max && val > this.max ? 1 : 0
        }
    }, (Spinner = function (element, options) {
        this.$el = $(element), this.$spinning = this.$el.find('[data-spin="spinner"]'), 0 === this.$spinning.length && (this.$spinning = this.$el.find('input[type="text"]')), options = $.extend({}, options, this.$spinning.data()), this.spinning = new Spinning(this.$spinning, options), this.$el.on("click.spinner", '[data-spin="up"], [data-spin="down"]', $.proxy(this, "spin")).on("mousedown.spinner", '[data-spin="up"], [data-spin="down"]', $.proxy(this, "spin")), $(document).on("mouseup.spinner", $.proxy(function () {
            clearTimeout(this.spinTimeout), clearInterval(this.spinInterval)
        }, this)), options.delay && this.delay(options.delay), options.changed && this.changed(options.changed), options.changing && this.changing(options.changing)
    }).delay = 500, Spinner.prototype = {
        constructor: Spinner, spin: function (e) {
            var dir = $(e.currentTarget).data("spin");
            switch (e.type) {
                case"click":
                    e.preventDefault(), this.spinning.spin(dir);
                    break;
                case"mousedown":
                    1 === e.which && (this.spinTimeout = setTimeout($.proxy(this, "beginSpin", dir), 300))
            }
        }, delay: function (ms) {
            var delay = Number(ms);
            0 <= delay && (this.constructor.delay = delay + 100)
        }, value: function () {
            return this.spinning.value()
        }, changed: function (fn) {
            this.bindHandler("changed.spinner", fn)
        }, changing: function (fn) {
            this.bindHandler("changing.spinner", fn)
        }, bindHandler: function (t, fn) {
            $.isFunction(fn) ? this.$spinning.on(t, fn) : this.$spinning.off(t)
        }, beginSpin: function (dir) {
            this.spinInterval = setInterval($.proxy(this.spinning, "spin", dir), 100)
        }
    };
    var old = $.fn.spinner;
    return $.fn.spinner = function (options, value) {
        return this.each(function () {
            var data = $.data(this, "spinner");
            data || (data = new Spinner(this, options), $.data(this, "spinner", data)), "delay" === options || "changed" === options || "changing" === options ? data[options](value) : "step" === options && value ? data.spinning.step = value : "spin" === options && value && data.spinning.spin(value)
        })
    }, $.fn.spinner.Constructor = Spinner, $.fn.spinner.noConflict = function () {
        return $.fn.spinner = old, this
    }, $(function () {
        $('[data-trigger="spinner"]').spinner()
    }), $.fn.spinner
});
/*! jQuery UI - v1.12.1+CommonJS - 2018-02-10
 * http://jqueryui.com
 * Includes: widget.js
 * Copyright jQuery Foundation and other contributors; Licensed MIT */

(function (factory) {
    if (typeof define === "function" && define.amd) {

        // AMD. Register as an anonymous module.
        define(["jquery"], factory);
    } else if (typeof exports === "object") {

        // Node/CommonJS
        factory(require("jquery"));
    } else {

        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    $.ui = $.ui || {};

    var version = $.ui.version = "1.12.1";


    /*!
   * jQuery UI Widget 1.12.1
   * http://jqueryui.com
   *
   * Copyright jQuery Foundation and other contributors
   * Released under the MIT license.
   * http://jquery.org/license
   */

    //>>label: Widget
    //>>group: Core
    //>>description: Provides a factory for creating stateful widgets with a common API.
    //>>docs: http://api.jqueryui.com/jQuery.widget/
    //>>demos: http://jqueryui.com/widget/


    var widgetUuid = 0;
    var widgetSlice = Array.prototype.slice;

    $.cleanData = (function (orig) {
        return function (elems) {
            var events, elem, i;
            for (i = 0; (elem = elems[i]) != null; i++) {
                try {

                    // Only trigger remove when necessary to save time
                    events = $._data(elem, "events");
                    if (events && events.remove) {
                        $(elem).triggerHandler("remove");
                    }

                    // Http://bugs.jquery.com/ticket/8235
                } catch (e) {
                }
            }
            orig(elems);
        };
    })($.cleanData);

    $.widget = function (name, base, prototype) {
        var existingConstructor, constructor, basePrototype;

        // ProxiedPrototype allows the provided prototype to remain unmodified
        // so that it can be used as a mixin for multiple widgets (#8876)
        var proxiedPrototype = {};

        var namespace = name.split(".")[0];
        name = name.split(".")[1];
        var fullName = namespace + "-" + name;

        if (!prototype) {
            prototype = base;
            base = $.Widget;
        }

        if ($.isArray(prototype)) {
            prototype = $.extend.apply(null, [{}].concat(prototype));
        }

        // Create selector for plugin
        $.expr[":"][fullName.toLowerCase()] = function (elem) {
            return !!$.data(elem, fullName);
        };

        $[namespace] = $[namespace] || {};
        existingConstructor = $[namespace][name];
        constructor = $[namespace][name] = function (options, element) {

            // Allow instantiation without "new" keyword
            if (!this._createWidget) {
                return new constructor(options, element);
            }

            // Allow instantiation without initializing for simple inheritance
            // must use "new" keyword (the code above always passes args)
            if (arguments.length) {
                this._createWidget(options, element);
            }
        };

        // Extend with the existing constructor to carry over any static properties
        $.extend(constructor, existingConstructor, {
            version: prototype.version,

            // Copy the object used to create the prototype in case we need to
            // redefine the widget later
            _proto: $.extend({}, prototype),

            // Track widgets that inherit from this widget in case this widget is
            // redefined after a widget inherits from it
            _childConstructors: []
        });

        basePrototype = new base();

        // We need to make the options hash a property directly on the new instance
        // otherwise we'll modify the options hash on the prototype that we're
        // inheriting from
        basePrototype.options = $.widget.extend({}, basePrototype.options);
        $.each(prototype, function (prop, value) {
            if (!$.isFunction(value)) {
                proxiedPrototype[prop] = value;
                return;
            }
            proxiedPrototype[prop] = (function () {
                function _super() {
                    return base.prototype[prop].apply(this, arguments);
                }

                function _superApply(args) {
                    return base.prototype[prop].apply(this, args);
                }

                return function () {
                    var __super = this._super;
                    var __superApply = this._superApply;
                    var returnValue;

                    this._super = _super;
                    this._superApply = _superApply;

                    returnValue = value.apply(this, arguments);

                    this._super = __super;
                    this._superApply = __superApply;

                    return returnValue;
                };
            })();
        });
        constructor.prototype = $.widget.extend(basePrototype, {

            // TODO: remove support for widgetEventPrefix
            // always use the name + a colon as the prefix, e.g., draggable:start
            // don't prefix for widgets that aren't DOM-based
            widgetEventPrefix: existingConstructor ? (basePrototype.widgetEventPrefix || name) : name
        }, proxiedPrototype, {
            constructor: constructor,
            namespace: namespace,
            widgetName: name,
            widgetFullName: fullName
        });

        // If this widget is being redefined then we need to find all widgets that
        // are inheriting from it and redefine all of them so that they inherit from
        // the new version of this widget. We're essentially trying to replace one
        // level in the prototype chain.
        if (existingConstructor) {
            $.each(existingConstructor._childConstructors, function (i, child) {
                var childPrototype = child.prototype;

                // Redefine the child widget using the same prototype that was
                // originally used, but inherit from the new version of the base
                $.widget(childPrototype.namespace + "." + childPrototype.widgetName, constructor,
                    child._proto);
            });

            // Remove the list of existing child constructors from the old constructor
            // so the old child constructors can be garbage collected
            delete existingConstructor._childConstructors;
        } else {
            base._childConstructors.push(constructor);
        }

        $.widget.bridge(name, constructor);

        return constructor;
    };

    $.widget.extend = function (target) {
        var input = widgetSlice.call(arguments, 1);
        var inputIndex = 0;
        var inputLength = input.length;
        var key;
        var value;

        for (; inputIndex < inputLength; inputIndex++) {
            for (key in input[inputIndex]) {
                value = input[inputIndex][key];
                if (input[inputIndex].hasOwnProperty(key) && value !== undefined) {

                    // Clone objects
                    if ($.isPlainObject(value)) {
                        target[key] = $.isPlainObject(target[key]) ?
                            $.widget.extend({}, target[key], value) :

                            // Don't extend strings, arrays, etc. with objects
                            $.widget.extend({}, value);

                        // Copy everything else by reference
                    } else {
                        target[key] = value;
                    }
                }
            }
        }
        return target;
    };

    $.widget.bridge = function (name, object) {
        var fullName = object.prototype.widgetFullName || name;
        $.fn[name] = function (options) {
            var isMethodCall = typeof options === "string";
            var args = widgetSlice.call(arguments, 1);
            var returnValue = this;

            if (isMethodCall) {

                // If this is an empty collection, we need to have the instance method
                // return undefined instead of the jQuery instance
                if (!this.length && options === "instance") {
                    returnValue = undefined;
                } else {
                    this.each(function () {
                        var methodValue;
                        var instance = $.data(this, fullName);

                        if (options === "instance") {
                            returnValue = instance;
                            return false;
                        }

                        if (!instance) {
                            return $.error("cannot call methods on " + name +
                                " prior to initialization; " +
                                "attempted to call method '" + options + "'");
                        }

                        if (!$.isFunction(instance[options]) || options.charAt(0) === "_") {
                            return $.error("no such method '" + options + "' for " + name +
                                " widget instance");
                        }

                        methodValue = instance[options].apply(instance, args);

                        if (methodValue !== instance && methodValue !== undefined) {
                            returnValue = methodValue && methodValue.jquery ?
                                returnValue.pushStack(methodValue.get()) :
                                methodValue;
                            return false;
                        }
                    });
                }
            } else {

                // Allow multiple hashes to be passed on init
                if (args.length) {
                    options = $.widget.extend.apply(null, [options].concat(args));
                }

                this.each(function () {
                    var instance = $.data(this, fullName);
                    if (instance) {
                        instance.option(options || {});
                        if (instance._init) {
                            instance._init();
                        }
                    } else {
                        $.data(this, fullName, new object(options, this));
                    }
                });
            }

            return returnValue;
        };
    };

    $.Widget = function ( /* options, element */) {
    };
    $.Widget._childConstructors = [];

    $.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",

        options: {
            classes: {},
            disabled: false,

            // Callbacks
            create: null
        },

        _createWidget: function (options, element) {
            element = $(element || this.defaultElement || this)[0];
            this.element = $(element);
            this.uuid = widgetUuid++;
            this.eventNamespace = "." + this.widgetName + this.uuid;

            this.bindings = $();
            this.hoverable = $();
            this.focusable = $();
            this.classesElementLookup = {};

            if (element !== this) {
                $.data(element, this.widgetFullName, this);
                this._on(true, this.element, {
                    remove: function (event) {
                        if (event.target === element) {
                            this.destroy();
                        }
                    }
                });
                this.document = $(element.style ?

                    // Element within the document
                    element.ownerDocument :

                    // Element is window or document
                    element.document || element);
                this.window = $(this.document[0].defaultView || this.document[0].parentWindow);
            }

            this.options = $.widget.extend({},
                this.options,
                this._getCreateOptions(),
                options);

            this._create();

            if (this.options.disabled) {
                this._setOptionDisabled(this.options.disabled);
            }

            this._trigger("create", null, this._getCreateEventData());
            this._init();
        },

        _getCreateOptions: function () {
            return {};
        },

        _getCreateEventData: $.noop,

        _create: $.noop,

        _init: $.noop,

        destroy: function () {
            var that = this;

            this._destroy();
            $.each(this.classesElementLookup, function (key, value) {
                that._removeClass(value, key);
            });

            // We can probably remove the unbind calls in 2.0
            // all event bindings should go through this._on()
            this.element
                .off(this.eventNamespace)
                .removeData(this.widgetFullName);
            this.widget()
                .off(this.eventNamespace)
                .removeAttr("aria-disabled");

            // Clean up events and states
            this.bindings.off(this.eventNamespace);
        },

        _destroy: $.noop,

        widget: function () {
            return this.element;
        },

        option: function (key, value) {
            var options = key;
            var parts;
            var curOption;
            var i;

            if (arguments.length === 0) {

                // Don't return a reference to the internal hash
                return $.widget.extend({}, this.options);
            }

            if (typeof key === "string") {

                // Handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
                options = {};
                parts = key.split(".");
                key = parts.shift();
                if (parts.length) {
                    curOption = options[key] = $.widget.extend({}, this.options[key]);
                    for (i = 0; i < parts.length - 1; i++) {
                        curOption[parts[i]] = curOption[parts[i]] || {};
                        curOption = curOption[parts[i]];
                    }
                    key = parts.pop();
                    if (arguments.length === 1) {
                        return curOption[key] === undefined ? null : curOption[key];
                    }
                    curOption[key] = value;
                } else {
                    if (arguments.length === 1) {
                        return this.options[key] === undefined ? null : this.options[key];
                    }
                    options[key] = value;
                }
            }

            this._setOptions(options);

            return this;
        },

        _setOptions: function (options) {
            var key;

            for (key in options) {
                this._setOption(key, options[key]);
            }

            return this;
        },

        _setOption: function (key, value) {
            if (key === "classes") {
                this._setOptionClasses(value);
            }

            this.options[key] = value;

            if (key === "disabled") {
                this._setOptionDisabled(value);
            }

            return this;
        },

        _setOptionClasses: function (value) {
            var classKey, elements, currentElements;

            for (classKey in value) {
                currentElements = this.classesElementLookup[classKey];
                if (value[classKey] === this.options.classes[classKey] ||
                    !currentElements ||
                    !currentElements.length) {
                    continue;
                }

                // We are doing this to create a new jQuery object because the _removeClass() call
                // on the next line is going to destroy the reference to the current elements being
                // tracked. We need to save a copy of this collection so that we can add the new classes
                // below.
                elements = $(currentElements.get());
                this._removeClass(currentElements, classKey);

                // We don't use _addClass() here, because that uses this.options.classes
                // for generating the string of classes. We want to use the value passed in from
                // _setOption(), this is the new value of the classes option which was passed to
                // _setOption(). We pass this value directly to _classes().
                elements.addClass(this._classes({
                    element: elements,
                    keys: classKey,
                    classes: value,
                    add: true
                }));
            }
        },

        _setOptionDisabled: function (value) {
            this._toggleClass(this.widget(), this.widgetFullName + "-disabled", null, !!value);

            // If the widget is becoming disabled, then nothing is interactive
            if (value) {
                this._removeClass(this.hoverable, null, "ui-state-hover");
                this._removeClass(this.focusable, null, "ui-state-focus");
            }
        },

        enable: function () {
            return this._setOptions({disabled: false});
        },

        disable: function () {
            return this._setOptions({disabled: true});
        },

        _classes: function (options) {
            var full = [];
            var that = this;

            options = $.extend({
                element: this.element,
                classes: this.options.classes || {}
            }, options);

            function processClassString(classes, checkOption) {
                var current, i;
                for (i = 0; i < classes.length; i++) {
                    current = that.classesElementLookup[classes[i]] || $();
                    if (options.add) {
                        current = $($.unique(current.get().concat(options.element.get())));
                    } else {
                        current = $(current.not(options.element).get());
                    }
                    that.classesElementLookup[classes[i]] = current;
                    full.push(classes[i]);
                    if (checkOption && options.classes[classes[i]]) {
                        full.push(options.classes[classes[i]]);
                    }
                }
            }

            this._on(options.element, {
                "remove": "_untrackClassesElement"
            });

            if (options.keys) {
                processClassString(options.keys.match(/\S+/g) || [], true);
            }
            if (options.extra) {
                processClassString(options.extra.match(/\S+/g) || []);
            }

            return full.join(" ");
        },

        _untrackClassesElement: function (event) {
            var that = this;
            $.each(that.classesElementLookup, function (key, value) {
                if ($.inArray(event.target, value) !== -1) {
                    that.classesElementLookup[key] = $(value.not(event.target).get());
                }
            });
        },

        _removeClass: function (element, keys, extra) {
            return this._toggleClass(element, keys, extra, false);
        },

        _addClass: function (element, keys, extra) {
            return this._toggleClass(element, keys, extra, true);
        },

        _toggleClass: function (element, keys, extra, add) {
            add = (typeof add === "boolean") ? add : extra;
            var shift = (typeof element === "string" || element === null),
                options = {
                    extra: shift ? keys : extra,
                    keys: shift ? element : keys,
                    element: shift ? this.element : element,
                    add: add
                };
            options.element.toggleClass(this._classes(options), add);
            return this;
        },

        _on: function (suppressDisabledCheck, element, handlers) {
            var delegateElement;
            var instance = this;

            // No suppressDisabledCheck flag, shuffle arguments
            if (typeof suppressDisabledCheck !== "boolean") {
                handlers = element;
                element = suppressDisabledCheck;
                suppressDisabledCheck = false;
            }

            // No element argument, shuffle and use this.element
            if (!handlers) {
                handlers = element;
                element = this.element;
                delegateElement = this.widget();
            } else {
                element = delegateElement = $(element);
                this.bindings = this.bindings.add(element);
            }

            $.each(handlers, function (event, handler) {
                function handlerProxy() {

                    // Allow widgets to customize the disabled handling
                    // - disabled as an array instead of boolean
                    // - disabled class as method for disabling individual parts
                    if (!suppressDisabledCheck &&
                        (instance.options.disabled === true ||
                            $(this).hasClass("ui-state-disabled"))) {
                        return;
                    }
                    return (typeof handler === "string" ? instance[handler] : handler)
                        .apply(instance, arguments);
                }

                // Copy the guid so direct unbinding works
                if (typeof handler !== "string") {
                    handlerProxy.guid = handler.guid =
                        handler.guid || handlerProxy.guid || $.guid++;
                }

                var match = event.match(/^([\w:-]*)\s*(.*)$/);
                var eventName = match[1] + instance.eventNamespace;
                var selector = match[2];

                if (selector) {
                    delegateElement.on(eventName, selector, handlerProxy);
                } else {
                    element.on(eventName, handlerProxy);
                }
            });
        },

        _off: function (element, eventName) {
            eventName = (eventName || "").split(" ").join(this.eventNamespace + " ") +
                this.eventNamespace;
            element.off(eventName).off(eventName);

            // Clear the stack to avoid memory leaks (#10056)
            this.bindings = $(this.bindings.not(element).get());
            this.focusable = $(this.focusable.not(element).get());
            this.hoverable = $(this.hoverable.not(element).get());
        },

        _delay: function (handler, delay) {
            function handlerProxy() {
                return (typeof handler === "string" ? instance[handler] : handler)
                    .apply(instance, arguments);
            }

            var instance = this;
            return setTimeout(handlerProxy, delay || 0);
        },

        _hoverable: function (element) {
            this.hoverable = this.hoverable.add(element);
            this._on(element, {
                mouseenter: function (event) {
                    this._addClass($(event.currentTarget), null, "ui-state-hover");
                },
                mouseleave: function (event) {
                    this._removeClass($(event.currentTarget), null, "ui-state-hover");
                }
            });
        },

        _focusable: function (element) {
            this.focusable = this.focusable.add(element);
            this._on(element, {
                focusin: function (event) {
                    this._addClass($(event.currentTarget), null, "ui-state-focus");
                },
                focusout: function (event) {
                    this._removeClass($(event.currentTarget), null, "ui-state-focus");
                }
            });
        },

        _trigger: function (type, event, data) {
            var prop, orig;
            var callback = this.options[type];

            data = data || {};
            event = $.Event(event);
            event.type = (type === this.widgetEventPrefix ?
                type :
                this.widgetEventPrefix + type).toLowerCase();

            // The original event may come from any element
            // so we need to reset the target on the new event
            event.target = this.element[0];

            // Copy original event properties over to the new event
            orig = event.originalEvent;
            if (orig) {
                for (prop in orig) {
                    if (!(prop in event)) {
                        event[prop] = orig[prop];
                    }
                }
            }

            this.element.trigger(event, data);
            return !($.isFunction(callback) &&
                callback.apply(this.element[0], [event].concat(data)) === false ||
                event.isDefaultPrevented());
        }
    };

    $.each({show: "fadeIn", hide: "fadeOut"}, function (method, defaultEffect) {
        $.Widget.prototype["_" + method] = function (element, options, callback) {
            if (typeof options === "string") {
                options = {effect: options};
            }

            var hasOptions;
            var effectName = !options ?
                method :
                options === true || typeof options === "number" ?
                    defaultEffect :
                    options.effect || defaultEffect;

            options = options || {};
            if (typeof options === "number") {
                options = {duration: options};
            }

            hasOptions = !$.isEmptyObject(options);
            options.complete = callback;

            if (options.delay) {
                element.delay(options.delay);
            }

            if (hasOptions && $.effects && $.effects.effect[effectName]) {
                element[method](options);
            } else if (effectName !== method && element[effectName]) {
                element[effectName](options.duration, options.easing, callback);
            } else {
                element.queue(function (next) {
                    $(this)[method]();
                    if (callback) {
                        callback.call(element[0]);
                    }
                    next();
                });
            }
        };
    });

    var widget = $.widget;


}));

/*
 * jQuery Iframe Transport Plugin
 * https://github.com/blueimp/jQuery-File-Upload
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 */

/* global define, require, window, document, JSON */

;(function (factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        // Register as an anonymous AMD module:
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS:
        factory(require('jquery'));
    } else {
        // Browser globals:
        factory(window.jQuery);
    }
}(function ($) {
    'use strict';

    // Helper variable to create unique names for the transport iframes:
    var counter = 0,
        jsonAPI = $,
        jsonParse = 'parseJSON';

    if ('JSON' in window && 'parse' in JSON) {
        jsonAPI = JSON;
        jsonParse = 'parse';
    }

    // The iframe transport accepts four additional options:
    // options.fileInput: a jQuery collection of file input fields
    // options.paramName: the parameter name for the file form data,
    //  overrides the name property of the file input field(s),
    //  can be a string or an array of strings.
    // options.formData: an array of objects with name and value properties,
    //  equivalent to the return data of .serializeArray(), e.g.:
    //  [{name: 'a', value: 1}, {name: 'b', value: 2}]
    // options.initialIframeSrc: the URL of the initial iframe src,
    //  by default set to "javascript:false;"
    $.ajaxTransport('iframe', function (options) {
        if (options.async) {
            // javascript:false as initial iframe src
            // prevents warning popups on HTTPS in IE6:
            /*jshint scripturl: true */
            var initialIframeSrc = options.initialIframeSrc || 'javascript:false;',
                /*jshint scripturl: false */
                form,
                iframe,
                addParamChar;
            return {
                send: function (_, completeCallback) {
                    form = $('<form style="display:none;"></form>');
                    form.attr('accept-charset', options.formAcceptCharset);
                    addParamChar = /\?/.test(options.url) ? '&' : '?';
                    // XDomainRequest only supports GET and POST:
                    if (options.type === 'DELETE') {
                        options.url = options.url + addParamChar + '_method=DELETE';
                        options.type = 'POST';
                    } else if (options.type === 'PUT') {
                        options.url = options.url + addParamChar + '_method=PUT';
                        options.type = 'POST';
                    } else if (options.type === 'PATCH') {
                        options.url = options.url + addParamChar + '_method=PATCH';
                        options.type = 'POST';
                    }
                    // IE versions below IE8 cannot set the name property of
                    // elements that have already been added to the DOM,
                    // so we set the name along with the iframe HTML markup:
                    counter += 1;
                    iframe = $(
                        '<iframe src="' + initialIframeSrc +
                        '" name="iframe-transport-' + counter + '"></iframe>'
                    ).bind('load', function () {
                        var fileInputClones,
                            paramNames = $.isArray(options.paramName) ?
                                options.paramName : [options.paramName];
                        iframe
                            .unbind('load')
                            .bind('load', function () {
                                var response;
                                // Wrap in a try/catch block to catch exceptions thrown
                                // when trying to access cross-domain iframe contents:
                                try {
                                    response = iframe.contents();
                                    // Google Chrome and Firefox do not throw an
                                    // exception when calling iframe.contents() on
                                    // cross-domain requests, so we unify the response:
                                    if (!response.length || !response[0].firstChild) {
                                        throw new Error();
                                    }
                                } catch (e) {
                                    response = undefined;
                                }
                                // The complete callback returns the
                                // iframe content document as response object:
                                completeCallback(
                                    200,
                                    'success',
                                    {'iframe': response}
                                );
                                // Fix for IE endless progress bar activity bug
                                // (happens on form submits to iframe targets):
                                $('<iframe src="' + initialIframeSrc + '"></iframe>')
                                    .appendTo(form);
                                window.setTimeout(function () {
                                    // Removing the form in a setTimeout call
                                    // allows Chrome's developer tools to display
                                    // the response result
                                    form.remove();
                                }, 0);
                            });
                        form
                            .prop('target', iframe.prop('name'))
                            .prop('action', options.url)
                            .prop('method', options.type);
                        if (options.formData) {
                            $.each(options.formData, function (index, field) {
                                $('<input type="hidden"/>')
                                    .prop('name', field.name)
                                    .val(field.value)
                                    .appendTo(form);
                            });
                        }
                        if (options.fileInput && options.fileInput.length &&
                            options.type === 'POST') {
                            fileInputClones = options.fileInput.clone();
                            // Insert a clone for each file input field:
                            options.fileInput.after(function (index) {
                                return fileInputClones[index];
                            });
                            if (options.paramName) {
                                options.fileInput.each(function (index) {
                                    $(this).prop(
                                        'name',
                                        paramNames[index] || options.paramName
                                    );
                                });
                            }
                            // Appending the file input fields to the hidden form
                            // removes them from their original location:
                            form
                                .append(options.fileInput)
                                .prop('enctype', 'multipart/form-data')
                                // enctype must be set as encoding for IE:
                                .prop('encoding', 'multipart/form-data');
                            // Remove the HTML5 form attribute from the input(s):
                            options.fileInput.removeAttr('form');
                        }
                        form.submit();
                        // Insert the file input fields at their original location
                        // by replacing the clones with the originals:
                        if (fileInputClones && fileInputClones.length) {
                            options.fileInput.each(function (index, input) {
                                var clone = $(fileInputClones[index]);
                                // Restore the original name and form properties:
                                $(input)
                                    .prop('name', clone.prop('name'))
                                    .attr('form', clone.attr('form'));
                                clone.replaceWith(input);
                            });
                        }
                    });
                    form.append(iframe).appendTo(document.body);
                },
                abort: function () {
                    if (iframe) {
                        // javascript:false as iframe src aborts the request
                        // and prevents warning popups on HTTPS in IE6.
                        // concat is used to avoid the "Script URL" JSLint error:
                        iframe
                            .unbind('load')
                            .prop('src', initialIframeSrc);
                    }
                    if (form) {
                        form.remove();
                    }
                }
            };
        }
    });

    // The iframe transport returns the iframe content document as response.
    // The following adds converters from iframe to text, json, html, xml
    // and script.
    // Please note that the Content-Type for JSON responses has to be text/plain
    // or text/html, if the browser doesn't include application/json in the
    // Accept header, else IE will show a download dialog.
    // The Content-Type for XML responses on the other hand has to be always
    // application/xml or text/xml, so IE properly parses the XML response.
    // See also
    // https://github.com/blueimp/jQuery-File-Upload/wiki/Setup#content-type-negotiation
    $.ajaxSetup({
        converters: {
            'iframe text': function (iframe) {
                return iframe && $(iframe[0].body).text();
            },
            'iframe json': function (iframe) {
                return iframe && jsonAPI[jsonParse]($(iframe[0].body).text());
            },
            'iframe html': function (iframe) {
                return iframe && $(iframe[0].body).html();
            },
            'iframe xml': function (iframe) {
                var xmlDoc = iframe && iframe[0];
                return xmlDoc && $.isXMLDoc(xmlDoc) ? xmlDoc :
                    $.parseXML((xmlDoc.XMLDocument && xmlDoc.XMLDocument.xml) ||
                        $(xmlDoc.body).html());
            },
            'iframe script': function (iframe) {
                return iframe && $.globalEval($(iframe[0].body).text());
            }
        }
    });

}));

/*
 * jQuery File Upload Plugin
 * https://github.com/blueimp/jQuery-File-Upload
 *
 * Copyright 2010, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 */

/* jshint nomen:false */
/* global define, require, window, document, location, Blob, FormData */

;(function (factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        // Register as an anonymous AMD module:
        define([
            'jquery',
            'jquery-ui/ui/widget'
        ], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS:
        factory(
            require('jquery'),
            require('./vendor/jquery.ui.widget')
        );
    } else {
        // Browser globals:
        factory(window.jQuery);
    }
}(function ($) {
    'use strict';

    // Detect file input support, based on
    // http://viljamis.com/blog/2012/file-upload-support-on-mobile/
    $.support.fileInput = !(new RegExp(
        // Handle devices which give false positives for the feature detection:
        '(Android (1\\.[0156]|2\\.[01]))' +
        '|(Windows Phone (OS 7|8\\.0))|(XBLWP)|(ZuneWP)|(WPDesktop)' +
        '|(w(eb)?OSBrowser)|(webOS)' +
        '|(Kindle/(1\\.0|2\\.[05]|3\\.0))'
        ).test(window.navigator.userAgent) ||
        // Feature detection for all other devices:
        $('<input type="file"/>').prop('disabled'));

    // The FileReader API is not actually used, but works as feature detection,
    // as some Safari versions (5?) support XHR file uploads via the FormData API,
    // but not non-multipart XHR file uploads.
    // window.XMLHttpRequestUpload is not available on IE10, so we check for
    // window.ProgressEvent instead to detect XHR2 file upload capability:
    $.support.xhrFileUpload = !!(window.ProgressEvent && window.FileReader);
    $.support.xhrFormDataFileUpload = !!window.FormData;

    // Detect support for Blob slicing (required for chunked uploads):
    $.support.blobSlice = window.Blob && (Blob.prototype.slice ||
        Blob.prototype.webkitSlice || Blob.prototype.mozSlice);

    // Helper function to create drag handlers for dragover/dragenter/dragleave:
    function getDragHandler(type) {
        var isDragOver = type === 'dragover';
        return function (e) {
            e.dataTransfer = e.originalEvent && e.originalEvent.dataTransfer;
            var dataTransfer = e.dataTransfer;
            if (dataTransfer && $.inArray('Files', dataTransfer.types) !== -1 &&
                this._trigger(
                    type,
                    $.Event(type, {delegatedEvent: e})
                ) !== false) {
                e.preventDefault();
                if (isDragOver) {
                    dataTransfer.dropEffect = 'copy';
                }
            }
        };
    }

    // The fileupload widget listens for change events on file input fields defined
    // via fileInput setting and paste or drop events of the given dropZone.
    // In addition to the default jQuery Widget methods, the fileupload widget
    // exposes the "add" and "send" methods, to add or directly send files using
    // the fileupload API.
    // By default, files added via file input selection, paste, drag & drop or
    // "add" method are uploaded immediately, but it is possible to override
    // the "add" callback option to queue file uploads.
    $.widget('blueimp.fileupload', {

        options: {
            // The drop target element(s), by the default the complete document.
            // Set to null to disable drag & drop support:
            dropZone: $(document),
            // The paste target element(s), by the default undefined.
            // Set to a DOM node or jQuery object to enable file pasting:
            pasteZone: undefined,
            // The file input field(s), that are listened to for change events.
            // If undefined, it is set to the file input fields inside
            // of the widget element on plugin initialization.
            // Set to null to disable the change listener.
            fileInput: undefined,
            // By default, the file input field is replaced with a clone after
            // each input field change event. This is required for iframe transport
            // queues and allows change events to be fired for the same file
            // selection, but can be disabled by setting the following option to false:
            replaceFileInput: true,
            // The parameter name for the file form data (the request argument name).
            // If undefined or empty, the name property of the file input field is
            // used, or "files[]" if the file input name property is also empty,
            // can be a string or an array of strings:
            paramName: undefined,
            // By default, each file of a selection is uploaded using an individual
            // request for XHR type uploads. Set to false to upload file
            // selections in one request each:
            singleFileUploads: true,
            // To limit the number of files uploaded with one XHR request,
            // set the following option to an integer greater than 0:
            limitMultiFileUploads: undefined,
            // The following option limits the number of files uploaded with one
            // XHR request to keep the request size under or equal to the defined
            // limit in bytes:
            limitMultiFileUploadSize: undefined,
            // Multipart file uploads add a number of bytes to each uploaded file,
            // therefore the following option adds an overhead for each file used
            // in the limitMultiFileUploadSize configuration:
            limitMultiFileUploadSizeOverhead: 512,
            // Set the following option to true to issue all file upload requests
            // in a sequential order:
            sequentialUploads: false,
            // To limit the number of concurrent uploads,
            // set the following option to an integer greater than 0:
            limitConcurrentUploads: undefined,
            // Set the following option to true to force iframe transport uploads:
            forceIframeTransport: false,
            // Set the following option to the location of a redirect url on the
            // origin server, for cross-domain iframe transport uploads:
            redirect: undefined,
            // The parameter name for the redirect url, sent as part of the form
            // data and set to 'redirect' if this option is empty:
            redirectParamName: undefined,
            // Set the following option to the location of a postMessage window,
            // to enable postMessage transport uploads:
            postMessage: undefined,
            // By default, XHR file uploads are sent as multipart/form-data.
            // The iframe transport is always using multipart/form-data.
            // Set to false to enable non-multipart XHR uploads:
            multipart: true,
            // To upload large files in smaller chunks, set the following option
            // to a preferred maximum chunk size. If set to 0, null or undefined,
            // or the browser does not support the required Blob API, files will
            // be uploaded as a whole.
            maxChunkSize: undefined,
            // When a non-multipart upload or a chunked multipart upload has been
            // aborted, this option can be used to resume the upload by setting
            // it to the size of the already uploaded bytes. This option is most
            // useful when modifying the options object inside of the "add" or
            // "send" callbacks, as the options are cloned for each file upload.
            uploadedBytes: undefined,
            // By default, failed (abort or error) file uploads are removed from the
            // global progress calculation. Set the following option to false to
            // prevent recalculating the global progress data:
            recalculateProgress: true,
            // Interval in milliseconds to calculate and trigger progress events:
            progressInterval: 100,
            // Interval in milliseconds to calculate progress bitrate:
            bitrateInterval: 500,
            // By default, uploads are started automatically when adding files:
            autoUpload: true,

            // Error and info messages:
            messages: {
                uploadedBytes: 'Uploaded bytes exceed file size'
            },

            // Translation function, gets the message key to be translated
            // and an object with context specific data as arguments:
            i18n: function (message, context) {
                message = this.messages[message] || message.toString();
                if (context) {
                    $.each(context, function (key, value) {
                        message = message.replace('{' + key + '}', value);
                    });
                }
                return message;
            },

            // Additional form data to be sent along with the file uploads can be set
            // using this option, which accepts an array of objects with name and
            // value properties, a function returning such an array, a FormData
            // object (for XHR file uploads), or a simple object.
            // The form of the first fileInput is given as parameter to the function:
            formData: function (form) {
                return form.serializeArray();
            },

            // The add callback is invoked as soon as files are added to the fileupload
            // widget (via file input selection, drag & drop, paste or add API call).
            // If the singleFileUploads option is enabled, this callback will be
            // called once for each file in the selection for XHR file uploads, else
            // once for each file selection.
            //
            // The upload starts when the submit method is invoked on the data parameter.
            // The data object contains a files property holding the added files
            // and allows you to override plugin options as well as define ajax settings.
            //
            // Listeners for this callback can also be bound the following way:
            // .bind('fileuploadadd', func);
            //
            // data.submit() returns a Promise object and allows to attach additional
            // handlers using jQuery's Deferred callbacks:
            // data.submit().done(func).fail(func).always(func);
            add: function (e, data) {
                if (e.isDefaultPrevented()) {
                    return false;
                }
                if (data.autoUpload || (data.autoUpload !== false &&
                    $(this).fileupload('option', 'autoUpload'))) {
                    data.process().done(function () {
                        data.submit();
                    });
                }
            },

            // Other callbacks:

            // Callback for the submit event of each file upload:
            // submit: function (e, data) {}, // .bind('fileuploadsubmit', func);

            // Callback for the start of each file upload request:
            // send: function (e, data) {}, // .bind('fileuploadsend', func);

            // Callback for successful uploads:
            // done: function (e, data) {}, // .bind('fileuploaddone', func);

            // Callback for failed (abort or error) uploads:
            // fail: function (e, data) {}, // .bind('fileuploadfail', func);

            // Callback for completed (success, abort or error) requests:
            // always: function (e, data) {}, // .bind('fileuploadalways', func);

            // Callback for upload progress events:
            // progress: function (e, data) {}, // .bind('fileuploadprogress', func);

            // Callback for global upload progress events:
            // progressall: function (e, data) {}, // .bind('fileuploadprogressall', func);

            // Callback for uploads start, equivalent to the global ajaxStart event:
            // start: function (e) {}, // .bind('fileuploadstart', func);

            // Callback for uploads stop, equivalent to the global ajaxStop event:
            // stop: function (e) {}, // .bind('fileuploadstop', func);

            // Callback for change events of the fileInput(s):
            // change: function (e, data) {}, // .bind('fileuploadchange', func);

            // Callback for paste events to the pasteZone(s):
            // paste: function (e, data) {}, // .bind('fileuploadpaste', func);

            // Callback for drop events of the dropZone(s):
            // drop: function (e, data) {}, // .bind('fileuploaddrop', func);

            // Callback for dragover events of the dropZone(s):
            // dragover: function (e) {}, // .bind('fileuploaddragover', func);

            // Callback before the start of each chunk upload request (before form data initialization):
            // chunkbeforesend: function (e, data) {}, // .bind('fileuploadchunkbeforesend', func);

            // Callback for the start of each chunk upload request:
            // chunksend: function (e, data) {}, // .bind('fileuploadchunksend', func);

            // Callback for successful chunk uploads:
            // chunkdone: function (e, data) {}, // .bind('fileuploadchunkdone', func);

            // Callback for failed (abort or error) chunk uploads:
            // chunkfail: function (e, data) {}, // .bind('fileuploadchunkfail', func);

            // Callback for completed (success, abort or error) chunk upload requests:
            // chunkalways: function (e, data) {}, // .bind('fileuploadchunkalways', func);

            // The plugin options are used as settings object for the ajax calls.
            // The following are jQuery ajax settings required for the file uploads:
            processData: false,
            contentType: false,
            cache: false,
            timeout: 0
        },

        // A list of options that require reinitializing event listeners and/or
        // special initialization code:
        _specialOptions: [
            'fileInput',
            'dropZone',
            'pasteZone',
            'multipart',
            'forceIframeTransport'
        ],

        _blobSlice: $.support.blobSlice && function () {
            var slice = this.slice || this.webkitSlice || this.mozSlice;
            return slice.apply(this, arguments);
        },

        _BitrateTimer: function () {
            this.timestamp = ((Date.now) ? Date.now() : (new Date()).getTime());
            this.loaded = 0;
            this.bitrate = 0;
            this.getBitrate = function (now, loaded, interval) {
                var timeDiff = now - this.timestamp;
                if (!this.bitrate || !interval || timeDiff > interval) {
                    this.bitrate = (loaded - this.loaded) * (1000 / timeDiff) * 8;
                    this.loaded = loaded;
                    this.timestamp = now;
                }
                return this.bitrate;
            };
        },

        _isXHRUpload: function (options) {
            return !options.forceIframeTransport &&
                ((!options.multipart && $.support.xhrFileUpload) ||
                    $.support.xhrFormDataFileUpload);
        },

        _getFormData: function (options) {
            var formData;
            if ($.type(options.formData) === 'function') {
                return options.formData(options.form);
            }
            if ($.isArray(options.formData)) {
                return options.formData;
            }
            if ($.type(options.formData) === 'object') {
                formData = [];
                $.each(options.formData, function (name, value) {
                    formData.push({name: name, value: value});
                });
                return formData;
            }
            return [];
        },

        _getTotal: function (files) {
            var total = 0;
            $.each(files, function (index, file) {
                total += file.size || 1;
            });
            return total;
        },

        _initProgressObject: function (obj) {
            var progress = {
                loaded: 0,
                total: 0,
                bitrate: 0
            };
            if (obj._progress) {
                $.extend(obj._progress, progress);
            } else {
                obj._progress = progress;
            }
        },

        _initResponseObject: function (obj) {
            var prop;
            if (obj._response) {
                for (prop in obj._response) {
                    if (obj._response.hasOwnProperty(prop)) {
                        delete obj._response[prop];
                    }
                }
            } else {
                obj._response = {};
            }
        },

        _onProgress: function (e, data) {
            if (e.lengthComputable) {
                var now = ((Date.now) ? Date.now() : (new Date()).getTime()),
                    loaded;
                if (data._time && data.progressInterval &&
                    (now - data._time < data.progressInterval) &&
                    e.loaded !== e.total) {
                    return;
                }
                data._time = now;
                loaded = Math.floor(
                    e.loaded / e.total * (data.chunkSize || data._progress.total)
                ) + (data.uploadedBytes || 0);
                // Add the difference from the previously loaded state
                // to the global loaded counter:
                this._progress.loaded += (loaded - data._progress.loaded);
                this._progress.bitrate = this._bitrateTimer.getBitrate(
                    now,
                    this._progress.loaded,
                    data.bitrateInterval
                );
                data._progress.loaded = data.loaded = loaded;
                data._progress.bitrate = data.bitrate = data._bitrateTimer.getBitrate(
                    now,
                    loaded,
                    data.bitrateInterval
                );
                // Trigger a custom progress event with a total data property set
                // to the file size(s) of the current upload and a loaded data
                // property calculated accordingly:
                this._trigger(
                    'progress',
                    $.Event('progress', {delegatedEvent: e}),
                    data
                );
                // Trigger a global progress event for all current file uploads,
                // including ajax calls queued for sequential file uploads:
                this._trigger(
                    'progressall',
                    $.Event('progressall', {delegatedEvent: e}),
                    this._progress
                );
            }
        },

        _initProgressListener: function (options) {
            var that = this,
                xhr = options.xhr ? options.xhr() : $.ajaxSettings.xhr();
            // Accesss to the native XHR object is required to add event listeners
            // for the upload progress event:
            if (xhr.upload) {
                $(xhr.upload).bind('progress', function (e) {
                    var oe = e.originalEvent;
                    // Make sure the progress event properties get copied over:
                    e.lengthComputable = oe.lengthComputable;
                    e.loaded = oe.loaded;
                    e.total = oe.total;
                    that._onProgress(e, options);
                });
                options.xhr = function () {
                    return xhr;
                };
            }
        },

        _deinitProgressListener: function (options) {
            var xhr = options.xhr ? options.xhr() : $.ajaxSettings.xhr();
            if (xhr.upload) {
                $(xhr.upload).unbind('progress');
            }
        },

        _isInstanceOf: function (type, obj) {
            // Cross-frame instanceof check
            return Object.prototype.toString.call(obj) === '[object ' + type + ']';
        },

        _initXHRData: function (options) {
            var that = this,
                formData,
                file = options.files[0],
                // Ignore non-multipart setting if not supported:
                multipart = options.multipart || !$.support.xhrFileUpload,
                paramName = $.type(options.paramName) === 'array' ?
                    options.paramName[0] : options.paramName;
            options.headers = $.extend({}, options.headers);
            if (options.contentRange) {
                options.headers['Content-Range'] = options.contentRange;
            }
            if (!multipart || options.blob || !this._isInstanceOf('File', file)) {
                options.headers['Content-Disposition'] = 'attachment; filename="' +
                    encodeURI(file.uploadName || file.name) + '"';
            }
            if (!multipart) {
                options.contentType = file.type || 'application/octet-stream';
                options.data = options.blob || file;
            } else if ($.support.xhrFormDataFileUpload) {
                if (options.postMessage) {
                    // window.postMessage does not allow sending FormData
                    // objects, so we just add the File/Blob objects to
                    // the formData array and let the postMessage window
                    // create the FormData object out of this array:
                    formData = this._getFormData(options);
                    if (options.blob) {
                        formData.push({
                            name: paramName,
                            value: options.blob
                        });
                    } else {
                        $.each(options.files, function (index, file) {
                            formData.push({
                                name: ($.type(options.paramName) === 'array' &&
                                    options.paramName[index]) || paramName,
                                value: file
                            });
                        });
                    }
                } else {
                    if (that._isInstanceOf('FormData', options.formData)) {
                        formData = options.formData;
                    } else {
                        formData = new FormData();
                        $.each(this._getFormData(options), function (index, field) {
                            formData.append(field.name, field.value);
                        });
                    }
                    if (options.blob) {
                        formData.append(
                            paramName,
                            options.blob,
                            file.uploadName || file.name
                        );
                    } else {
                        $.each(options.files, function (index, file) {
                            // This check allows the tests to run with
                            // dummy objects:
                            if (that._isInstanceOf('File', file) ||
                                that._isInstanceOf('Blob', file)) {
                                formData.append(
                                    ($.type(options.paramName) === 'array' &&
                                        options.paramName[index]) || paramName,
                                    file,
                                    file.uploadName || file.name
                                );
                            }
                        });
                    }
                }
                options.data = formData;
            }
            // Blob reference is not needed anymore, free memory:
            options.blob = null;
        },

        _initIframeSettings: function (options) {
            var targetHost = $('<a></a>').prop('href', options.url).prop('host');
            // Setting the dataType to iframe enables the iframe transport:
            options.dataType = 'iframe ' + (options.dataType || '');
            // The iframe transport accepts a serialized array as form data:
            options.formData = this._getFormData(options);
            // Add redirect url to form data on cross-domain uploads:
            if (options.redirect && targetHost && targetHost !== location.host) {
                options.formData.push({
                    name: options.redirectParamName || 'redirect',
                    value: options.redirect
                });
            }
        },

        _initDataSettings: function (options) {
            if (this._isXHRUpload(options)) {
                if (!this._chunkedUpload(options, true)) {
                    if (!options.data) {
                        this._initXHRData(options);
                    }
                    this._initProgressListener(options);
                }
                if (options.postMessage) {
                    // Setting the dataType to postmessage enables the
                    // postMessage transport:
                    options.dataType = 'postmessage ' + (options.dataType || '');
                }
            } else {
                this._initIframeSettings(options);
            }
        },

        _getParamName: function (options) {
            var fileInput = $(options.fileInput),
                paramName = options.paramName;
            if (!paramName) {
                paramName = [];
                fileInput.each(function () {
                    var input = $(this),
                        name = input.prop('name') || 'files[]',
                        i = (input.prop('files') || [1]).length;
                    while (i) {
                        paramName.push(name);
                        i -= 1;
                    }
                });
                if (!paramName.length) {
                    paramName = [fileInput.prop('name') || 'files[]'];
                }
            } else if (!$.isArray(paramName)) {
                paramName = [paramName];
            }
            return paramName;
        },

        _initFormSettings: function (options) {
            // Retrieve missing options from the input field and the
            // associated form, if available:
            if (!options.form || !options.form.length) {
                options.form = $(options.fileInput.prop('form'));
                // If the given file input doesn't have an associated form,
                // use the default widget file input's form:
                if (!options.form.length) {
                    options.form = $(this.options.fileInput.prop('form'));
                }
            }
            options.paramName = this._getParamName(options);
            if (!options.url) {
                options.url = options.form.prop('action') || location.href;
            }
            // The HTTP request method must be "POST" or "PUT":
            options.type = (options.type ||
                ($.type(options.form.prop('method')) === 'string' &&
                    options.form.prop('method')) || ''
            ).toUpperCase();
            if (options.type !== 'POST' && options.type !== 'PUT' &&
                options.type !== 'PATCH') {
                options.type = 'POST';
            }
            if (!options.formAcceptCharset) {
                options.formAcceptCharset = options.form.attr('accept-charset');
            }
        },

        _getAJAXSettings: function (data) {
            var options = $.extend({}, this.options, data);
            this._initFormSettings(options);
            this._initDataSettings(options);
            return options;
        },

        // jQuery 1.6 doesn't provide .state(),
        // while jQuery 1.8+ removed .isRejected() and .isResolved():
        _getDeferredState: function (deferred) {
            if (deferred.state) {
                return deferred.state();
            }
            if (deferred.isResolved()) {
                return 'resolved';
            }
            if (deferred.isRejected()) {
                return 'rejected';
            }
            return 'pending';
        },

        // Maps jqXHR callbacks to the equivalent
        // methods of the given Promise object:
        _enhancePromise: function (promise) {
            promise.success = promise.done;
            promise.error = promise.fail;
            promise.complete = promise.always;
            return promise;
        },

        // Creates and returns a Promise object enhanced with
        // the jqXHR methods abort, success, error and complete:
        _getXHRPromise: function (resolveOrReject, context, args) {
            var dfd = $.Deferred(),
                promise = dfd.promise();
            context = context || this.options.context || promise;
            if (resolveOrReject === true) {
                dfd.resolveWith(context, args);
            } else if (resolveOrReject === false) {
                dfd.rejectWith(context, args);
            }
            promise.abort = dfd.promise;
            return this._enhancePromise(promise);
        },

        // Adds convenience methods to the data callback argument:
        _addConvenienceMethods: function (e, data) {
            var that = this,
                getPromise = function (args) {
                    return $.Deferred().resolveWith(that, args).promise();
                };
            data.process = function (resolveFunc, rejectFunc) {
                if (resolveFunc || rejectFunc) {
                    data._processQueue = this._processQueue =
                        (this._processQueue || getPromise([this])).then(
                            function () {
                                if (data.errorThrown) {
                                    return $.Deferred()
                                        .rejectWith(that, [data]).promise();
                                }
                                return getPromise(arguments);
                            }
                        ).then(resolveFunc, rejectFunc);
                }
                return this._processQueue || getPromise([this]);
            };
            data.submit = function () {
                if (this.state() !== 'pending') {
                    data.jqXHR = this.jqXHR =
                        (that._trigger(
                            'submit',
                            $.Event('submit', {delegatedEvent: e}),
                            this
                        ) !== false) && that._onSend(e, this);
                }
                return this.jqXHR || that._getXHRPromise();
            };
            data.abort = function () {
                if (this.jqXHR) {
                    return this.jqXHR.abort();
                }
                this.errorThrown = 'abort';
                that._trigger('fail', null, this);
                return that._getXHRPromise(false);
            };
            data.state = function () {
                if (this.jqXHR) {
                    return that._getDeferredState(this.jqXHR);
                }
                if (this._processQueue) {
                    return that._getDeferredState(this._processQueue);
                }
            };
            data.processing = function () {
                return !this.jqXHR && this._processQueue && that
                    ._getDeferredState(this._processQueue) === 'pending';
            };
            data.progress = function () {
                return this._progress;
            };
            data.response = function () {
                return this._response;
            };
        },

        // Parses the Range header from the server response
        // and returns the uploaded bytes:
        _getUploadedBytes: function (jqXHR) {
            var range = jqXHR.getResponseHeader('Range'),
                parts = range && range.split('-'),
                upperBytesPos = parts && parts.length > 1 &&
                    parseInt(parts[1], 10);
            return upperBytesPos && upperBytesPos + 1;
        },

        // Uploads a file in multiple, sequential requests
        // by splitting the file up in multiple blob chunks.
        // If the second parameter is true, only tests if the file
        // should be uploaded in chunks, but does not invoke any
        // upload requests:
        _chunkedUpload: function (options, testOnly) {
            options.uploadedBytes = options.uploadedBytes || 0;
            var that = this,
                file = options.files[0],
                fs = file.size,
                ub = options.uploadedBytes,
                mcs = options.maxChunkSize || fs,
                slice = this._blobSlice,
                dfd = $.Deferred(),
                promise = dfd.promise(),
                jqXHR,
                upload;
            if (!(this._isXHRUpload(options) && slice && (ub || ($.type(mcs) === 'function' ? mcs(options) : mcs) < fs)) ||
                options.data) {
                return false;
            }
            if (testOnly) {
                return true;
            }
            if (ub >= fs) {
                file.error = options.i18n('uploadedBytes');
                return this._getXHRPromise(
                    false,
                    options.context,
                    [null, 'error', file.error]
                );
            }
            // The chunk upload method:
            upload = function () {
                // Clone the options object for each chunk upload:
                var o = $.extend({}, options),
                    currentLoaded = o._progress.loaded;
                o.blob = slice.call(
                    file,
                    ub,
                    ub + ($.type(mcs) === 'function' ? mcs(o) : mcs),
                    file.type
                );
                // Store the current chunk size, as the blob itself
                // will be dereferenced after data processing:
                o.chunkSize = o.blob.size;
                // Expose the chunk bytes position range:
                o.contentRange = 'bytes ' + ub + '-' +
                    (ub + o.chunkSize - 1) + '/' + fs;
                // Trigger chunkbeforesend to allow form data to be updated for this chunk
                that._trigger('chunkbeforesend', null, o);
                // Process the upload data (the blob and potential form data):
                that._initXHRData(o);
                // Add progress listeners for this chunk upload:
                that._initProgressListener(o);
                jqXHR = ((that._trigger('chunksend', null, o) !== false && $.ajax(o)) ||
                    that._getXHRPromise(false, o.context))
                    .done(function (result, textStatus, jqXHR) {
                        ub = that._getUploadedBytes(jqXHR) ||
                            (ub + o.chunkSize);
                        // Create a progress event if no final progress event
                        // with loaded equaling total has been triggered
                        // for this chunk:
                        if (currentLoaded + o.chunkSize - o._progress.loaded) {
                            that._onProgress($.Event('progress', {
                                lengthComputable: true,
                                loaded: ub - o.uploadedBytes,
                                total: ub - o.uploadedBytes
                            }), o);
                        }
                        options.uploadedBytes = o.uploadedBytes = ub;
                        o.result = result;
                        o.textStatus = textStatus;
                        o.jqXHR = jqXHR;
                        that._trigger('chunkdone', null, o);
                        that._trigger('chunkalways', null, o);
                        if (ub < fs) {
                            // File upload not yet complete,
                            // continue with the next chunk:
                            upload();
                        } else {
                            dfd.resolveWith(
                                o.context,
                                [result, textStatus, jqXHR]
                            );
                        }
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        o.jqXHR = jqXHR;
                        o.textStatus = textStatus;
                        o.errorThrown = errorThrown;
                        that._trigger('chunkfail', null, o);
                        that._trigger('chunkalways', null, o);
                        dfd.rejectWith(
                            o.context,
                            [jqXHR, textStatus, errorThrown]
                        );
                    })
                    .always(function () {
                        that._deinitProgressListener(o);
                    });
            };
            this._enhancePromise(promise);
            promise.abort = function () {
                return jqXHR.abort();
            };
            upload();
            return promise;
        },

        _beforeSend: function (e, data) {
            if (this._active === 0) {
                // the start callback is triggered when an upload starts
                // and no other uploads are currently running,
                // equivalent to the global ajaxStart event:
                this._trigger('start');
                // Set timer for global bitrate progress calculation:
                this._bitrateTimer = new this._BitrateTimer();
                // Reset the global progress values:
                this._progress.loaded = this._progress.total = 0;
                this._progress.bitrate = 0;
            }
            // Make sure the container objects for the .response() and
            // .progress() methods on the data object are available
            // and reset to their initial state:
            this._initResponseObject(data);
            this._initProgressObject(data);
            data._progress.loaded = data.loaded = data.uploadedBytes || 0;
            data._progress.total = data.total = this._getTotal(data.files) || 1;
            data._progress.bitrate = data.bitrate = 0;
            this._active += 1;
            // Initialize the global progress values:
            this._progress.loaded += data.loaded;
            this._progress.total += data.total;
        },

        _onDone: function (result, textStatus, jqXHR, options) {
            var total = options._progress.total,
                response = options._response;
            if (options._progress.loaded < total) {
                // Create a progress event if no final progress event
                // with loaded equaling total has been triggered:
                this._onProgress($.Event('progress', {
                    lengthComputable: true,
                    loaded: total,
                    total: total
                }), options);
            }
            response.result = options.result = result;
            response.textStatus = options.textStatus = textStatus;
            response.jqXHR = options.jqXHR = jqXHR;
            this._trigger('done', null, options);
        },

        _onFail: function (jqXHR, textStatus, errorThrown, options) {
            var response = options._response;
            if (options.recalculateProgress) {
                // Remove the failed (error or abort) file upload from
                // the global progress calculation:
                this._progress.loaded -= options._progress.loaded;
                this._progress.total -= options._progress.total;
            }
            response.jqXHR = options.jqXHR = jqXHR;
            response.textStatus = options.textStatus = textStatus;
            response.errorThrown = options.errorThrown = errorThrown;
            this._trigger('fail', null, options);
        },

        _onAlways: function (jqXHRorResult, textStatus, jqXHRorError, options) {
            // jqXHRorResult, textStatus and jqXHRorError are added to the
            // options object via done and fail callbacks
            this._trigger('always', null, options);
        },

        _onSend: function (e, data) {
            if (!data.submit) {
                this._addConvenienceMethods(e, data);
            }
            var that = this,
                jqXHR,
                aborted,
                slot,
                pipe,
                options = that._getAJAXSettings(data),
                send = function () {
                    that._sending += 1;
                    // Set timer for bitrate progress calculation:
                    options._bitrateTimer = new that._BitrateTimer();
                    jqXHR = jqXHR || (
                        ((aborted || that._trigger(
                            'send',
                            $.Event('send', {delegatedEvent: e}),
                            options
                            ) === false) &&
                            that._getXHRPromise(false, options.context, aborted)) ||
                        that._chunkedUpload(options) || $.ajax(options)
                    ).done(function (result, textStatus, jqXHR) {
                        that._onDone(result, textStatus, jqXHR, options);
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        that._onFail(jqXHR, textStatus, errorThrown, options);
                    }).always(function (jqXHRorResult, textStatus, jqXHRorError) {
                        that._deinitProgressListener(options);
                        that._onAlways(
                            jqXHRorResult,
                            textStatus,
                            jqXHRorError,
                            options
                        );
                        that._sending -= 1;
                        that._active -= 1;
                        if (options.limitConcurrentUploads &&
                            options.limitConcurrentUploads > that._sending) {
                            // Start the next queued upload,
                            // that has not been aborted:
                            var nextSlot = that._slots.shift();
                            while (nextSlot) {
                                if (that._getDeferredState(nextSlot) === 'pending') {
                                    nextSlot.resolve();
                                    break;
                                }
                                nextSlot = that._slots.shift();
                            }
                        }
                        if (that._active === 0) {
                            // The stop callback is triggered when all uploads have
                            // been completed, equivalent to the global ajaxStop event:
                            that._trigger('stop');
                        }
                    });
                    return jqXHR;
                };
            this._beforeSend(e, options);
            if (this.options.sequentialUploads ||
                (this.options.limitConcurrentUploads &&
                    this.options.limitConcurrentUploads <= this._sending)) {
                if (this.options.limitConcurrentUploads > 1) {
                    slot = $.Deferred();
                    this._slots.push(slot);
                    pipe = slot.then(send);
                } else {
                    this._sequence = this._sequence.then(send, send);
                    pipe = this._sequence;
                }
                // Return the piped Promise object, enhanced with an abort method,
                // which is delegated to the jqXHR object of the current upload,
                // and jqXHR callbacks mapped to the equivalent Promise methods:
                pipe.abort = function () {
                    aborted = [undefined, 'abort', 'abort'];
                    if (!jqXHR) {
                        if (slot) {
                            slot.rejectWith(options.context, aborted);
                        }
                        return send();
                    }
                    return jqXHR.abort();
                };
                return this._enhancePromise(pipe);
            }
            return send();
        },

        _onAdd: function (e, data) {
            var that = this,
                result = true,
                options = $.extend({}, this.options, data),
                files = data.files,
                filesLength = files.length,
                limit = options.limitMultiFileUploads,
                limitSize = options.limitMultiFileUploadSize,
                overhead = options.limitMultiFileUploadSizeOverhead,
                batchSize = 0,
                paramName = this._getParamName(options),
                paramNameSet,
                paramNameSlice,
                fileSet,
                i,
                j = 0;
            if (!filesLength) {
                return false;
            }
            if (limitSize && files[0].size === undefined) {
                limitSize = undefined;
            }
            if (!(options.singleFileUploads || limit || limitSize) ||
                !this._isXHRUpload(options)) {
                fileSet = [files];
                paramNameSet = [paramName];
            } else if (!(options.singleFileUploads || limitSize) && limit) {
                fileSet = [];
                paramNameSet = [];
                for (i = 0; i < filesLength; i += limit) {
                    fileSet.push(files.slice(i, i + limit));
                    paramNameSlice = paramName.slice(i, i + limit);
                    if (!paramNameSlice.length) {
                        paramNameSlice = paramName;
                    }
                    paramNameSet.push(paramNameSlice);
                }
            } else if (!options.singleFileUploads && limitSize) {
                fileSet = [];
                paramNameSet = [];
                for (i = 0; i < filesLength; i = i + 1) {
                    batchSize += files[i].size + overhead;
                    if (i + 1 === filesLength ||
                        ((batchSize + files[i + 1].size + overhead) > limitSize) ||
                        (limit && i + 1 - j >= limit)) {
                        fileSet.push(files.slice(j, i + 1));
                        paramNameSlice = paramName.slice(j, i + 1);
                        if (!paramNameSlice.length) {
                            paramNameSlice = paramName;
                        }
                        paramNameSet.push(paramNameSlice);
                        j = i + 1;
                        batchSize = 0;
                    }
                }
            } else {
                paramNameSet = paramName;
            }
            data.originalFiles = files;
            $.each(fileSet || files, function (index, element) {
                var newData = $.extend({}, data);
                newData.files = fileSet ? element : [element];
                newData.paramName = paramNameSet[index];
                that._initResponseObject(newData);
                that._initProgressObject(newData);
                that._addConvenienceMethods(e, newData);
                result = that._trigger(
                    'add',
                    $.Event('add', {delegatedEvent: e}),
                    newData
                );
                return result;
            });
            return result;
        },

        _replaceFileInput: function (data) {
            var input = data.fileInput,
                inputClone = input.clone(true),
                restoreFocus = input.is(document.activeElement);
            // Add a reference for the new cloned file input to the data argument:
            data.fileInputClone = inputClone;
            $('<form></form>').append(inputClone)[0].reset();
            // Detaching allows to insert the fileInput on another form
            // without loosing the file input value:
            input.after(inputClone).detach();
            // If the fileInput had focus before it was detached,
            // restore focus to the inputClone.
            if (restoreFocus) {
                inputClone.focus();
            }
            // Avoid memory leaks with the detached file input:
            $.cleanData(input.unbind('remove'));
            // Replace the original file input element in the fileInput
            // elements set with the clone, which has been copied including
            // event handlers:
            this.options.fileInput = this.options.fileInput.map(function (i, el) {
                if (el === input[0]) {
                    return inputClone[0];
                }
                return el;
            });
            // If the widget has been initialized on the file input itself,
            // override this.element with the file input clone:
            if (input[0] === this.element[0]) {
                this.element = inputClone;
            }
        },

        _handleFileTreeEntry: function (entry, path) {
            var that = this,
                dfd = $.Deferred(),
                entries = [],
                dirReader,
                errorHandler = function (e) {
                    if (e && !e.entry) {
                        e.entry = entry;
                    }
                    // Since $.when returns immediately if one
                    // Deferred is rejected, we use resolve instead.
                    // This allows valid files and invalid items
                    // to be returned together in one set:
                    dfd.resolve([e]);
                },
                successHandler = function (entries) {
                    that._handleFileTreeEntries(
                        entries,
                        path + entry.name + '/'
                    ).done(function (files) {
                        dfd.resolve(files);
                    }).fail(errorHandler);
                },
                readEntries = function () {
                    dirReader.readEntries(function (results) {
                        if (!results.length) {
                            successHandler(entries);
                        } else {
                            entries = entries.concat(results);
                            readEntries();
                        }
                    }, errorHandler);
                };
            path = path || '';
            if (entry.isFile) {
                if (entry._file) {
                    // Workaround for Chrome bug #149735
                    entry._file.relativePath = path;
                    dfd.resolve(entry._file);
                } else {
                    entry.file(function (file) {
                        file.relativePath = path;
                        dfd.resolve(file);
                    }, errorHandler);
                }
            } else if (entry.isDirectory) {
                dirReader = entry.createReader();
                readEntries();
            } else {
                // Return an empty list for file system items
                // other than files or directories:
                dfd.resolve([]);
            }
            return dfd.promise();
        },

        _handleFileTreeEntries: function (entries, path) {
            var that = this;
            return $.when.apply(
                $,
                $.map(entries, function (entry) {
                    return that._handleFileTreeEntry(entry, path);
                })
            ).then(function () {
                return Array.prototype.concat.apply(
                    [],
                    arguments
                );
            });
        },

        _getDroppedFiles: function (dataTransfer) {
            dataTransfer = dataTransfer || {};
            var items = dataTransfer.items;
            if (items && items.length && (items[0].webkitGetAsEntry ||
                items[0].getAsEntry)) {
                return this._handleFileTreeEntries(
                    $.map(items, function (item) {
                        var entry;
                        if (item.webkitGetAsEntry) {
                            entry = item.webkitGetAsEntry();
                            if (entry) {
                                // Workaround for Chrome bug #149735:
                                entry._file = item.getAsFile();
                            }
                            return entry;
                        }
                        return item.getAsEntry();
                    })
                );
            }
            return $.Deferred().resolve(
                $.makeArray(dataTransfer.files)
            ).promise();
        },

        _getSingleFileInputFiles: function (fileInput) {
            fileInput = $(fileInput);
            var entries = fileInput.prop('webkitEntries') ||
                fileInput.prop('entries'),
                files,
                value;
            if (entries && entries.length) {
                return this._handleFileTreeEntries(entries);
            }
            files = $.makeArray(fileInput.prop('files'));
            if (!files.length) {
                value = fileInput.prop('value');
                if (!value) {
                    return $.Deferred().resolve([]).promise();
                }
                // If the files property is not available, the browser does not
                // support the File API and we add a pseudo File object with
                // the input value as name with path information removed:
                files = [{name: value.replace(/^.*\\/, '')}];
            } else if (files[0].name === undefined && files[0].fileName) {
                // File normalization for Safari 4 and Firefox 3:
                $.each(files, function (index, file) {
                    file.name = file.fileName;
                    file.size = file.fileSize;
                });
            }
            return $.Deferred().resolve(files).promise();
        },

        _getFileInputFiles: function (fileInput) {
            if (!(fileInput instanceof $) || fileInput.length === 1) {
                return this._getSingleFileInputFiles(fileInput);
            }
            return $.when.apply(
                $,
                $.map(fileInput, this._getSingleFileInputFiles)
            ).then(function () {
                return Array.prototype.concat.apply(
                    [],
                    arguments
                );
            });
        },

        _onChange: function (e) {
            var that = this,
                data = {
                    fileInput: $(e.target),
                    form: $(e.target.form)
                };
            this._getFileInputFiles(data.fileInput).always(function (files) {
                data.files = files;
                if (that.options.replaceFileInput) {
                    that._replaceFileInput(data);
                }
                if (that._trigger(
                    'change',
                    $.Event('change', {delegatedEvent: e}),
                    data
                ) !== false) {
                    that._onAdd(e, data);
                }
            });
        },

        _onPaste: function (e) {
            var items = e.originalEvent && e.originalEvent.clipboardData &&
                e.originalEvent.clipboardData.items,
                data = {files: []};
            if (items && items.length) {
                $.each(items, function (index, item) {
                    var file = item.getAsFile && item.getAsFile();
                    if (file) {
                        data.files.push(file);
                    }
                });
                if (this._trigger(
                    'paste',
                    $.Event('paste', {delegatedEvent: e}),
                    data
                ) !== false) {
                    this._onAdd(e, data);
                }
            }
        },

        _onDrop: function (e) {
            e.dataTransfer = e.originalEvent && e.originalEvent.dataTransfer;
            var that = this,
                dataTransfer = e.dataTransfer,
                data = {};
            if (dataTransfer && dataTransfer.files && dataTransfer.files.length) {
                e.preventDefault();
                this._getDroppedFiles(dataTransfer).always(function (files) {
                    data.files = files;
                    if (that._trigger(
                        'drop',
                        $.Event('drop', {delegatedEvent: e}),
                        data
                    ) !== false) {
                        that._onAdd(e, data);
                    }
                });
            }
        },

        _onDragOver: getDragHandler('dragover'),

        _onDragEnter: getDragHandler('dragenter'),

        _onDragLeave: getDragHandler('dragleave'),

        _initEventHandlers: function () {
            if (this._isXHRUpload(this.options)) {
                this._on(this.options.dropZone, {
                    dragover: this._onDragOver,
                    drop: this._onDrop,
                    // event.preventDefault() on dragenter is required for IE10+:
                    dragenter: this._onDragEnter,
                    // dragleave is not required, but added for completeness:
                    dragleave: this._onDragLeave
                });
                this._on(this.options.pasteZone, {
                    paste: this._onPaste
                });
            }
            if ($.support.fileInput) {
                this._on(this.options.fileInput, {
                    change: this._onChange
                });
            }
        },

        _destroyEventHandlers: function () {
            this._off(this.options.dropZone, 'dragenter dragleave dragover drop');
            this._off(this.options.pasteZone, 'paste');
            this._off(this.options.fileInput, 'change');
        },

        _destroy: function () {
            this._destroyEventHandlers();
        },

        _setOption: function (key, value) {
            var reinit = $.inArray(key, this._specialOptions) !== -1;
            if (reinit) {
                this._destroyEventHandlers();
            }
            this._super(key, value);
            if (reinit) {
                this._initSpecialOptions();
                this._initEventHandlers();
            }
        },

        _initSpecialOptions: function () {
            var options = this.options;
            if (options.fileInput === undefined) {
                options.fileInput = this.element.is('input[type="file"]') ?
                    this.element : this.element.find('input[type="file"]');
            } else if (!(options.fileInput instanceof $)) {
                options.fileInput = $(options.fileInput);
            }
            if (!(options.dropZone instanceof $)) {
                options.dropZone = $(options.dropZone);
            }
            if (!(options.pasteZone instanceof $)) {
                options.pasteZone = $(options.pasteZone);
            }
        },

        _getRegExp: function (str) {
            var parts = str.split('/'),
                modifiers = parts.pop();
            parts.shift();
            return new RegExp(parts.join('/'), modifiers);
        },

        _isRegExpOption: function (key, value) {
            return key !== 'url' && $.type(value) === 'string' &&
                /^\/.*\/[igm]{0,3}$/.test(value);
        },

        _initDataAttributes: function () {
            var that = this,
                options = this.options,
                data = this.element.data();
            // Initialize options set via HTML5 data-attributes:
            $.each(
                this.element[0].attributes,
                function (index, attr) {
                    var key = attr.name.toLowerCase(),
                        value;
                    if (/^data-/.test(key)) {
                        // Convert hyphen-ated key to camelCase:
                        key = key.slice(5).replace(/-[a-z]/g, function (str) {
                            return str.charAt(1).toUpperCase();
                        });
                        value = data[key];
                        if (that._isRegExpOption(key, value)) {
                            value = that._getRegExp(value);
                        }
                        options[key] = value;
                    }
                }
            );
        },

        _create: function () {
            this._initDataAttributes();
            this._initSpecialOptions();
            this._slots = [];
            this._sequence = this._getXHRPromise(true);
            this._sending = this._active = 0;
            this._initProgressObject(this);
            this._initEventHandlers();
        },

        // This method is exposed to the widget API and allows to query
        // the number of active uploads:
        active: function () {
            return this._active;
        },

        // This method is exposed to the widget API and allows to query
        // the widget upload progress.
        // It returns an object with loaded, total and bitrate properties
        // for the running uploads:
        progress: function () {
            return this._progress;
        },

        // This method is exposed to the widget API and allows adding files
        // using the fileupload API. The data parameter accepts an object which
        // must have a files property and can contain additional options:
        // .fileupload('add', {files: filesList});
        add: function (data) {
            var that = this;
            if (!data || this.options.disabled) {
                return;
            }
            if (data.fileInput && !data.files) {
                this._getFileInputFiles(data.fileInput).always(function (files) {
                    data.files = files;
                    that._onAdd(null, data);
                });
            } else {
                data.files = $.makeArray(data.files);
                this._onAdd(null, data);
            }
        },

        // This method is exposed to the widget API and allows sending files
        // using the fileupload API. The data parameter accepts an object which
        // must have a files or fileInput property and can contain additional options:
        // .fileupload('send', {files: filesList});
        // The method returns a Promise object for the file upload call.
        send: function (data) {
            if (data && !this.options.disabled) {
                if (data.fileInput && !data.files) {
                    var that = this,
                        dfd = $.Deferred(),
                        promise = dfd.promise(),
                        jqXHR,
                        aborted;
                    promise.abort = function () {
                        aborted = true;
                        if (jqXHR) {
                            return jqXHR.abort();
                        }
                        dfd.reject(null, 'abort', 'abort');
                        return promise;
                    };
                    this._getFileInputFiles(data.fileInput).always(
                        function (files) {
                            if (aborted) {
                                return;
                            }
                            if (!files.length) {
                                dfd.reject();
                                return;
                            }
                            data.files = files;
                            jqXHR = that._onSend(null, data);
                            jqXHR.then(
                                function (result, textStatus, jqXHR) {
                                    dfd.resolve(result, textStatus, jqXHR);
                                },
                                function (jqXHR, textStatus, errorThrown) {
                                    dfd.reject(jqXHR, textStatus, errorThrown);
                                }
                            );
                        }
                    );
                    return this._enhancePromise(promise);
                }
                data.files = $.makeArray(data.files);
                if (data.files.length) {
                    return this._onSend(null, data);
                }
            }
            return this._getXHRPromise(false, data && data.context);
        }

    });

}));

/*
 * jQuery File Upload Processing Plugin
 * https://github.com/blueimp/jQuery-File-Upload
 *
 * Copyright 2012, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 */

/* jshint nomen:false */
/* global define, require, window */

;(function (factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        // Register as an anonymous AMD module:
        define([
            'jquery',
            './jquery.fileupload'
        ], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS:
        factory(
            require('jquery'),
            require('./jquery.fileupload')
        );
    } else {
        // Browser globals:
        factory(
            window.jQuery
        );
    }
}(function ($) {
    'use strict';

    var originalAdd = $.blueimp.fileupload.prototype.options.add;

    // The File Upload Processing plugin extends the fileupload widget
    // with file processing functionality:
    $.widget('blueimp.fileupload', $.blueimp.fileupload, {

        options: {
            // The list of processing actions:
            processQueue: [
                /*
                {
                    action: 'log',
                    type: 'debug'
                }
                */
            ],
            add: function (e, data) {
                var $this = $(this);
                data.process(function () {
                    return $this.fileupload('process', data);
                });
                originalAdd.call(this, e, data);
            }
        },

        processActions: {
            /*
            log: function (data, options) {
                console[options.type](
                    'Processing "' + data.files[data.index].name + '"'
                );
            }
            */
        },

        _processFile: function (data, originalData) {
            var that = this,
                dfd = $.Deferred().resolveWith(that, [data]),
                chain = dfd.promise();
            this._trigger('process', null, data);
            $.each(data.processQueue, function (i, settings) {
                var func = function (data) {
                    if (originalData.errorThrown) {
                        return $.Deferred()
                            .rejectWith(that, [originalData]).promise();
                    }
                    return that.processActions[settings.action].call(
                        that,
                        data,
                        settings
                    );
                };
                chain = chain.then(func, settings.always && func);
            });
            chain
                .done(function () {
                    that._trigger('processdone', null, data);
                    that._trigger('processalways', null, data);
                })
                .fail(function () {
                    that._trigger('processfail', null, data);
                    that._trigger('processalways', null, data);
                });
            return chain;
        },

        // Replaces the settings of each processQueue item that
        // are strings starting with an "@", using the remaining
        // substring as key for the option map,
        // e.g. "@autoUpload" is replaced with options.autoUpload:
        _transformProcessQueue: function (options) {
            var processQueue = [];
            $.each(options.processQueue, function () {
                var settings = {},
                    action = this.action,
                    prefix = this.prefix === true ? action : this.prefix;
                $.each(this, function (key, value) {
                    if ($.type(value) === 'string' &&
                        value.charAt(0) === '@') {
                        settings[key] = options[
                        value.slice(1) || (prefix ? prefix +
                            key.charAt(0).toUpperCase() + key.slice(1) : key)
                            ];
                    } else {
                        settings[key] = value;
                    }

                });
                processQueue.push(settings);
            });
            options.processQueue = processQueue;
        },

        // Returns the number of files currently in the processsing queue:
        processing: function () {
            return this._processing;
        },

        // Processes the files given as files property of the data parameter,
        // returns a Promise object that allows to bind callbacks:
        process: function (data) {
            var that = this,
                options = $.extend({}, this.options, data);
            if (options.processQueue && options.processQueue.length) {
                this._transformProcessQueue(options);
                if (this._processing === 0) {
                    this._trigger('processstart');
                }
                $.each(data.files, function (index) {
                    var opts = index ? $.extend({}, options) : options,
                        func = function () {
                            if (data.errorThrown) {
                                return $.Deferred()
                                    .rejectWith(that, [data]).promise();
                            }
                            return that._processFile(opts, data);
                        };
                    opts.index = index;
                    that._processing += 1;
                    that._processingQueue = that._processingQueue.then(func, func)
                        .always(function () {
                            that._processing -= 1;
                            if (that._processing === 0) {
                                that._trigger('processstop');
                            }
                        });
                });
            }
            return this._processingQueue;
        },

        _create: function () {
            this._super();
            this._processing = 0;
            this._processingQueue = $.Deferred().resolveWith(this)
                .promise();
        }

    });

}));

/*
 * jQuery File Upload Validation Plugin
 * https://github.com/blueimp/jQuery-File-Upload
 *
 * Copyright 2013, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 */

/* global define, require, window */

;(function (factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        // Register as an anonymous AMD module:
        define([
            'jquery',
            './jquery.fileupload-process'
        ], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS:
        factory(
            require('jquery'),
            require('./jquery.fileupload-process')
        );
    } else {
        // Browser globals:
        factory(
            window.jQuery
        );
    }
}(function ($) {
    'use strict';

    // Append to the default processQueue:
    $.blueimp.fileupload.prototype.options.processQueue.push(
        {
            action: 'validate',
            // Always trigger this action,
            // even if the previous action was rejected:
            always: true,
            // Options taken from the global options map:
            acceptFileTypes: '@',
            maxFileSize: '@',
            minFileSize: '@',
            maxNumberOfFiles: '@',
            disabled: '@disableValidation'
        }
    );

    // The File Upload Validation plugin extends the fileupload widget
    // with file validation functionality:
    $.widget('blueimp.fileupload', $.blueimp.fileupload, {

        options: {
            /*
            // The regular expression for allowed file types, matches
            // against either file type or file name:
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
            // The maximum allowed file size in bytes:
            maxFileSize: 10000000, // 10 MB
            // The minimum allowed file size in bytes:
            minFileSize: undefined, // No minimal file size
            // The limit of files to be uploaded:
            maxNumberOfFiles: 10,
            */

            // Function returning the current number of files,
            // has to be overriden for maxNumberOfFiles validation:
            getNumberOfFiles: $.noop,

            // Error and info messages:
            messages: {
                maxNumberOfFiles: 'Maximum number of files exceeded',
                acceptFileTypes: 'File type not allowed',
                maxFileSize: 'File is too large',
                minFileSize: 'File is too small'
            }
        },

        processActions: {

            validate: function (data, options) {
                if (options.disabled) {
                    return data;
                }
                var dfd = $.Deferred(),
                    settings = this.options,
                    file = data.files[data.index],
                    fileSize;
                if (options.minFileSize || options.maxFileSize) {
                    fileSize = file.size;
                }
                if ($.type(options.maxNumberOfFiles) === 'number' &&
                    (settings.getNumberOfFiles() || 0) + data.files.length >
                    options.maxNumberOfFiles) {
                    file.error = settings.i18n('maxNumberOfFiles');
                } else if (options.acceptFileTypes &&
                    !(options.acceptFileTypes.test(file.type) ||
                        options.acceptFileTypes.test(file.name))) {
                    file.error = settings.i18n('acceptFileTypes');
                } else if (fileSize > options.maxFileSize) {
                    file.error = settings.i18n('maxFileSize');
                } else if ($.type(fileSize) === 'number' &&
                    fileSize < options.minFileSize) {
                    file.error = settings.i18n('minFileSize');
                } else {
                    delete file.error;
                }
                if (file.error || data.files.error) {
                    data.files.error = true;
                    dfd.rejectWith(this, [data]);
                } else {
                    dfd.resolveWith(this, [data]);
                }
                return dfd.promise();
            }

        }

    });

}));

// ==================================================
// fancyBox v3.5.7
//
// Licensed GPLv3 for open source use
// or fancyBox Commercial License for commercial use
//
// http://fancyapps.com/fancybox/
// Copyright 2019 fancyApps
//
// ==================================================
!function (t, e, n, o) {
    "use strict";

    function i(t, e) {
        var o, i, a, s = [], r = 0;
        t && t.isDefaultPrevented() || (t.preventDefault(), e = e || {}, t && t.data && (e = h(t.data.options, e)), o = e.$target || n(t.currentTarget).trigger("blur"), (a = n.fancybox.getInstance()) && a.$trigger && a.$trigger.is(o) || (e.selector ? s = n(e.selector) : (i = o.attr("data-fancybox") || "", i ? (s = t.data ? t.data.items : [], s = s.length ? s.filter('[data-fancybox="' + i + '"]') : n('[data-fancybox="' + i + '"]')) : s = [o]), r = n(s).index(o), r < 0 && (r = 0), a = n.fancybox.open(s, e, r), a.$trigger = o))
    }

    if (t.console = t.console || {
        info: function (t) {
        }
    }, n) {
        if (n.fn.fancybox) return void console.info("fancyBox already initialized");
        var a = {
            closeExisting: !1,
            loop: !1,
            gutter: 50,
            keyboard: !0,
            preventCaptionOverlap: !0,
            arrows: !0,
            infobar: !0,
            smallBtn: "auto",
            toolbar: "auto",
            buttons: ["zoom", "slideShow", "thumbs", "close"],
            idleTime: 3,
            protect: !1,
            modal: !1,
            image: {preload: !1},
            ajax: {settings: {data: {fancybox: !0}}},
            iframe: {
                tpl: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen="allowfullscreen" allow="autoplay; fullscreen" src=""></iframe>',
                preload: !0,
                css: {},
                attr: {scrolling: "auto"}
            },
            video: {
                tpl: '<video class="fancybox-video" controls controlsList="nodownload" poster="{{poster}}"><source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos, <a href="{{src}}">download</a> and watch with your favorite video player!</video>',
                format: "",
                autoStart: !0
            },
            defaultType: "image",
            animationEffect: "zoom",
            animationDuration: 366,
            zoomOpacity: "auto",
            transitionEffect: "fade",
            transitionDuration: 366,
            slideClass: "",
            baseClass: "",
            baseTpl: '<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"><div class="fancybox-caption__body"></div></div></div></div>',
            spinnerTpl: '<div class="fancybox-loading"></div>',
            errorTpl: '<div class="fancybox-error"><p>{{ERROR}}</p></div>',
            btnTpl: {
                download: '<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',
                zoom: '<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',
                close: '<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',
                arrowLeft: '<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',
                arrowRight: '<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',
                smallBtn: '<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>'
            },
            parentEl: "body",
            hideScrollbar: !0,
            autoFocus: !0,
            backFocus: !0,
            trapFocus: !0,
            fullScreen: {autoStart: !1},
            touch: {vertical: !0, momentum: !0},
            hash: null,
            media: {},
            slideShow: {autoStart: !1, speed: 3e3},
            thumbs: {autoStart: !1, hideOnClose: !0, parentEl: ".fancybox-container", axis: "y"},
            wheel: "auto",
            onInit: n.noop,
            beforeLoad: n.noop,
            afterLoad: n.noop,
            beforeShow: n.noop,
            afterShow: n.noop,
            beforeClose: n.noop,
            afterClose: n.noop,
            onActivate: n.noop,
            onDeactivate: n.noop,
            clickContent: function (t, e) {
                return "image" === t.type && "zoom"
            },
            clickSlide: "close",
            clickOutside: "close",
            dblclickContent: !1,
            dblclickSlide: !1,
            dblclickOutside: !1,
            mobile: {
                preventCaptionOverlap: !1, idleTime: !1, clickContent: function (t, e) {
                    return "image" === t.type && "toggleControls"
                }, clickSlide: function (t, e) {
                    return "image" === t.type ? "toggleControls" : "close"
                }, dblclickContent: function (t, e) {
                    return "image" === t.type && "zoom"
                }, dblclickSlide: function (t, e) {
                    return "image" === t.type && "zoom"
                }
            },
            lang: "en",
            i18n: {
                en: {
                    CLOSE: "Close",
                    NEXT: "Next",
                    PREV: "Previous",
                    ERROR: "The requested content cannot be loaded. <br/> Please try again later.",
                    PLAY_START: "Start slideshow",
                    PLAY_STOP: "Pause slideshow",
                    FULL_SCREEN: "Full screen",
                    THUMBS: "Thumbnails",
                    DOWNLOAD: "Download",
                    SHARE: "Share",
                    ZOOM: "Zoom"
                },
                de: {
                    CLOSE: "Schlie&szlig;en",
                    NEXT: "Weiter",
                    PREV: "Zur&uuml;ck",
                    ERROR: "Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es sp&auml;ter nochmal.",
                    PLAY_START: "Diaschau starten",
                    PLAY_STOP: "Diaschau beenden",
                    FULL_SCREEN: "Vollbild",
                    THUMBS: "Vorschaubilder",
                    DOWNLOAD: "Herunterladen",
                    SHARE: "Teilen",
                    ZOOM: "Vergr&ouml;&szlig;ern"
                }
            }
        }, s = n(t), r = n(e), c = 0, l = function (t) {
            return t && t.hasOwnProperty && t instanceof n
        }, d = function () {
            return t.requestAnimationFrame || t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || t.oRequestAnimationFrame || function (e) {
                return t.setTimeout(e, 1e3 / 60)
            }
        }(), u = function () {
            return t.cancelAnimationFrame || t.webkitCancelAnimationFrame || t.mozCancelAnimationFrame || t.oCancelAnimationFrame || function (e) {
                t.clearTimeout(e)
            }
        }(), f = function () {
            var t, n = e.createElement("fakeelement"), o = {
                transition: "transitionend",
                OTransition: "oTransitionEnd",
                MozTransition: "transitionend",
                WebkitTransition: "webkitTransitionEnd"
            };
            for (t in o) if (void 0 !== n.style[t]) return o[t];
            return "transitionend"
        }(), p = function (t) {
            return t && t.length && t[0].offsetHeight
        }, h = function (t, e) {
            var o = n.extend(!0, {}, t, e);
            return n.each(e, function (t, e) {
                n.isArray(e) && (o[t] = e)
            }), o
        }, g = function (t) {
            var o, i;
            return !(!t || t.ownerDocument !== e) && (n(".fancybox-container").css("pointer-events", "none"), o = {
                x: t.getBoundingClientRect().left + t.offsetWidth / 2,
                y: t.getBoundingClientRect().top + t.offsetHeight / 2
            }, i = e.elementFromPoint(o.x, o.y) === t, n(".fancybox-container").css("pointer-events", ""), i)
        }, b = function (t, e, o) {
            var i = this;
            i.opts = h({index: o}, n.fancybox.defaults), n.isPlainObject(e) && (i.opts = h(i.opts, e)), n.fancybox.isMobile && (i.opts = h(i.opts, i.opts.mobile)), i.id = i.opts.id || ++c, i.currIndex = parseInt(i.opts.index, 10) || 0, i.prevIndex = null, i.prevPos = null, i.currPos = 0, i.firstRun = !0, i.group = [], i.slides = {}, i.addContent(t), i.group.length && i.init()
        };
        n.extend(b.prototype, {
            init: function () {
                var o, i, a = this, s = a.group[a.currIndex], r = s.opts;
                r.closeExisting && n.fancybox.close(!0), n("body").addClass("fancybox-active"), !n.fancybox.getInstance() && !1 !== r.hideScrollbar && !n.fancybox.isMobile && e.body.scrollHeight > t.innerHeight && (n("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:' + (t.innerWidth - e.documentElement.clientWidth) + "px;}</style>"), n("body").addClass("compensate-for-scrollbar")), i = "", n.each(r.buttons, function (t, e) {
                    i += r.btnTpl[e] || ""
                }), o = n(a.translate(a, r.baseTpl.replace("{{buttons}}", i).replace("{{arrows}}", r.btnTpl.arrowLeft + r.btnTpl.arrowRight))).attr("id", "fancybox-container-" + a.id).addClass(r.baseClass).data("FancyBox", a).appendTo(r.parentEl), a.$refs = {container: o}, ["bg", "inner", "infobar", "toolbar", "stage", "caption", "navigation"].forEach(function (t) {
                    a.$refs[t] = o.find(".fancybox-" + t)
                }), a.trigger("onInit"), a.activate(), a.jumpTo(a.currIndex)
            }, translate: function (t, e) {
                var n = t.opts.i18n[t.opts.lang] || t.opts.i18n.en;
                return e.replace(/\{\{(\w+)\}\}/g, function (t, e) {
                    return void 0 === n[e] ? t : n[e]
                })
            }, addContent: function (t) {
                var e, o = this, i = n.makeArray(t);
                n.each(i, function (t, e) {
                    var i, a, s, r, c, l = {}, d = {};
                    n.isPlainObject(e) ? (l = e, d = e.opts || e) : "object" === n.type(e) && n(e).length ? (i = n(e), d = i.data() || {}, d = n.extend(!0, {}, d, d.options), d.$orig = i, l.src = o.opts.src || d.src || i.attr("href"), l.type || l.src || (l.type = "inline", l.src = e)) : l = {
                        type: "html",
                        src: e + ""
                    }, l.opts = n.extend(!0, {}, o.opts, d), n.isArray(d.buttons) && (l.opts.buttons = d.buttons), n.fancybox.isMobile && l.opts.mobile && (l.opts = h(l.opts, l.opts.mobile)), a = l.type || l.opts.type, r = l.src || "", !a && r && ((s = r.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i)) ? (a = "video", l.opts.video.format || (l.opts.video.format = "video/" + ("ogv" === s[1] ? "ogg" : s[1]))) : r.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i) ? a = "image" : r.match(/\.(pdf)((\?|#).*)?$/i) ? (a = "iframe", l = n.extend(!0, l, {
                        contentType: "pdf",
                        opts: {iframe: {preload: !1}}
                    })) : "#" === r.charAt(0) && (a = "inline")), a ? l.type = a : o.trigger("objectNeedsType", l), l.contentType || (l.contentType = n.inArray(l.type, ["html", "inline", "ajax"]) > -1 ? "html" : l.type), l.index = o.group.length, "auto" == l.opts.smallBtn && (l.opts.smallBtn = n.inArray(l.type, ["html", "inline", "ajax"]) > -1), "auto" === l.opts.toolbar && (l.opts.toolbar = !l.opts.smallBtn), l.$thumb = l.opts.$thumb || null, l.opts.$trigger && l.index === o.opts.index && (l.$thumb = l.opts.$trigger.find("img:first"), l.$thumb.length && (l.opts.$orig = l.opts.$trigger)), l.$thumb && l.$thumb.length || !l.opts.$orig || (l.$thumb = l.opts.$orig.find("img:first")), l.$thumb && !l.$thumb.length && (l.$thumb = null), l.thumb = l.opts.thumb || (l.$thumb ? l.$thumb[0].src : null), "function" === n.type(l.opts.caption) && (l.opts.caption = l.opts.caption.apply(e, [o, l])), "function" === n.type(o.opts.caption) && (l.opts.caption = o.opts.caption.apply(e, [o, l])), l.opts.caption instanceof n || (l.opts.caption = void 0 === l.opts.caption ? "" : l.opts.caption + ""), "ajax" === l.type && (c = r.split(/\s+/, 2), c.length > 1 && (l.src = c.shift(), l.opts.filter = c.shift())), l.opts.modal && (l.opts = n.extend(!0, l.opts, {
                        trapFocus: !0,
                        infobar: 0,
                        toolbar: 0,
                        smallBtn: 0,
                        keyboard: 0,
                        slideShow: 0,
                        fullScreen: 0,
                        thumbs: 0,
                        touch: 0,
                        clickContent: !1,
                        clickSlide: !1,
                        clickOutside: !1,
                        dblclickContent: !1,
                        dblclickSlide: !1,
                        dblclickOutside: !1
                    })), o.group.push(l)
                }), Object.keys(o.slides).length && (o.updateControls(), (e = o.Thumbs) && e.isActive && (e.create(), e.focus()))
            }, addEvents: function () {
                var e = this;
                e.removeEvents(), e.$refs.container.on("click.fb-close", "[data-fancybox-close]", function (t) {
                    t.stopPropagation(), t.preventDefault(), e.close(t)
                }).on("touchstart.fb-prev click.fb-prev", "[data-fancybox-prev]", function (t) {
                    t.stopPropagation(), t.preventDefault(), e.previous()
                }).on("touchstart.fb-next click.fb-next", "[data-fancybox-next]", function (t) {
                    t.stopPropagation(), t.preventDefault(), e.next()
                }).on("click.fb", "[data-fancybox-zoom]", function (t) {
                    e[e.isScaledDown() ? "scaleToActual" : "scaleToFit"]()
                }), s.on("orientationchange.fb resize.fb", function (t) {
                    t && t.originalEvent && "resize" === t.originalEvent.type ? (e.requestId && u(e.requestId), e.requestId = d(function () {
                        e.update(t)
                    })) : (e.current && "iframe" === e.current.type && e.$refs.stage.hide(), setTimeout(function () {
                        e.$refs.stage.show(), e.update(t)
                    }, n.fancybox.isMobile ? 600 : 250))
                }), r.on("keydown.fb", function (t) {
                    var o = n.fancybox ? n.fancybox.getInstance() : null, i = o.current, a = t.keyCode || t.which;
                    if (9 == a) return void (i.opts.trapFocus && e.focus(t));
                    if (!(!i.opts.keyboard || t.ctrlKey || t.altKey || t.shiftKey || n(t.target).is("input,textarea,video,audio,select"))) return 8 === a || 27 === a ? (t.preventDefault(), void e.close(t)) : 37 === a || 38 === a ? (t.preventDefault(), void e.previous()) : 39 === a || 40 === a ? (t.preventDefault(), void e.next()) : void e.trigger("afterKeydown", t, a)
                }), e.group[e.currIndex].opts.idleTime && (e.idleSecondsCounter = 0, r.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle", function (t) {
                    e.idleSecondsCounter = 0, e.isIdle && e.showControls(), e.isIdle = !1
                }), e.idleInterval = t.setInterval(function () {
                    ++e.idleSecondsCounter >= e.group[e.currIndex].opts.idleTime && !e.isDragging && (e.isIdle = !0, e.idleSecondsCounter = 0, e.hideControls())
                }, 1e3))
            }, removeEvents: function () {
                var e = this;
                s.off("orientationchange.fb resize.fb"), r.off("keydown.fb .fb-idle"), this.$refs.container.off(".fb-close .fb-prev .fb-next"), e.idleInterval && (t.clearInterval(e.idleInterval), e.idleInterval = null)
            }, previous: function (t) {
                return this.jumpTo(this.currPos - 1, t)
            }, next: function (t) {
                return this.jumpTo(this.currPos + 1, t)
            }, jumpTo: function (t, e) {
                var o, i, a, s, r, c, l, d, u, f = this, h = f.group.length;
                if (!(f.isDragging || f.isClosing || f.isAnimating && f.firstRun)) {
                    if (t = parseInt(t, 10), !(a = f.current ? f.current.opts.loop : f.opts.loop) && (t < 0 || t >= h)) return !1;
                    if (o = f.firstRun = !Object.keys(f.slides).length, r = f.current, f.prevIndex = f.currIndex, f.prevPos = f.currPos, s = f.createSlide(t), h > 1 && ((a || s.index < h - 1) && f.createSlide(t + 1), (a || s.index > 0) && f.createSlide(t - 1)), f.current = s, f.currIndex = s.index, f.currPos = s.pos, f.trigger("beforeShow", o), f.updateControls(), s.forcedDuration = void 0, n.isNumeric(e) ? s.forcedDuration = e : e = s.opts[o ? "animationDuration" : "transitionDuration"], e = parseInt(e, 10), i = f.isMoved(s), s.$slide.addClass("fancybox-slide--current"), o) return s.opts.animationEffect && e && f.$refs.container.css("transition-duration", e + "ms"), f.$refs.container.addClass("fancybox-is-open").trigger("focus"), f.loadSlide(s), void f.preload("image");
                    c = n.fancybox.getTranslate(r.$slide), l = n.fancybox.getTranslate(f.$refs.stage), n.each(f.slides, function (t, e) {
                        n.fancybox.stop(e.$slide, !0)
                    }), r.pos !== s.pos && (r.isComplete = !1), r.$slide.removeClass("fancybox-slide--complete fancybox-slide--current"), i ? (u = c.left - (r.pos * c.width + r.pos * r.opts.gutter), n.each(f.slides, function (t, o) {
                        o.$slide.removeClass("fancybox-animated").removeClass(function (t, e) {
                            return (e.match(/(^|\s)fancybox-fx-\S+/g) || []).join(" ")
                        });
                        var i = o.pos * c.width + o.pos * o.opts.gutter;
                        n.fancybox.setTranslate(o.$slide, {
                            top: 0,
                            left: i - l.left + u
                        }), o.pos !== s.pos && o.$slide.addClass("fancybox-slide--" + (o.pos > s.pos ? "next" : "previous")), p(o.$slide), n.fancybox.animate(o.$slide, {
                            top: 0,
                            left: (o.pos - s.pos) * c.width + (o.pos - s.pos) * o.opts.gutter
                        }, e, function () {
                            o.$slide.css({
                                transform: "",
                                opacity: ""
                            }).removeClass("fancybox-slide--next fancybox-slide--previous"), o.pos === f.currPos && f.complete()
                        })
                    })) : e && s.opts.transitionEffect && (d = "fancybox-animated fancybox-fx-" + s.opts.transitionEffect, r.$slide.addClass("fancybox-slide--" + (r.pos > s.pos ? "next" : "previous")), n.fancybox.animate(r.$slide, d, e, function () {
                        r.$slide.removeClass(d).removeClass("fancybox-slide--next fancybox-slide--previous")
                    }, !1)), s.isLoaded ? f.revealContent(s) : f.loadSlide(s), f.preload("image")
                }
            }, createSlide: function (t) {
                var e, o, i = this;
                return o = t % i.group.length, o = o < 0 ? i.group.length + o : o, !i.slides[t] && i.group[o] && (e = n('<div class="fancybox-slide"></div>').appendTo(i.$refs.stage), i.slides[t] = n.extend(!0, {}, i.group[o], {
                    pos: t,
                    $slide: e,
                    isLoaded: !1
                }), i.updateSlide(i.slides[t])), i.slides[t]
            }, scaleToActual: function (t, e, o) {
                var i, a, s, r, c, l = this, d = l.current, u = d.$content, f = n.fancybox.getTranslate(d.$slide).width,
                    p = n.fancybox.getTranslate(d.$slide).height, h = d.width, g = d.height;
                l.isAnimating || l.isMoved() || !u || "image" != d.type || !d.isLoaded || d.hasError || (l.isAnimating = !0, n.fancybox.stop(u), t = void 0 === t ? .5 * f : t, e = void 0 === e ? .5 * p : e, i = n.fancybox.getTranslate(u), i.top -= n.fancybox.getTranslate(d.$slide).top, i.left -= n.fancybox.getTranslate(d.$slide).left, r = h / i.width, c = g / i.height, a = .5 * f - .5 * h, s = .5 * p - .5 * g, h > f && (a = i.left * r - (t * r - t), a > 0 && (a = 0), a < f - h && (a = f - h)), g > p && (s = i.top * c - (e * c - e), s > 0 && (s = 0), s < p - g && (s = p - g)), l.updateCursor(h, g), n.fancybox.animate(u, {
                    top: s,
                    left: a,
                    scaleX: r,
                    scaleY: c
                }, o || 366, function () {
                    l.isAnimating = !1
                }), l.SlideShow && l.SlideShow.isActive && l.SlideShow.stop())
            }, scaleToFit: function (t) {
                var e, o = this, i = o.current, a = i.$content;
                o.isAnimating || o.isMoved() || !a || "image" != i.type || !i.isLoaded || i.hasError || (o.isAnimating = !0, n.fancybox.stop(a), e = o.getFitPos(i), o.updateCursor(e.width, e.height), n.fancybox.animate(a, {
                    top: e.top,
                    left: e.left,
                    scaleX: e.width / a.width(),
                    scaleY: e.height / a.height()
                }, t || 366, function () {
                    o.isAnimating = !1
                }))
            }, getFitPos: function (t) {
                var e, o, i, a, s = this, r = t.$content, c = t.$slide, l = t.width || t.opts.width,
                    d = t.height || t.opts.height, u = {};
                return !!(t.isLoaded && r && r.length) && (e = n.fancybox.getTranslate(s.$refs.stage).width, o = n.fancybox.getTranslate(s.$refs.stage).height, e -= parseFloat(c.css("paddingLeft")) + parseFloat(c.css("paddingRight")) + parseFloat(r.css("marginLeft")) + parseFloat(r.css("marginRight")), o -= parseFloat(c.css("paddingTop")) + parseFloat(c.css("paddingBottom")) + parseFloat(r.css("marginTop")) + parseFloat(r.css("marginBottom")), l && d || (l = e, d = o), i = Math.min(1, e / l, o / d), l *= i, d *= i, l > e - .5 && (l = e), d > o - .5 && (d = o), "image" === t.type ? (u.top = Math.floor(.5 * (o - d)) + parseFloat(c.css("paddingTop")), u.left = Math.floor(.5 * (e - l)) + parseFloat(c.css("paddingLeft"))) : "video" === t.contentType && (a = t.opts.width && t.opts.height ? l / d : t.opts.ratio || 16 / 9, d > l / a ? d = l / a : l > d * a && (l = d * a)), u.width = l, u.height = d, u)
            }, update: function (t) {
                var e = this;
                n.each(e.slides, function (n, o) {
                    e.updateSlide(o, t)
                })
            }, updateSlide: function (t, e) {
                var o = this, i = t && t.$content, a = t.width || t.opts.width, s = t.height || t.opts.height,
                    r = t.$slide;
                o.adjustCaption(t), i && (a || s || "video" === t.contentType) && !t.hasError && (n.fancybox.stop(i), n.fancybox.setTranslate(i, o.getFitPos(t)), t.pos === o.currPos && (o.isAnimating = !1, o.updateCursor())), o.adjustLayout(t), r.length && (r.trigger("refresh"), t.pos === o.currPos && o.$refs.toolbar.add(o.$refs.navigation.find(".fancybox-button--arrow_right")).toggleClass("compensate-for-scrollbar", r.get(0).scrollHeight > r.get(0).clientHeight)), o.trigger("onUpdate", t, e)
            }, centerSlide: function (t) {
                var e = this, o = e.current, i = o.$slide;
                !e.isClosing && o && (i.siblings().css({
                    transform: "",
                    opacity: ""
                }), i.parent().children().removeClass("fancybox-slide--previous fancybox-slide--next"), n.fancybox.animate(i, {
                    top: 0,
                    left: 0,
                    opacity: 1
                }, void 0 === t ? 0 : t, function () {
                    i.css({transform: "", opacity: ""}), o.isComplete || e.complete()
                }, !1))
            }, isMoved: function (t) {
                var e, o, i = t || this.current;
                return !!i && (o = n.fancybox.getTranslate(this.$refs.stage), e = n.fancybox.getTranslate(i.$slide), !i.$slide.hasClass("fancybox-animated") && (Math.abs(e.top - o.top) > .5 || Math.abs(e.left - o.left) > .5))
            }, updateCursor: function (t, e) {
                var o, i, a = this, s = a.current, r = a.$refs.container;
                s && !a.isClosing && a.Guestures && (r.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"), o = a.canPan(t, e), i = !!o || a.isZoomable(), r.toggleClass("fancybox-is-zoomable", i), n("[data-fancybox-zoom]").prop("disabled", !i), o ? r.addClass("fancybox-can-pan") : i && ("zoom" === s.opts.clickContent || n.isFunction(s.opts.clickContent) && "zoom" == s.opts.clickContent(s)) ? r.addClass("fancybox-can-zoomIn") : s.opts.touch && (s.opts.touch.vertical || a.group.length > 1) && "video" !== s.contentType && r.addClass("fancybox-can-swipe"))
            }, isZoomable: function () {
                var t, e = this, n = e.current;
                if (n && !e.isClosing && "image" === n.type && !n.hasError) {
                    if (!n.isLoaded) return !0;
                    if ((t = e.getFitPos(n)) && (n.width > t.width || n.height > t.height)) return !0
                }
                return !1
            }, isScaledDown: function (t, e) {
                var o = this, i = !1, a = o.current, s = a.$content;
                return void 0 !== t && void 0 !== e ? i = t < a.width && e < a.height : s && (i = n.fancybox.getTranslate(s), i = i.width < a.width && i.height < a.height), i
            }, canPan: function (t, e) {
                var o = this, i = o.current, a = null, s = !1;
                return "image" === i.type && (i.isComplete || t && e) && !i.hasError && (s = o.getFitPos(i), void 0 !== t && void 0 !== e ? a = {
                    width: t,
                    height: e
                } : i.isComplete && (a = n.fancybox.getTranslate(i.$content)), a && s && (s = Math.abs(a.width - s.width) > 1.5 || Math.abs(a.height - s.height) > 1.5)), s
            }, loadSlide: function (t) {
                var e, o, i, a = this;
                if (!t.isLoading && !t.isLoaded) {
                    if (t.isLoading = !0, !1 === a.trigger("beforeLoad", t)) return t.isLoading = !1, !1;
                    switch (e = t.type, o = t.$slide, o.off("refresh").trigger("onReset").addClass(t.opts.slideClass), e) {
                        case"image":
                            a.setImage(t);
                            break;
                        case"iframe":
                            a.setIframe(t);
                            break;
                        case"html":
                            a.setContent(t, t.src || t.content);
                            break;
                        case"video":
                            a.setContent(t, t.opts.video.tpl.replace(/\{\{src\}\}/gi, t.src).replace("{{format}}", t.opts.videoFormat || t.opts.video.format || "").replace("{{poster}}", t.thumb || ""));
                            break;
                        case"inline":
                            n(t.src).length ? a.setContent(t, n(t.src)) : a.setError(t);
                            break;
                        case"ajax":
                            a.showLoading(t), i = n.ajax(n.extend({}, t.opts.ajax.settings, {
                                url: t.src,
                                success: function (e, n) {
                                    "success" === n && a.setContent(t, e)
                                },
                                error: function (e, n) {
                                    e && "abort" !== n && a.setError(t)
                                }
                            })), o.one("onReset", function () {
                                i.abort()
                            });
                            break;
                        default:
                            a.setError(t)
                    }
                    return !0
                }
            }, setImage: function (t) {
                var o, i = this;
                setTimeout(function () {
                    var e = t.$image;
                    i.isClosing || !t.isLoading || e && e.length && e[0].complete || t.hasError || i.showLoading(t)
                }, 50), i.checkSrcset(t), t.$content = n('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(t.$slide.addClass("fancybox-slide--image")), !1 !== t.opts.preload && t.opts.width && t.opts.height && t.thumb && (t.width = t.opts.width, t.height = t.opts.height, o = e.createElement("img"), o.onerror = function () {
                    n(this).remove(), t.$ghost = null
                }, o.onload = function () {
                    i.afterLoad(t)
                }, t.$ghost = n(o).addClass("fancybox-image").appendTo(t.$content).attr("src", t.thumb)), i.setBigImage(t)
            }, checkSrcset: function (e) {
                var n, o, i, a, s = e.opts.srcset || e.opts.image.srcset;
                if (s) {
                    i = t.devicePixelRatio || 1, a = t.innerWidth * i, o = s.split(",").map(function (t) {
                        var e = {};
                        return t.trim().split(/\s+/).forEach(function (t, n) {
                            var o = parseInt(t.substring(0, t.length - 1), 10);
                            if (0 === n) return e.url = t;
                            o && (e.value = o, e.postfix = t[t.length - 1])
                        }), e
                    }), o.sort(function (t, e) {
                        return t.value - e.value
                    });
                    for (var r = 0; r < o.length; r++) {
                        var c = o[r];
                        if ("w" === c.postfix && c.value >= a || "x" === c.postfix && c.value >= i) {
                            n = c;
                            break
                        }
                    }
                    !n && o.length && (n = o[o.length - 1]), n && (e.src = n.url, e.width && e.height && "w" == n.postfix && (e.height = e.width / e.height * n.value, e.width = n.value), e.opts.srcset = s)
                }
            }, setBigImage: function (t) {
                var o = this, i = e.createElement("img"), a = n(i);
                t.$image = a.one("error", function () {
                    o.setError(t)
                }).one("load", function () {
                    var e;
                    t.$ghost || (o.resolveImageSlideSize(t, this.naturalWidth, this.naturalHeight), o.afterLoad(t)), o.isClosing || (t.opts.srcset && (e = t.opts.sizes, e && "auto" !== e || (e = (t.width / t.height > 1 && s.width() / s.height() > 1 ? "100" : Math.round(t.width / t.height * 100)) + "vw"), a.attr("sizes", e).attr("srcset", t.opts.srcset)), t.$ghost && setTimeout(function () {
                        t.$ghost && !o.isClosing && t.$ghost.hide()
                    }, Math.min(300, Math.max(1e3, t.height / 1600))), o.hideLoading(t))
                }).addClass("fancybox-image").attr("src", t.src).appendTo(t.$content), (i.complete || "complete" == i.readyState) && a.naturalWidth && a.naturalHeight ? a.trigger("load") : i.error && a.trigger("error")
            }, resolveImageSlideSize: function (t, e, n) {
                var o = parseInt(t.opts.width, 10), i = parseInt(t.opts.height, 10);
                t.width = e, t.height = n, o > 0 && (t.width = o, t.height = Math.floor(o * n / e)), i > 0 && (t.width = Math.floor(i * e / n), t.height = i)
            }, setIframe: function (t) {
                var e, o = this, i = t.opts.iframe, a = t.$slide;
                t.$content = n('<div class="fancybox-content' + (i.preload ? " fancybox-is-hidden" : "") + '"></div>').css(i.css).appendTo(a), a.addClass("fancybox-slide--" + t.contentType), t.$iframe = e = n(i.tpl.replace(/\{rnd\}/g, (new Date).getTime())).attr(i.attr).appendTo(t.$content), i.preload ? (o.showLoading(t), e.on("load.fb error.fb", function (e) {
                    this.isReady = 1, t.$slide.trigger("refresh"), o.afterLoad(t)
                }), a.on("refresh.fb", function () {
                    var n, o, s = t.$content, r = i.css.width, c = i.css.height;
                    if (1 === e[0].isReady) {
                        try {
                            n = e.contents(), o = n.find("body")
                        } catch (t) {
                        }
                        o && o.length && o.children().length && (a.css("overflow", "visible"), s.css({
                            width: "100%",
                            "max-width": "100%",
                            height: "9999px"
                        }), void 0 === r && (r = Math.ceil(Math.max(o[0].clientWidth, o.outerWidth(!0)))), s.css("width", r || "").css("max-width", ""), void 0 === c && (c = Math.ceil(Math.max(o[0].clientHeight, o.outerHeight(!0)))), s.css("height", c || ""), a.css("overflow", "auto")), s.removeClass("fancybox-is-hidden")
                    }
                })) : o.afterLoad(t), e.attr("src", t.src), a.one("onReset", function () {
                    try {
                        n(this).find("iframe").hide().unbind().attr("src", "//about:blank")
                    } catch (t) {
                    }
                    n(this).off("refresh.fb").empty(), t.isLoaded = !1, t.isRevealed = !1
                })
            }, setContent: function (t, e) {
                var o = this;
                o.isClosing || (o.hideLoading(t), t.$content && n.fancybox.stop(t.$content), t.$slide.empty(), l(e) && e.parent().length ? ((e.hasClass("fancybox-content") || e.parent().hasClass("fancybox-content")) && e.parents(".fancybox-slide").trigger("onReset"), t.$placeholder = n("<div>").hide().insertAfter(e), e.css("display", "inline-block")) : t.hasError || ("string" === n.type(e) && (e = n("<div>").append(n.trim(e)).contents()), t.opts.filter && (e = n("<div>").html(e).find(t.opts.filter))), t.$slide.one("onReset", function () {
                    n(this).find("video,audio").trigger("pause"), t.$placeholder && (t.$placeholder.after(e.removeClass("fancybox-content").hide()).remove(), t.$placeholder = null), t.$smallBtn && (t.$smallBtn.remove(), t.$smallBtn = null), t.hasError || (n(this).empty(), t.isLoaded = !1, t.isRevealed = !1)
                }), n(e).appendTo(t.$slide), n(e).is("video,audio") && (n(e).addClass("fancybox-video"), n(e).wrap("<div></div>"), t.contentType = "video", t.opts.width = t.opts.width || n(e).attr("width"), t.opts.height = t.opts.height || n(e).attr("height")), t.$content = t.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first(), t.$content.siblings().hide(), t.$content.length || (t.$content = t.$slide.wrapInner("<div></div>").children().first()), t.$content.addClass("fancybox-content"), t.$slide.addClass("fancybox-slide--" + t.contentType), o.afterLoad(t))
            }, setError: function (t) {
                t.hasError = !0, t.$slide.trigger("onReset").removeClass("fancybox-slide--" + t.contentType).addClass("fancybox-slide--error"), t.contentType = "html", this.setContent(t, this.translate(t, t.opts.errorTpl)), t.pos === this.currPos && (this.isAnimating = !1)
            }, showLoading: function (t) {
                var e = this;
                (t = t || e.current) && !t.$spinner && (t.$spinner = n(e.translate(e, e.opts.spinnerTpl)).appendTo(t.$slide).hide().fadeIn("fast"))
            }, hideLoading: function (t) {
                var e = this;
                (t = t || e.current) && t.$spinner && (t.$spinner.stop().remove(), delete t.$spinner)
            }, afterLoad: function (t) {
                var e = this;
                e.isClosing || (t.isLoading = !1, t.isLoaded = !0, e.trigger("afterLoad", t), e.hideLoading(t), !t.opts.smallBtn || t.$smallBtn && t.$smallBtn.length || (t.$smallBtn = n(e.translate(t, t.opts.btnTpl.smallBtn)).appendTo(t.$content)), t.opts.protect && t.$content && !t.hasError && (t.$content.on("contextmenu.fb", function (t) {
                    return 2 == t.button && t.preventDefault(), !0
                }), "image" === t.type && n('<div class="fancybox-spaceball"></div>').appendTo(t.$content)), e.adjustCaption(t), e.adjustLayout(t), t.pos === e.currPos && e.updateCursor(), e.revealContent(t))
            }, adjustCaption: function (t) {
                var e, n = this, o = t || n.current, i = o.opts.caption, a = o.opts.preventCaptionOverlap,
                    s = n.$refs.caption, r = !1;
                s.toggleClass("fancybox-caption--separate", a), a && i && i.length && (o.pos !== n.currPos ? (e = s.clone().appendTo(s.parent()), e.children().eq(0).empty().html(i), r = e.outerHeight(!0), e.empty().remove()) : n.$caption && (r = n.$caption.outerHeight(!0)), o.$slide.css("padding-bottom", r || ""))
            }, adjustLayout: function (t) {
                var e, n, o, i, a = this, s = t || a.current;
                s.isLoaded && !0 !== s.opts.disableLayoutFix && (s.$content.css("margin-bottom", ""), s.$content.outerHeight() > s.$slide.height() + .5 && (o = s.$slide[0].style["padding-bottom"], i = s.$slide.css("padding-bottom"), parseFloat(i) > 0 && (e = s.$slide[0].scrollHeight, s.$slide.css("padding-bottom", 0), Math.abs(e - s.$slide[0].scrollHeight) < 1 && (n = i), s.$slide.css("padding-bottom", o))), s.$content.css("margin-bottom", n))
            }, revealContent: function (t) {
                var e, o, i, a, s = this, r = t.$slide, c = !1, l = !1, d = s.isMoved(t), u = t.isRevealed;
                return t.isRevealed = !0, e = t.opts[s.firstRun ? "animationEffect" : "transitionEffect"], i = t.opts[s.firstRun ? "animationDuration" : "transitionDuration"], i = parseInt(void 0 === t.forcedDuration ? i : t.forcedDuration, 10), !d && t.pos === s.currPos && i || (e = !1), "zoom" === e && (t.pos === s.currPos && i && "image" === t.type && !t.hasError && (l = s.getThumbPos(t)) ? c = s.getFitPos(t) : e = "fade"), "zoom" === e ? (s.isAnimating = !0, c.scaleX = c.width / l.width, c.scaleY = c.height / l.height, a = t.opts.zoomOpacity, "auto" == a && (a = Math.abs(t.width / t.height - l.width / l.height) > .1), a && (l.opacity = .1, c.opacity = 1), n.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"), l), p(t.$content), void n.fancybox.animate(t.$content, c, i, function () {
                    s.isAnimating = !1, s.complete()
                })) : (s.updateSlide(t), e ? (n.fancybox.stop(r), o = "fancybox-slide--" + (t.pos >= s.prevPos ? "next" : "previous") + " fancybox-animated fancybox-fx-" + e, r.addClass(o).removeClass("fancybox-slide--current"), t.$content.removeClass("fancybox-is-hidden"), p(r), "image" !== t.type && t.$content.hide().show(0), void n.fancybox.animate(r, "fancybox-slide--current", i, function () {
                    r.removeClass(o).css({transform: "", opacity: ""}), t.pos === s.currPos && s.complete()
                }, !0)) : (t.$content.removeClass("fancybox-is-hidden"), u || !d || "image" !== t.type || t.hasError || t.$content.hide().fadeIn("fast"), void (t.pos === s.currPos && s.complete())))
            }, getThumbPos: function (t) {
                var e, o, i, a, s, r = !1, c = t.$thumb;
                return !(!c || !g(c[0])) && (e = n.fancybox.getTranslate(c), o = parseFloat(c.css("border-top-width") || 0), i = parseFloat(c.css("border-right-width") || 0), a = parseFloat(c.css("border-bottom-width") || 0), s = parseFloat(c.css("border-left-width") || 0), r = {
                    top: e.top + o,
                    left: e.left + s,
                    width: e.width - i - s,
                    height: e.height - o - a,
                    scaleX: 1,
                    scaleY: 1
                }, e.width > 0 && e.height > 0 && r)
            }, complete: function () {
                var t, e = this, o = e.current, i = {};
                !e.isMoved() && o.isLoaded && (o.isComplete || (o.isComplete = !0, o.$slide.siblings().trigger("onReset"), e.preload("inline"), p(o.$slide), o.$slide.addClass("fancybox-slide--complete"), n.each(e.slides, function (t, o) {
                    o.pos >= e.currPos - 1 && o.pos <= e.currPos + 1 ? i[o.pos] = o : o && (n.fancybox.stop(o.$slide), o.$slide.off().remove())
                }), e.slides = i), e.isAnimating = !1, e.updateCursor(), e.trigger("afterShow"), o.opts.video.autoStart && o.$slide.find("video,audio").filter(":visible:first").trigger("play").one("ended", function () {
                    Document.exitFullscreen ? Document.exitFullscreen() : this.webkitExitFullscreen && this.webkitExitFullscreen(), e.next()
                }), o.opts.autoFocus && "html" === o.contentType && (t = o.$content.find("input[autofocus]:enabled:visible:first"), t.length ? t.trigger("focus") : e.focus(null, !0)), o.$slide.scrollTop(0).scrollLeft(0))
            }, preload: function (t) {
                var e, n, o = this;
                o.group.length < 2 || (n = o.slides[o.currPos + 1], e = o.slides[o.currPos - 1], e && e.type === t && o.loadSlide(e), n && n.type === t && o.loadSlide(n))
            }, focus: function (t, o) {
                var i, a, s = this,
                    r = ["a[href]", "area[href]", 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', "select:not([disabled]):not([aria-hidden])", "textarea:not([disabled]):not([aria-hidden])", "button:not([disabled]):not([aria-hidden])", "iframe", "object", "embed", "video", "audio", "[contenteditable]", '[tabindex]:not([tabindex^="-"])'].join(",");
                s.isClosing || (i = !t && s.current && s.current.isComplete ? s.current.$slide.find("*:visible" + (o ? ":not(.fancybox-close-small)" : "")) : s.$refs.container.find("*:visible"), i = i.filter(r).filter(function () {
                    return "hidden" !== n(this).css("visibility") && !n(this).hasClass("disabled")
                }), i.length ? (a = i.index(e.activeElement), t && t.shiftKey ? (a < 0 || 0 == a) && (t.preventDefault(), i.eq(i.length - 1).trigger("focus")) : (a < 0 || a == i.length - 1) && (t && t.preventDefault(), i.eq(0).trigger("focus"))) : s.$refs.container.trigger("focus"))
            }, activate: function () {
                var t = this;
                n(".fancybox-container").each(function () {
                    var e = n(this).data("FancyBox");
                    e && e.id !== t.id && !e.isClosing && (e.trigger("onDeactivate"), e.removeEvents(), e.isVisible = !1)
                }), t.isVisible = !0, (t.current || t.isIdle) && (t.update(), t.updateControls()), t.trigger("onActivate"), t.addEvents()
            }, close: function (t, e) {
                var o, i, a, s, r, c, l, u = this, f = u.current, h = function () {
                    u.cleanUp(t)
                };
                return !u.isClosing && (u.isClosing = !0, !1 === u.trigger("beforeClose", t) ? (u.isClosing = !1, d(function () {
                    u.update()
                }), !1) : (u.removeEvents(), a = f.$content, o = f.opts.animationEffect, i = n.isNumeric(e) ? e : o ? f.opts.animationDuration : 0, f.$slide.removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"), !0 !== t ? n.fancybox.stop(f.$slide) : o = !1, f.$slide.siblings().trigger("onReset").remove(), i && u.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing").css("transition-duration", i + "ms"), u.hideLoading(f), u.hideControls(!0), u.updateCursor(), "zoom" !== o || a && i && "image" === f.type && !u.isMoved() && !f.hasError && (l = u.getThumbPos(f)) || (o = "fade"), "zoom" === o ? (n.fancybox.stop(a), s = n.fancybox.getTranslate(a), c = {
                    top: s.top,
                    left: s.left,
                    scaleX: s.width / l.width,
                    scaleY: s.height / l.height,
                    width: l.width,
                    height: l.height
                }, r = f.opts.zoomOpacity,
                "auto" == r && (r = Math.abs(f.width / f.height - l.width / l.height) > .1), r && (l.opacity = 0), n.fancybox.setTranslate(a, c), p(a), n.fancybox.animate(a, l, i, h), !0) : (o && i ? n.fancybox.animate(f.$slide.addClass("fancybox-slide--previous").removeClass("fancybox-slide--current"), "fancybox-animated fancybox-fx-" + o, i, h) : !0 === t ? setTimeout(h, i) : h(), !0)))
            }, cleanUp: function (e) {
                var o, i, a, s = this, r = s.current.opts.$orig;
                s.current.$slide.trigger("onReset"), s.$refs.container.empty().remove(), s.trigger("afterClose", e), s.current.opts.backFocus && (r && r.length && r.is(":visible") || (r = s.$trigger), r && r.length && (i = t.scrollX, a = t.scrollY, r.trigger("focus"), n("html, body").scrollTop(a).scrollLeft(i))), s.current = null, o = n.fancybox.getInstance(), o ? o.activate() : (n("body").removeClass("fancybox-active compensate-for-scrollbar"), n("#fancybox-style-noscroll").remove())
            }, trigger: function (t, e) {
                var o, i = Array.prototype.slice.call(arguments, 1), a = this, s = e && e.opts ? e : a.current;
                if (s ? i.unshift(s) : s = a, i.unshift(a), n.isFunction(s.opts[t]) && (o = s.opts[t].apply(s, i)), !1 === o) return o;
                "afterClose" !== t && a.$refs ? a.$refs.container.trigger(t + ".fb", i) : r.trigger(t + ".fb", i)
            }, updateControls: function () {
                var t = this, o = t.current, i = o.index, a = t.$refs.container, s = t.$refs.caption,
                    r = o.opts.caption;
                o.$slide.trigger("refresh"), r && r.length ? (t.$caption = s, s.children().eq(0).html(r)) : t.$caption = null, t.hasHiddenControls || t.isIdle || t.showControls(), a.find("[data-fancybox-count]").html(t.group.length), a.find("[data-fancybox-index]").html(i + 1), a.find("[data-fancybox-prev]").prop("disabled", !o.opts.loop && i <= 0), a.find("[data-fancybox-next]").prop("disabled", !o.opts.loop && i >= t.group.length - 1), "image" === o.type ? a.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href", o.opts.image.src || o.src).show() : o.opts.toolbar && a.find("[data-fancybox-download],[data-fancybox-zoom]").hide(), n(e.activeElement).is(":hidden,[disabled]") && t.$refs.container.trigger("focus")
            }, hideControls: function (t) {
                var e = this, n = ["infobar", "toolbar", "nav"];
                !t && e.current.opts.preventCaptionOverlap || n.push("caption"), this.$refs.container.removeClass(n.map(function (t) {
                    return "fancybox-show-" + t
                }).join(" ")), this.hasHiddenControls = !0
            }, showControls: function () {
                var t = this, e = t.current ? t.current.opts : t.opts, n = t.$refs.container;
                t.hasHiddenControls = !1, t.idleSecondsCounter = 0, n.toggleClass("fancybox-show-toolbar", !(!e.toolbar || !e.buttons)).toggleClass("fancybox-show-infobar", !!(e.infobar && t.group.length > 1)).toggleClass("fancybox-show-caption", !!t.$caption).toggleClass("fancybox-show-nav", !!(e.arrows && t.group.length > 1)).toggleClass("fancybox-is-modal", !!e.modal)
            }, toggleControls: function () {
                this.hasHiddenControls ? this.showControls() : this.hideControls()
            }
        }), n.fancybox = {
            version: "3.5.7",
            defaults: a,
            getInstance: function (t) {
                var e = n('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),
                    o = Array.prototype.slice.call(arguments, 1);
                return e instanceof b && ("string" === n.type(t) ? e[t].apply(e, o) : "function" === n.type(t) && t.apply(e, o), e)
            },
            open: function (t, e, n) {
                return new b(t, e, n)
            },
            close: function (t) {
                var e = this.getInstance();
                e && (e.close(), !0 === t && this.close(t))
            },
            destroy: function () {
                this.close(!0), r.add("body").off("click.fb-start", "**")
            },
            isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
            use3d: function () {
                var n = e.createElement("div");
                return t.getComputedStyle && t.getComputedStyle(n) && t.getComputedStyle(n).getPropertyValue("transform") && !(e.documentMode && e.documentMode < 11)
            }(),
            getTranslate: function (t) {
                var e;
                return !(!t || !t.length) && (e = t[0].getBoundingClientRect(), {
                    top: e.top || 0,
                    left: e.left || 0,
                    width: e.width,
                    height: e.height,
                    opacity: parseFloat(t.css("opacity"))
                })
            },
            setTranslate: function (t, e) {
                var n = "", o = {};
                if (t && e) return void 0 === e.left && void 0 === e.top || (n = (void 0 === e.left ? t.position().left : e.left) + "px, " + (void 0 === e.top ? t.position().top : e.top) + "px", n = this.use3d ? "translate3d(" + n + ", 0px)" : "translate(" + n + ")"), void 0 !== e.scaleX && void 0 !== e.scaleY ? n += " scale(" + e.scaleX + ", " + e.scaleY + ")" : void 0 !== e.scaleX && (n += " scaleX(" + e.scaleX + ")"), n.length && (o.transform = n), void 0 !== e.opacity && (o.opacity = e.opacity), void 0 !== e.width && (o.width = e.width), void 0 !== e.height && (o.height = e.height), t.css(o)
            },
            animate: function (t, e, o, i, a) {
                var s, r = this;
                n.isFunction(o) && (i = o, o = null), r.stop(t), s = r.getTranslate(t), t.on(f, function (c) {
                    (!c || !c.originalEvent || t.is(c.originalEvent.target) && "z-index" != c.originalEvent.propertyName) && (r.stop(t), n.isNumeric(o) && t.css("transition-duration", ""), n.isPlainObject(e) ? void 0 !== e.scaleX && void 0 !== e.scaleY && r.setTranslate(t, {
                        top: e.top,
                        left: e.left,
                        width: s.width * e.scaleX,
                        height: s.height * e.scaleY,
                        scaleX: 1,
                        scaleY: 1
                    }) : !0 !== a && t.removeClass(e), n.isFunction(i) && i(c))
                }), n.isNumeric(o) && t.css("transition-duration", o + "ms"), n.isPlainObject(e) ? (void 0 !== e.scaleX && void 0 !== e.scaleY && (delete e.width, delete e.height, t.parent().hasClass("fancybox-slide--image") && t.parent().addClass("fancybox-is-scaling")), n.fancybox.setTranslate(t, e)) : t.addClass(e), t.data("timer", setTimeout(function () {
                    t.trigger(f)
                }, o + 33))
            },
            stop: function (t, e) {
                t && t.length && (clearTimeout(t.data("timer")), e && t.trigger(f), t.off(f).css("transition-duration", ""), t.parent().removeClass("fancybox-is-scaling"))
            }
        }, n.fn.fancybox = function (t) {
            var e;
            return t = t || {}, e = t.selector || !1, e ? n("body").off("click.fb-start", e).on("click.fb-start", e, {options: t}, i) : this.off("click.fb-start").on("click.fb-start", {
                items: this,
                options: t
            }, i), this
        }, r.on("click.fb-start", "[data-fancybox]", i), r.on("click.fb-start", "[data-fancybox-trigger]", function (t) {
            n('[data-fancybox="' + n(this).attr("data-fancybox-trigger") + '"]').eq(n(this).attr("data-fancybox-index") || 0).trigger("click.fb-start", {$trigger: n(this)})
        }), function () {
            var t = null;
            r.on("mousedown mouseup focus blur", ".fancybox-button", function (e) {
                switch (e.type) {
                    case"mousedown":
                        t = n(this);
                        break;
                    case"mouseup":
                        t = null;
                        break;
                    case"focusin":
                        n(".fancybox-button").removeClass("fancybox-focus"), n(this).is(t) || n(this).is("[disabled]") || n(this).addClass("fancybox-focus");
                        break;
                    case"focusout":
                        n(".fancybox-button").removeClass("fancybox-focus")
                }
            })
        }()
    }
}(window, document, jQuery), function (t) {
    "use strict";
    var e = {
        youtube: {
            matcher: /(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,
            params: {autoplay: 1, autohide: 1, fs: 1, rel: 0, hd: 1, wmode: "transparent", enablejsapi: 1, html5: 1},
            paramPlace: 8,
            type: "iframe",
            url: "https://www.youtube-nocookie.com/embed/$4",
            thumb: "https://img.youtube.com/vi/$4/hqdefault.jpg"
        },
        vimeo: {
            matcher: /^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,
            params: {autoplay: 1, hd: 1, show_title: 1, show_byline: 1, show_portrait: 0, fullscreen: 1},
            paramPlace: 3,
            type: "iframe",
            url: "//player.vimeo.com/video/$2"
        },
        instagram: {
            matcher: /(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,
            type: "image",
            url: "//$1/p/$2/media/?size=l"
        },
        gmap_place: {
            matcher: /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,
            type: "iframe",
            url: function (t) {
                return "//maps.google." + t[2] + "/?ll=" + (t[9] ? t[9] + "&z=" + Math.floor(t[10]) + (t[12] ? t[12].replace(/^\//, "&") : "") : t[12] + "").replace(/\?/, "&") + "&output=" + (t[12] && t[12].indexOf("layer=c") > 0 ? "svembed" : "embed")
            }
        },
        gmap_search: {
            matcher: /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,
            type: "iframe",
            url: function (t) {
                return "//maps.google." + t[2] + "/maps?q=" + t[5].replace("query=", "q=").replace("api=1", "") + "&output=embed"
            }
        }
    }, n = function (e, n, o) {
        if (e) return o = o || "", "object" === t.type(o) && (o = t.param(o, !0)), t.each(n, function (t, n) {
            e = e.replace("$" + t, n || "")
        }), o.length && (e += (e.indexOf("?") > 0 ? "&" : "?") + o), e
    };
    t(document).on("objectNeedsType.fb", function (o, i, a) {
        var s, r, c, l, d, u, f, p = a.src || "", h = !1;
        s = t.extend(!0, {}, e, a.opts.media), t.each(s, function (e, o) {
            if (c = p.match(o.matcher)) {
                if (h = o.type, f = e, u = {}, o.paramPlace && c[o.paramPlace]) {
                    d = c[o.paramPlace], "?" == d[0] && (d = d.substring(1)), d = d.split("&");
                    for (var i = 0; i < d.length; ++i) {
                        var s = d[i].split("=", 2);
                        2 == s.length && (u[s[0]] = decodeURIComponent(s[1].replace(/\+/g, " ")))
                    }
                }
                return l = t.extend(!0, {}, o.params, a.opts[e], u), p = "function" === t.type(o.url) ? o.url.call(this, c, l, a) : n(o.url, c, l), r = "function" === t.type(o.thumb) ? o.thumb.call(this, c, l, a) : n(o.thumb, c), "youtube" === e ? p = p.replace(/&t=((\d+)m)?(\d+)s/, function (t, e, n, o) {
                    return "&start=" + ((n ? 60 * parseInt(n, 10) : 0) + parseInt(o, 10))
                }) : "vimeo" === e && (p = p.replace("&%23", "#")), !1
            }
        }), h ? (a.opts.thumb || a.opts.$thumb && a.opts.$thumb.length || (a.opts.thumb = r), "iframe" === h && (a.opts = t.extend(!0, a.opts, {
            iframe: {
                preload: !1,
                attr: {scrolling: "no"}
            }
        })), t.extend(a, {
            type: h,
            src: p,
            origSrc: a.src,
            contentSource: f,
            contentType: "image" === h ? "image" : "gmap_place" == f || "gmap_search" == f ? "map" : "video"
        })) : p && (a.type = a.opts.defaultType)
    });
    var o = {
        youtube: {src: "https://www.youtube.com/iframe_api", class: "YT", loading: !1, loaded: !1},
        vimeo: {src: "https://player.vimeo.com/api/player.js", class: "Vimeo", loading: !1, loaded: !1},
        load: function (t) {
            var e, n = this;
            if (this[t].loaded) return void setTimeout(function () {
                n.done(t)
            });
            this[t].loading || (this[t].loading = !0, e = document.createElement("script"), e.type = "text/javascript", e.src = this[t].src, "youtube" === t ? window.onYouTubeIframeAPIReady = function () {
                n[t].loaded = !0, n.done(t)
            } : e.onload = function () {
                n[t].loaded = !0, n.done(t)
            }, document.body.appendChild(e))
        },
        done: function (e) {
            var n, o, i;
            "youtube" === e && delete window.onYouTubeIframeAPIReady, (n = t.fancybox.getInstance()) && (o = n.current.$content.find("iframe"), "youtube" === e && void 0 !== YT && YT ? i = new YT.Player(o.attr("id"), {
                events: {
                    onStateChange: function (t) {
                        0 == t.data && n.next()
                    }
                }
            }) : "vimeo" === e && void 0 !== Vimeo && Vimeo && (i = new Vimeo.Player(o), i.on("ended", function () {
                n.next()
            })))
        }
    };
    t(document).on({
        "afterShow.fb": function (t, e, n) {
            e.group.length > 1 && ("youtube" === n.contentSource || "vimeo" === n.contentSource) && o.load(n.contentSource)
        }
    })
}(jQuery), function (t, e, n) {
    "use strict";
    var o = function () {
        return t.requestAnimationFrame || t.webkitRequestAnimationFrame || t.mozRequestAnimationFrame || t.oRequestAnimationFrame || function (e) {
            return t.setTimeout(e, 1e3 / 60)
        }
    }(), i = function () {
        return t.cancelAnimationFrame || t.webkitCancelAnimationFrame || t.mozCancelAnimationFrame || t.oCancelAnimationFrame || function (e) {
            t.clearTimeout(e)
        }
    }(), a = function (e) {
        var n = [];
        e = e.originalEvent || e || t.e, e = e.touches && e.touches.length ? e.touches : e.changedTouches && e.changedTouches.length ? e.changedTouches : [e];
        for (var o in e) e[o].pageX ? n.push({x: e[o].pageX, y: e[o].pageY}) : e[o].clientX && n.push({
            x: e[o].clientX,
            y: e[o].clientY
        });
        return n
    }, s = function (t, e, n) {
        return e && t ? "x" === n ? t.x - e.x : "y" === n ? t.y - e.y : Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2)) : 0
    }, r = function (t) {
        if (t.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe') || n.isFunction(t.get(0).onclick) || t.data("selectable")) return !0;
        for (var e = 0, o = t[0].attributes, i = o.length; e < i; e++) if ("data-fancybox-" === o[e].nodeName.substr(0, 14)) return !0;
        return !1
    }, c = function (e) {
        var n = t.getComputedStyle(e)["overflow-y"], o = t.getComputedStyle(e)["overflow-x"],
            i = ("scroll" === n || "auto" === n) && e.scrollHeight > e.clientHeight,
            a = ("scroll" === o || "auto" === o) && e.scrollWidth > e.clientWidth;
        return i || a
    }, l = function (t) {
        for (var e = !1; ;) {
            if (e = c(t.get(0))) break;
            if (t = t.parent(), !t.length || t.hasClass("fancybox-stage") || t.is("body")) break
        }
        return e
    }, d = function (t) {
        var e = this;
        e.instance = t, e.$bg = t.$refs.bg, e.$stage = t.$refs.stage, e.$container = t.$refs.container, e.destroy(), e.$container.on("touchstart.fb.touch mousedown.fb.touch", n.proxy(e, "ontouchstart"))
    };
    d.prototype.destroy = function () {
        var t = this;
        t.$container.off(".fb.touch"), n(e).off(".fb.touch"), t.requestId && (i(t.requestId), t.requestId = null), t.tapped && (clearTimeout(t.tapped), t.tapped = null)
    }, d.prototype.ontouchstart = function (o) {
        var i = this, c = n(o.target), d = i.instance, u = d.current, f = u.$slide, p = u.$content,
            h = "touchstart" == o.type;
        if (h && i.$container.off("mousedown.fb.touch"), (!o.originalEvent || 2 != o.originalEvent.button) && f.length && c.length && !r(c) && !r(c.parent()) && (c.is("img") || !(o.originalEvent.clientX > c[0].clientWidth + c.offset().left))) {
            if (!u || d.isAnimating || u.$slide.hasClass("fancybox-animated")) return o.stopPropagation(), void o.preventDefault();
            i.realPoints = i.startPoints = a(o), i.startPoints.length && (u.touch && o.stopPropagation(), i.startEvent = o, i.canTap = !0, i.$target = c, i.$content = p, i.opts = u.opts.touch, i.isPanning = !1, i.isSwiping = !1, i.isZooming = !1, i.isScrolling = !1, i.canPan = d.canPan(), i.startTime = (new Date).getTime(), i.distanceX = i.distanceY = i.distance = 0, i.canvasWidth = Math.round(f[0].clientWidth), i.canvasHeight = Math.round(f[0].clientHeight), i.contentLastPos = null, i.contentStartPos = n.fancybox.getTranslate(i.$content) || {
                top: 0,
                left: 0
            }, i.sliderStartPos = n.fancybox.getTranslate(f), i.stagePos = n.fancybox.getTranslate(d.$refs.stage), i.sliderStartPos.top -= i.stagePos.top, i.sliderStartPos.left -= i.stagePos.left, i.contentStartPos.top -= i.stagePos.top, i.contentStartPos.left -= i.stagePos.left, n(e).off(".fb.touch").on(h ? "touchend.fb.touch touchcancel.fb.touch" : "mouseup.fb.touch mouseleave.fb.touch", n.proxy(i, "ontouchend")).on(h ? "touchmove.fb.touch" : "mousemove.fb.touch", n.proxy(i, "ontouchmove")), n.fancybox.isMobile && e.addEventListener("scroll", i.onscroll, !0), ((i.opts || i.canPan) && (c.is(i.$stage) || i.$stage.find(c).length) || (c.is(".fancybox-image") && o.preventDefault(), n.fancybox.isMobile && c.parents(".fancybox-caption").length)) && (i.isScrollable = l(c) || l(c.parent()), n.fancybox.isMobile && i.isScrollable || o.preventDefault(), (1 === i.startPoints.length || u.hasError) && (i.canPan ? (n.fancybox.stop(i.$content), i.isPanning = !0) : i.isSwiping = !0, i.$container.addClass("fancybox-is-grabbing")), 2 === i.startPoints.length && "image" === u.type && (u.isLoaded || u.$ghost) && (i.canTap = !1, i.isSwiping = !1, i.isPanning = !1, i.isZooming = !0, n.fancybox.stop(i.$content), i.centerPointStartX = .5 * (i.startPoints[0].x + i.startPoints[1].x) - n(t).scrollLeft(), i.centerPointStartY = .5 * (i.startPoints[0].y + i.startPoints[1].y) - n(t).scrollTop(), i.percentageOfImageAtPinchPointX = (i.centerPointStartX - i.contentStartPos.left) / i.contentStartPos.width, i.percentageOfImageAtPinchPointY = (i.centerPointStartY - i.contentStartPos.top) / i.contentStartPos.height, i.startDistanceBetweenFingers = s(i.startPoints[0], i.startPoints[1]))))
        }
    }, d.prototype.onscroll = function (t) {
        var n = this;
        n.isScrolling = !0, e.removeEventListener("scroll", n.onscroll, !0)
    }, d.prototype.ontouchmove = function (t) {
        var e = this;
        return void 0 !== t.originalEvent.buttons && 0 === t.originalEvent.buttons ? void e.ontouchend(t) : e.isScrolling ? void (e.canTap = !1) : (e.newPoints = a(t), void ((e.opts || e.canPan) && e.newPoints.length && e.newPoints.length && (e.isSwiping && !0 === e.isSwiping || t.preventDefault(), e.distanceX = s(e.newPoints[0], e.startPoints[0], "x"), e.distanceY = s(e.newPoints[0], e.startPoints[0], "y"), e.distance = s(e.newPoints[0], e.startPoints[0]), e.distance > 0 && (e.isSwiping ? e.onSwipe(t) : e.isPanning ? e.onPan() : e.isZooming && e.onZoom()))))
    }, d.prototype.onSwipe = function (e) {
        var a, s = this, r = s.instance, c = s.isSwiping, l = s.sliderStartPos.left || 0;
        if (!0 !== c) "x" == c && (s.distanceX > 0 && (s.instance.group.length < 2 || 0 === s.instance.current.index && !s.instance.current.opts.loop) ? l += Math.pow(s.distanceX, .8) : s.distanceX < 0 && (s.instance.group.length < 2 || s.instance.current.index === s.instance.group.length - 1 && !s.instance.current.opts.loop) ? l -= Math.pow(-s.distanceX, .8) : l += s.distanceX), s.sliderLastPos = {
            top: "x" == c ? 0 : s.sliderStartPos.top + s.distanceY,
            left: l
        }, s.requestId && (i(s.requestId), s.requestId = null), s.requestId = o(function () {
            s.sliderLastPos && (n.each(s.instance.slides, function (t, e) {
                var o = e.pos - s.instance.currPos;
                n.fancybox.setTranslate(e.$slide, {
                    top: s.sliderLastPos.top,
                    left: s.sliderLastPos.left + o * s.canvasWidth + o * e.opts.gutter
                })
            }), s.$container.addClass("fancybox-is-sliding"))
        }); else if (Math.abs(s.distance) > 10) {
            if (s.canTap = !1, r.group.length < 2 && s.opts.vertical ? s.isSwiping = "y" : r.isDragging || !1 === s.opts.vertical || "auto" === s.opts.vertical && n(t).width() > 800 ? s.isSwiping = "x" : (a = Math.abs(180 * Math.atan2(s.distanceY, s.distanceX) / Math.PI), s.isSwiping = a > 45 && a < 135 ? "y" : "x"), "y" === s.isSwiping && n.fancybox.isMobile && s.isScrollable) return void (s.isScrolling = !0);
            r.isDragging = s.isSwiping, s.startPoints = s.newPoints, n.each(r.slides, function (t, e) {
                var o, i;
                n.fancybox.stop(e.$slide), o = n.fancybox.getTranslate(e.$slide), i = n.fancybox.getTranslate(r.$refs.stage), e.$slide.css({
                    transform: "",
                    opacity: "",
                    "transition-duration": ""
                }).removeClass("fancybox-animated").removeClass(function (t, e) {
                    return (e.match(/(^|\s)fancybox-fx-\S+/g) || []).join(" ")
                }), e.pos === r.current.pos && (s.sliderStartPos.top = o.top - i.top, s.sliderStartPos.left = o.left - i.left), n.fancybox.setTranslate(e.$slide, {
                    top: o.top - i.top,
                    left: o.left - i.left
                })
            }), r.SlideShow && r.SlideShow.isActive && r.SlideShow.stop()
        }
    }, d.prototype.onPan = function () {
        var t = this;
        if (s(t.newPoints[0], t.realPoints[0]) < (n.fancybox.isMobile ? 10 : 5)) return void (t.startPoints = t.newPoints);
        t.canTap = !1, t.contentLastPos = t.limitMovement(), t.requestId && i(t.requestId), t.requestId = o(function () {
            n.fancybox.setTranslate(t.$content, t.contentLastPos)
        })
    }, d.prototype.limitMovement = function () {
        var t, e, n, o, i, a, s = this, r = s.canvasWidth, c = s.canvasHeight, l = s.distanceX, d = s.distanceY,
            u = s.contentStartPos, f = u.left, p = u.top, h = u.width, g = u.height;
        return i = h > r ? f + l : f, a = p + d, t = Math.max(0, .5 * r - .5 * h), e = Math.max(0, .5 * c - .5 * g), n = Math.min(r - h, .5 * r - .5 * h), o = Math.min(c - g, .5 * c - .5 * g), l > 0 && i > t && (i = t - 1 + Math.pow(-t + f + l, .8) || 0), l < 0 && i < n && (i = n + 1 - Math.pow(n - f - l, .8) || 0), d > 0 && a > e && (a = e - 1 + Math.pow(-e + p + d, .8) || 0), d < 0 && a < o && (a = o + 1 - Math.pow(o - p - d, .8) || 0), {
            top: a,
            left: i
        }
    }, d.prototype.limitPosition = function (t, e, n, o) {
        var i = this, a = i.canvasWidth, s = i.canvasHeight;
        return n > a ? (t = t > 0 ? 0 : t, t = t < a - n ? a - n : t) : t = Math.max(0, a / 2 - n / 2), o > s ? (e = e > 0 ? 0 : e, e = e < s - o ? s - o : e) : e = Math.max(0, s / 2 - o / 2), {
            top: e,
            left: t
        }
    }, d.prototype.onZoom = function () {
        var e = this, a = e.contentStartPos, r = a.width, c = a.height, l = a.left, d = a.top,
            u = s(e.newPoints[0], e.newPoints[1]), f = u / e.startDistanceBetweenFingers, p = Math.floor(r * f),
            h = Math.floor(c * f), g = (r - p) * e.percentageOfImageAtPinchPointX,
            b = (c - h) * e.percentageOfImageAtPinchPointY,
            m = (e.newPoints[0].x + e.newPoints[1].x) / 2 - n(t).scrollLeft(),
            v = (e.newPoints[0].y + e.newPoints[1].y) / 2 - n(t).scrollTop(), y = m - e.centerPointStartX,
            x = v - e.centerPointStartY, w = l + (g + y), $ = d + (b + x), S = {top: $, left: w, scaleX: f, scaleY: f};
        e.canTap = !1, e.newWidth = p, e.newHeight = h, e.contentLastPos = S, e.requestId && i(e.requestId), e.requestId = o(function () {
            n.fancybox.setTranslate(e.$content, e.contentLastPos)
        })
    }, d.prototype.ontouchend = function (t) {
        var o = this, s = o.isSwiping, r = o.isPanning, c = o.isZooming, l = o.isScrolling;
        if (o.endPoints = a(t), o.dMs = Math.max((new Date).getTime() - o.startTime, 1), o.$container.removeClass("fancybox-is-grabbing"), n(e).off(".fb.touch"), e.removeEventListener("scroll", o.onscroll, !0), o.requestId && (i(o.requestId), o.requestId = null), o.isSwiping = !1, o.isPanning = !1, o.isZooming = !1, o.isScrolling = !1, o.instance.isDragging = !1, o.canTap) return o.onTap(t);
        o.speed = 100, o.velocityX = o.distanceX / o.dMs * .5, o.velocityY = o.distanceY / o.dMs * .5, r ? o.endPanning() : c ? o.endZooming() : o.endSwiping(s, l)
    }, d.prototype.endSwiping = function (t, e) {
        var o = this, i = !1, a = o.instance.group.length, s = Math.abs(o.distanceX),
            r = "x" == t && a > 1 && (o.dMs > 130 && s > 10 || s > 50);
        o.sliderLastPos = null, "y" == t && !e && Math.abs(o.distanceY) > 50 ? (n.fancybox.animate(o.instance.current.$slide, {
            top: o.sliderStartPos.top + o.distanceY + 150 * o.velocityY,
            opacity: 0
        }, 200), i = o.instance.close(!0, 250)) : r && o.distanceX > 0 ? i = o.instance.previous(300) : r && o.distanceX < 0 && (i = o.instance.next(300)), !1 !== i || "x" != t && "y" != t || o.instance.centerSlide(200), o.$container.removeClass("fancybox-is-sliding")
    }, d.prototype.endPanning = function () {
        var t, e, o, i = this;
        i.contentLastPos && (!1 === i.opts.momentum || i.dMs > 350 ? (t = i.contentLastPos.left, e = i.contentLastPos.top) : (t = i.contentLastPos.left + 500 * i.velocityX, e = i.contentLastPos.top + 500 * i.velocityY), o = i.limitPosition(t, e, i.contentStartPos.width, i.contentStartPos.height), o.width = i.contentStartPos.width, o.height = i.contentStartPos.height, n.fancybox.animate(i.$content, o, 366))
    }, d.prototype.endZooming = function () {
        var t, e, o, i, a = this, s = a.instance.current, r = a.newWidth, c = a.newHeight;
        a.contentLastPos && (t = a.contentLastPos.left, e = a.contentLastPos.top, i = {
            top: e,
            left: t,
            width: r,
            height: c,
            scaleX: 1,
            scaleY: 1
        }, n.fancybox.setTranslate(a.$content, i), r < a.canvasWidth && c < a.canvasHeight ? a.instance.scaleToFit(150) : r > s.width || c > s.height ? a.instance.scaleToActual(a.centerPointStartX, a.centerPointStartY, 150) : (o = a.limitPosition(t, e, r, c), n.fancybox.animate(a.$content, o, 150)))
    }, d.prototype.onTap = function (e) {
        var o, i = this, s = n(e.target), r = i.instance, c = r.current, l = e && a(e) || i.startPoints,
            d = l[0] ? l[0].x - n(t).scrollLeft() - i.stagePos.left : 0,
            u = l[0] ? l[0].y - n(t).scrollTop() - i.stagePos.top : 0, f = function (t) {
                var o = c.opts[t];
                if (n.isFunction(o) && (o = o.apply(r, [c, e])), o) switch (o) {
                    case"close":
                        r.close(i.startEvent);
                        break;
                    case"toggleControls":
                        r.toggleControls();
                        break;
                    case"next":
                        r.next();
                        break;
                    case"nextOrClose":
                        r.group.length > 1 ? r.next() : r.close(i.startEvent);
                        break;
                    case"zoom":
                        "image" == c.type && (c.isLoaded || c.$ghost) && (r.canPan() ? r.scaleToFit() : r.isScaledDown() ? r.scaleToActual(d, u) : r.group.length < 2 && r.close(i.startEvent))
                }
            };
        if ((!e.originalEvent || 2 != e.originalEvent.button) && (s.is("img") || !(d > s[0].clientWidth + s.offset().left))) {
            if (s.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container")) o = "Outside"; else if (s.is(".fancybox-slide")) o = "Slide"; else {
                if (!r.current.$content || !r.current.$content.find(s).addBack().filter(s).length) return;
                o = "Content"
            }
            if (i.tapped) {
                if (clearTimeout(i.tapped), i.tapped = null, Math.abs(d - i.tapX) > 50 || Math.abs(u - i.tapY) > 50) return this;
                f("dblclick" + o)
            } else i.tapX = d, i.tapY = u, c.opts["dblclick" + o] && c.opts["dblclick" + o] !== c.opts["click" + o] ? i.tapped = setTimeout(function () {
                i.tapped = null, r.isAnimating || f("click" + o)
            }, 500) : f("click" + o);
            return this
        }
    }, n(e).on("onActivate.fb", function (t, e) {
        e && !e.Guestures && (e.Guestures = new d(e))
    }).on("beforeClose.fb", function (t, e) {
        e && e.Guestures && e.Guestures.destroy()
    })
}(window, document, jQuery), function (t, e) {
    "use strict";
    e.extend(!0, e.fancybox.defaults, {
        btnTpl: {slideShow: '<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>'},
        slideShow: {autoStart: !1, speed: 3e3, progress: !0}
    });
    var n = function (t) {
        this.instance = t, this.init()
    };
    e.extend(n.prototype, {
        timer: null, isActive: !1, $button: null, init: function () {
            var t = this, n = t.instance, o = n.group[n.currIndex].opts.slideShow;
            t.$button = n.$refs.toolbar.find("[data-fancybox-play]").on("click", function () {
                t.toggle()
            }), n.group.length < 2 || !o ? t.$button.hide() : o.progress && (t.$progress = e('<div class="fancybox-progress"></div>').appendTo(n.$refs.inner))
        }, set: function (t) {
            var n = this, o = n.instance, i = o.current;
            i && (!0 === t || i.opts.loop || o.currIndex < o.group.length - 1) ? n.isActive && "video" !== i.contentType && (n.$progress && e.fancybox.animate(n.$progress.show(), {scaleX: 1}, i.opts.slideShow.speed), n.timer = setTimeout(function () {
                o.current.opts.loop || o.current.index != o.group.length - 1 ? o.next() : o.jumpTo(0)
            }, i.opts.slideShow.speed)) : (n.stop(), o.idleSecondsCounter = 0, o.showControls())
        }, clear: function () {
            var t = this;
            clearTimeout(t.timer), t.timer = null, t.$progress && t.$progress.removeAttr("style").hide()
        }, start: function () {
            var t = this, e = t.instance.current;
            e && (t.$button.attr("title", (e.opts.i18n[e.opts.lang] || e.opts.i18n.en).PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"), t.isActive = !0, e.isComplete && t.set(!0), t.instance.trigger("onSlideShowChange", !0))
        }, stop: function () {
            var t = this, e = t.instance.current;
            t.clear(), t.$button.attr("title", (e.opts.i18n[e.opts.lang] || e.opts.i18n.en).PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"), t.isActive = !1, t.instance.trigger("onSlideShowChange", !1), t.$progress && t.$progress.removeAttr("style").hide()
        }, toggle: function () {
            var t = this;
            t.isActive ? t.stop() : t.start()
        }
    }), e(t).on({
        "onInit.fb": function (t, e) {
            e && !e.SlideShow && (e.SlideShow = new n(e))
        }, "beforeShow.fb": function (t, e, n, o) {
            var i = e && e.SlideShow;
            o ? i && n.opts.slideShow.autoStart && i.start() : i && i.isActive && i.clear()
        }, "afterShow.fb": function (t, e, n) {
            var o = e && e.SlideShow;
            o && o.isActive && o.set()
        }, "afterKeydown.fb": function (n, o, i, a, s) {
            var r = o && o.SlideShow;
            !r || !i.opts.slideShow || 80 !== s && 32 !== s || e(t.activeElement).is("button,a,input") || (a.preventDefault(), r.toggle())
        }, "beforeClose.fb onDeactivate.fb": function (t, e) {
            var n = e && e.SlideShow;
            n && n.stop()
        }
    }), e(t).on("visibilitychange", function () {
        var n = e.fancybox.getInstance(), o = n && n.SlideShow;
        o && o.isActive && (t.hidden ? o.clear() : o.set())
    })
}(document, jQuery), function (t, e) {
    "use strict";
    var n = function () {
        for (var e = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"], ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"], ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"], ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]], n = {}, o = 0; o < e.length; o++) {
            var i = e[o];
            if (i && i[1] in t) {
                for (var a = 0; a < i.length; a++) n[e[0][a]] = i[a];
                return n
            }
        }
        return !1
    }();
    if (n) {
        var o = {
            request: function (e) {
                e = e || t.documentElement, e[n.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)
            }, exit: function () {
                t[n.exitFullscreen]()
            }, toggle: function (e) {
                e = e || t.documentElement, this.isFullscreen() ? this.exit() : this.request(e)
            }, isFullscreen: function () {
                return Boolean(t[n.fullscreenElement])
            }, enabled: function () {
                return Boolean(t[n.fullscreenEnabled])
            }
        };
        e.extend(!0, e.fancybox.defaults, {
            btnTpl: {fullScreen: '<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>'},
            fullScreen: {autoStart: !1}
        }), e(t).on(n.fullscreenchange, function () {
            var t = o.isFullscreen(), n = e.fancybox.getInstance();
            n && (n.current && "image" === n.current.type && n.isAnimating && (n.isAnimating = !1, n.update(!0, !0, 0), n.isComplete || n.complete()), n.trigger("onFullscreenChange", t), n.$refs.container.toggleClass("fancybox-is-fullscreen", t), n.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter", !t).toggleClass("fancybox-button--fsexit", t))
        })
    }
    e(t).on({
        "onInit.fb": function (t, e) {
            var i;
            if (!n) return void e.$refs.toolbar.find("[data-fancybox-fullscreen]").remove();
            e && e.group[e.currIndex].opts.fullScreen ? (i = e.$refs.container, i.on("click.fb-fullscreen", "[data-fancybox-fullscreen]", function (t) {
                t.stopPropagation(), t.preventDefault(), o.toggle()
            }), e.opts.fullScreen && !0 === e.opts.fullScreen.autoStart && o.request(), e.FullScreen = o) : e && e.$refs.toolbar.find("[data-fancybox-fullscreen]").hide()
        }, "afterKeydown.fb": function (t, e, n, o, i) {
            e && e.FullScreen && 70 === i && (o.preventDefault(), e.FullScreen.toggle())
        }, "beforeClose.fb": function (t, e) {
            e && e.FullScreen && e.$refs.container.hasClass("fancybox-is-fullscreen") && o.exit()
        }
    })
}(document, jQuery), function (t, e) {
    "use strict";
    var n = "fancybox-thumbs";
    e.fancybox.defaults = e.extend(!0, {
        btnTpl: {thumbs: '<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>'},
        thumbs: {autoStart: !1, hideOnClose: !0, parentEl: ".fancybox-container", axis: "y"}
    }, e.fancybox.defaults);
    var o = function (t) {
        this.init(t)
    };
    e.extend(o.prototype, {
        $button: null, $grid: null, $list: null, isVisible: !1, isActive: !1, init: function (t) {
            var e = this, n = t.group, o = 0;
            e.instance = t, e.opts = n[t.currIndex].opts.thumbs, t.Thumbs = e, e.$button = t.$refs.toolbar.find("[data-fancybox-thumbs]");
            for (var i = 0, a = n.length; i < a && (n[i].thumb && o++, !(o > 1)); i++) ;
            o > 1 && e.opts ? (e.$button.removeAttr("style").on("click", function () {
                e.toggle()
            }), e.isActive = !0) : e.$button.hide()
        }, create: function () {
            var t, o = this, i = o.instance, a = o.opts.parentEl, s = [];
            o.$grid || (o.$grid = e('<div class="' + n + " " + n + "-" + o.opts.axis + '"></div>').appendTo(i.$refs.container.find(a).addBack().filter(a)), o.$grid.on("click", "a", function () {
                i.jumpTo(e(this).attr("data-index"))
            })), o.$list || (o.$list = e('<div class="' + n + '__list">').appendTo(o.$grid)), e.each(i.group, function (e, n) {
                t = n.thumb, t || "image" !== n.type || (t = n.src), s.push('<a href="javascript:;" tabindex="0" data-index="' + e + '"' + (t && t.length ? ' style="background-image:url(' + t + ')"' : 'class="fancybox-thumbs-missing"') + "></a>")
            }), o.$list[0].innerHTML = s.join(""), "x" === o.opts.axis && o.$list.width(parseInt(o.$grid.css("padding-right"), 10) + i.group.length * o.$list.children().eq(0).outerWidth(!0))
        }, focus: function (t) {
            var e, n, o = this, i = o.$list, a = o.$grid;
            o.instance.current && (e = i.children().removeClass("fancybox-thumbs-active").filter('[data-index="' + o.instance.current.index + '"]').addClass("fancybox-thumbs-active"), n = e.position(), "y" === o.opts.axis && (n.top < 0 || n.top > i.height() - e.outerHeight()) ? i.stop().animate({scrollTop: i.scrollTop() + n.top}, t) : "x" === o.opts.axis && (n.left < a.scrollLeft() || n.left > a.scrollLeft() + (a.width() - e.outerWidth())) && i.parent().stop().animate({scrollLeft: n.left}, t))
        }, update: function () {
            var t = this;
            t.instance.$refs.container.toggleClass("fancybox-show-thumbs", this.isVisible), t.isVisible ? (t.$grid || t.create(), t.instance.trigger("onThumbsShow"), t.focus(0)) : t.$grid && t.instance.trigger("onThumbsHide"), t.instance.update()
        }, hide: function () {
            this.isVisible = !1, this.update()
        }, show: function () {
            this.isVisible = !0, this.update()
        }, toggle: function () {
            this.isVisible = !this.isVisible, this.update()
        }
    }), e(t).on({
        "onInit.fb": function (t, e) {
            var n;
            e && !e.Thumbs && (n = new o(e), n.isActive && !0 === n.opts.autoStart && n.show())
        }, "beforeShow.fb": function (t, e, n, o) {
            var i = e && e.Thumbs;
            i && i.isVisible && i.focus(o ? 0 : 250)
        }, "afterKeydown.fb": function (t, e, n, o, i) {
            var a = e && e.Thumbs;
            a && a.isActive && 71 === i && (o.preventDefault(), a.toggle())
        }, "beforeClose.fb": function (t, e) {
            var n = e && e.Thumbs;
            n && n.isVisible && !1 !== n.opts.hideOnClose && n.$grid.hide()
        }
    })
}(document, jQuery), function (t, e) {
    "use strict";

    function n(t) {
        var e = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;",
            "`": "&#x60;",
            "=": "&#x3D;"
        };
        return String(t).replace(/[&<>"'`=\/]/g, function (t) {
            return e[t]
        })
    }

    e.extend(!0, e.fancybox.defaults, {
        btnTpl: {share: '<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>'},
        share: {
            url: function (t, e) {
                return !t.currentHash && "inline" !== e.type && "html" !== e.type && (e.origSrc || e.src) || window.location
            },
            tpl: '<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>'
        }
    }), e(t).on("click", "[data-fancybox-share]", function () {
        var t, o, i = e.fancybox.getInstance(), a = i.current || null;
        a && ("function" === e.type(a.opts.share.url) && (t = a.opts.share.url.apply(a, [i, a])), o = a.opts.share.tpl.replace(/\{\{media\}\}/g, "image" === a.type ? encodeURIComponent(a.src) : "").replace(/\{\{url\}\}/g, encodeURIComponent(t)).replace(/\{\{url_raw\}\}/g, n(t)).replace(/\{\{descr\}\}/g, i.$caption ? encodeURIComponent(i.$caption.text()) : ""), e.fancybox.open({
            src: i.translate(i, o),
            type: "html",
            opts: {
                touch: !1, animationEffect: !1, afterLoad: function (t, e) {
                    i.$refs.container.one("beforeClose.fb", function () {
                        t.close(null, 0)
                    }), e.$content.find(".fancybox-share__button").click(function () {
                        return window.open(this.href, "Share", "width=550, height=450"), !1
                    })
                }, mobile: {autoFocus: !1}
            }
        }))
    })
}(document, jQuery), function (t, e, n) {
    "use strict";

    function o() {
        var e = t.location.hash.substr(1), n = e.split("-"),
            o = n.length > 1 && /^\+?\d+$/.test(n[n.length - 1]) ? parseInt(n.pop(-1), 10) || 1 : 1, i = n.join("-");
        return {hash: e, index: o < 1 ? 1 : o, gallery: i}
    }

    function i(t) {
        "" !== t.gallery && n("[data-fancybox='" + n.escapeSelector(t.gallery) + "']").eq(t.index - 1).focus().trigger("click.fb-start")
    }

    function a(t) {
        var e, n;
        return !!t && (e = t.current ? t.current.opts : t.opts, "" !== (n = e.hash || (e.$orig ? e.$orig.data("fancybox") || e.$orig.data("fancybox-trigger") : "")) && n)
    }

    n.escapeSelector || (n.escapeSelector = function (t) {
        return (t + "").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g, function (t, e) {
            return e ? "\0" === t ? "�" : t.slice(0, -1) + "\\" + t.charCodeAt(t.length - 1).toString(16) + " " : "\\" + t
        })
    }), n(function () {
        !1 !== n.fancybox.defaults.hash && (n(e).on({
            "onInit.fb": function (t, e) {
                var n, i;
                !1 !== e.group[e.currIndex].opts.hash && (n = o(), (i = a(e)) && n.gallery && i == n.gallery && (e.currIndex = n.index - 1))
            }, "beforeShow.fb": function (n, o, i, s) {
                var r;
                i && !1 !== i.opts.hash && (r = a(o)) && (o.currentHash = r + (o.group.length > 1 ? "-" + (i.index + 1) : ""), t.location.hash !== "#" + o.currentHash && (s && !o.origHash && (o.origHash = t.location.hash), o.hashTimer && clearTimeout(o.hashTimer), o.hashTimer = setTimeout(function () {
                    "replaceState" in t.history ? (t.history[s ? "pushState" : "replaceState"]({}, e.title, t.location.pathname + t.location.search + "#" + o.currentHash), s && (o.hasCreatedHistory = !0)) : t.location.hash = o.currentHash, o.hashTimer = null
                }, 300)))
            }, "beforeClose.fb": function (n, o, i) {
                i && !1 !== i.opts.hash && (clearTimeout(o.hashTimer), o.currentHash && o.hasCreatedHistory ? t.history.back() : o.currentHash && ("replaceState" in t.history ? t.history.replaceState({}, e.title, t.location.pathname + t.location.search + (o.origHash || "")) : t.location.hash = o.origHash), o.currentHash = null)
            }
        }), n(t).on("hashchange.fb", function () {
            var t = o(), e = null;
            n.each(n(".fancybox-container").get().reverse(), function (t, o) {
                var i = n(o).data("FancyBox");
                if (i && i.currentHash) return e = i, !1
            }), e ? e.currentHash === t.gallery + "-" + t.index || 1 === t.index && e.currentHash == t.gallery || (e.currentHash = null, e.close()) : "" !== t.gallery && i(t)
        }), setTimeout(function () {
            n.fancybox.getInstance() || i(o())
        }, 50))
    })
}(window, document, jQuery), function (t, e) {
    "use strict";
    var n = (new Date).getTime();
    e(t).on({
        "onInit.fb": function (t, e, o) {
            e.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll", function (t) {
                var o = e.current, i = (new Date).getTime();
                e.group.length < 2 || !1 === o.opts.wheel || "auto" === o.opts.wheel && "image" !== o.type || (t.preventDefault(), t.stopPropagation(), o.$slide.hasClass("fancybox-animated") || (t = t.originalEvent || t, i - n < 250 || (n = i, e[(-t.deltaY || -t.deltaX || t.wheelDelta || -t.detail) < 0 ? "next" : "previous"]())))
            })
        }
    })
}(document, jQuery);
/*!
 * perfect-scrollbar v1.4.0
 * (c) 2018 Hyunje Jun
 * @license MIT
 */
!function (t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : t.PerfectScrollbar = e()
}(this, function () {
    "use strict";

    function t(t) {
        return getComputedStyle(t)
    }

    function e(t, e) {
        for (var i in e) {
            var r = e[i];
            "number" == typeof r && (r += "px"), t.style[i] = r
        }
        return t
    }

    function i(t) {
        var e = document.createElement("div");
        return e.className = t, e
    }

    function r(t, e) {
        if (!v) throw new Error("No element matching method supported");
        return v.call(t, e)
    }

    function l(t) {
        t.remove ? t.remove() : t.parentNode && t.parentNode.removeChild(t)
    }

    function n(t, e) {
        return Array.prototype.filter.call(t.children, function (t) {
            return r(t, e)
        })
    }

    function o(t, e) {
        var i = t.element.classList, r = m.state.scrolling(e);
        i.contains(r) ? clearTimeout(Y[e]) : i.add(r)
    }

    function s(t, e) {
        Y[e] = setTimeout(function () {
            return t.isAlive && t.element.classList.remove(m.state.scrolling(e))
        }, t.settings.scrollingThreshold)
    }

    function a(t, e) {
        o(t, e), s(t, e)
    }

    function c(t) {
        if ("function" == typeof window.CustomEvent) return new CustomEvent(t);
        var e = document.createEvent("CustomEvent");
        return e.initCustomEvent(t, !1, !1, void 0), e
    }

    function h(t, e, i, r, l) {
        var n = i[0], o = i[1], s = i[2], h = i[3], u = i[4], d = i[5];
        void 0 === r && (r = !0), void 0 === l && (l = !1);
        var f = t.element;
        t.reach[h] = null, f[s] < 1 && (t.reach[h] = "start"), f[s] > t[n] - t[o] - 1 && (t.reach[h] = "end"), e && (f.dispatchEvent(c("ps-scroll-" + h)), e < 0 ? f.dispatchEvent(c("ps-scroll-" + u)) : e > 0 && f.dispatchEvent(c("ps-scroll-" + d)), r && a(t, h)), t.reach[h] && (e || l) && f.dispatchEvent(c("ps-" + h + "-reach-" + t.reach[h]))
    }

    function u(t) {
        return parseInt(t, 10) || 0
    }

    function d(t) {
        return r(t, "input,[contenteditable]") || r(t, "select,[contenteditable]") || r(t, "textarea,[contenteditable]") || r(t, "button,[contenteditable]")
    }

    function f(e) {
        var i = t(e);
        return u(i.width) + u(i.paddingLeft) + u(i.paddingRight) + u(i.borderLeftWidth) + u(i.borderRightWidth)
    }

    function p(t, e) {
        return t.settings.minScrollbarLength && (e = Math.max(e, t.settings.minScrollbarLength)), t.settings.maxScrollbarLength && (e = Math.min(e, t.settings.maxScrollbarLength)), e
    }

    function b(t, i) {
        var r = {width: i.railXWidth}, l = Math.floor(t.scrollTop);
        i.isRtl ? r.left = i.negativeScrollAdjustment + t.scrollLeft + i.containerWidth - i.contentWidth : r.left = t.scrollLeft, i.isScrollbarXUsingBottom ? r.bottom = i.scrollbarXBottom - l : r.top = i.scrollbarXTop + l, e(i.scrollbarXRail, r);
        var n = {top: l, height: i.railYHeight};
        i.isScrollbarYUsingRight ? i.isRtl ? n.right = i.contentWidth - (i.negativeScrollAdjustment + t.scrollLeft) - i.scrollbarYRight - i.scrollbarYOuterWidth : n.right = i.scrollbarYRight - t.scrollLeft : i.isRtl ? n.left = i.negativeScrollAdjustment + t.scrollLeft + 2 * i.containerWidth - i.contentWidth - i.scrollbarYLeft - i.scrollbarYOuterWidth : n.left = i.scrollbarYLeft + t.scrollLeft, e(i.scrollbarYRail, n), e(i.scrollbarX, {
            left: i.scrollbarXLeft,
            width: i.scrollbarXWidth - i.railBorderXWidth
        }), e(i.scrollbarY, {top: i.scrollbarYTop, height: i.scrollbarYHeight - i.railBorderYWidth})
    }

    function g(t, e) {
        function i(e) {
            b[d] = g + Y * (e[a] - v), o(t, f), R(t), e.stopPropagation(), e.preventDefault()
        }

        function r() {
            s(t, f), t[p].classList.remove(m.state.clicking), t.event.unbind(t.ownerDocument, "mousemove", i)
        }

        var l = e[0], n = e[1], a = e[2], c = e[3], h = e[4], u = e[5], d = e[6], f = e[7], p = e[8], b = t.element,
            g = null, v = null, Y = null;
        t.event.bind(t[h], "mousedown", function (e) {
            g = b[d], v = e[a], Y = (t[n] - t[l]) / (t[c] - t[u]), t.event.bind(t.ownerDocument, "mousemove", i), t.event.once(t.ownerDocument, "mouseup", r), t[p].classList.add(m.state.clicking), e.stopPropagation(), e.preventDefault()
        })
    }

    var v = "undefined" != typeof Element && (Element.prototype.matches || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector),
        m = {
            main: "ps", element: {
                thumb: function (t) {
                    return "ps__thumb-" + t
                }, rail: function (t) {
                    return "ps__rail-" + t
                }, consuming: "ps__child--consume"
            }, state: {
                focus: "ps--focus", clicking: "ps--clicking", active: function (t) {
                    return "ps--active-" + t
                }, scrolling: function (t) {
                    return "ps--scrolling-" + t
                }
            }
        }, Y = {x: null, y: null}, X = function (t) {
            this.element = t, this.handlers = {}
        }, w = {isEmpty: {configurable: !0}};
    X.prototype.bind = function (t, e) {
        void 0 === this.handlers[t] && (this.handlers[t] = []), this.handlers[t].push(e), this.element.addEventListener(t, e, !1)
    }, X.prototype.unbind = function (t, e) {
        var i = this;
        this.handlers[t] = this.handlers[t].filter(function (r) {
            return !(!e || r === e) || (i.element.removeEventListener(t, r, !1), !1)
        })
    }, X.prototype.unbindAll = function () {
        var t = this;
        for (var e in t.handlers) t.unbind(e)
    }, w.isEmpty.get = function () {
        var t = this;
        return Object.keys(this.handlers).every(function (e) {
            return 0 === t.handlers[e].length
        })
    }, Object.defineProperties(X.prototype, w);
    var y = function () {
        this.eventElements = []
    };
    y.prototype.eventElement = function (t) {
        var e = this.eventElements.filter(function (e) {
            return e.element === t
        })[0];
        return e || (e = new X(t), this.eventElements.push(e)), e
    }, y.prototype.bind = function (t, e, i) {
        this.eventElement(t).bind(e, i)
    }, y.prototype.unbind = function (t, e, i) {
        var r = this.eventElement(t);
        r.unbind(e, i), r.isEmpty && this.eventElements.splice(this.eventElements.indexOf(r), 1)
    }, y.prototype.unbindAll = function () {
        this.eventElements.forEach(function (t) {
            return t.unbindAll()
        }), this.eventElements = []
    }, y.prototype.once = function (t, e, i) {
        var r = this.eventElement(t), l = function (t) {
            r.unbind(e, l), i(t)
        };
        r.bind(e, l)
    };
    var W = function (t, e, i, r, l) {
        void 0 === r && (r = !0), void 0 === l && (l = !1);
        var n;
        if ("top" === e) n = ["contentHeight", "containerHeight", "scrollTop", "y", "up", "down"]; else {
            if ("left" !== e) throw new Error("A proper axis should be provided");
            n = ["contentWidth", "containerWidth", "scrollLeft", "x", "left", "right"]
        }
        h(t, i, n, r, l)
    }, L = {
        isWebKit: "undefined" != typeof document && "WebkitAppearance" in document.documentElement.style,
        supportsTouch: "undefined" != typeof window && ("ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch),
        supportsIePointer: "undefined" != typeof navigator && navigator.msMaxTouchPoints,
        isChrome: "undefined" != typeof navigator && /Chrome/i.test(navigator && navigator.userAgent)
    }, R = function (t) {
        var e = t.element, i = Math.floor(e.scrollTop);
        t.containerWidth = e.clientWidth, t.containerHeight = e.clientHeight, t.contentWidth = e.scrollWidth, t.contentHeight = e.scrollHeight, e.contains(t.scrollbarXRail) || (n(e, m.element.rail("x")).forEach(function (t) {
            return l(t)
        }), e.appendChild(t.scrollbarXRail)), e.contains(t.scrollbarYRail) || (n(e, m.element.rail("y")).forEach(function (t) {
            return l(t)
        }), e.appendChild(t.scrollbarYRail)), !t.settings.suppressScrollX && t.containerWidth + t.settings.scrollXMarginOffset < t.contentWidth ? (t.scrollbarXActive = !0, t.railXWidth = t.containerWidth - t.railXMarginWidth, t.railXRatio = t.containerWidth / t.railXWidth, t.scrollbarXWidth = p(t, u(t.railXWidth * t.containerWidth / t.contentWidth)), t.scrollbarXLeft = u((t.negativeScrollAdjustment + e.scrollLeft) * (t.railXWidth - t.scrollbarXWidth) / (t.contentWidth - t.containerWidth))) : t.scrollbarXActive = !1, !t.settings.suppressScrollY && t.containerHeight + t.settings.scrollYMarginOffset < t.contentHeight ? (t.scrollbarYActive = !0, t.railYHeight = t.containerHeight - t.railYMarginHeight, t.railYRatio = t.containerHeight / t.railYHeight, t.scrollbarYHeight = p(t, u(t.railYHeight * t.containerHeight / t.contentHeight)), t.scrollbarYTop = u(i * (t.railYHeight - t.scrollbarYHeight) / (t.contentHeight - t.containerHeight))) : t.scrollbarYActive = !1, t.scrollbarXLeft >= t.railXWidth - t.scrollbarXWidth && (t.scrollbarXLeft = t.railXWidth - t.scrollbarXWidth), t.scrollbarYTop >= t.railYHeight - t.scrollbarYHeight && (t.scrollbarYTop = t.railYHeight - t.scrollbarYHeight), b(e, t), t.scrollbarXActive ? e.classList.add(m.state.active("x")) : (e.classList.remove(m.state.active("x")), t.scrollbarXWidth = 0, t.scrollbarXLeft = 0, e.scrollLeft = 0), t.scrollbarYActive ? e.classList.add(m.state.active("y")) : (e.classList.remove(m.state.active("y")), t.scrollbarYHeight = 0, t.scrollbarYTop = 0, e.scrollTop = 0)
    }, T = {
        "click-rail": function (t) {
            t.event.bind(t.scrollbarY, "mousedown", function (t) {
                return t.stopPropagation()
            }), t.event.bind(t.scrollbarYRail, "mousedown", function (e) {
                var i = e.pageY - window.pageYOffset - t.scrollbarYRail.getBoundingClientRect().top > t.scrollbarYTop ? 1 : -1;
                t.element.scrollTop += i * t.containerHeight, R(t), e.stopPropagation()
            }), t.event.bind(t.scrollbarX, "mousedown", function (t) {
                return t.stopPropagation()
            }), t.event.bind(t.scrollbarXRail, "mousedown", function (e) {
                var i = e.pageX - window.pageXOffset - t.scrollbarXRail.getBoundingClientRect().left > t.scrollbarXLeft ? 1 : -1;
                t.element.scrollLeft += i * t.containerWidth, R(t), e.stopPropagation()
            })
        }, "drag-thumb": function (t) {
            g(t, ["containerWidth", "contentWidth", "pageX", "railXWidth", "scrollbarX", "scrollbarXWidth", "scrollLeft", "x", "scrollbarXRail"]), g(t, ["containerHeight", "contentHeight", "pageY", "railYHeight", "scrollbarY", "scrollbarYHeight", "scrollTop", "y", "scrollbarYRail"])
        }, keyboard: function (t) {
            function e(e, r) {
                var l = Math.floor(i.scrollTop);
                if (0 === e) {
                    if (!t.scrollbarYActive) return !1;
                    if (0 === l && r > 0 || l >= t.contentHeight - t.containerHeight && r < 0) return !t.settings.wheelPropagation
                }
                var n = i.scrollLeft;
                if (0 === r) {
                    if (!t.scrollbarXActive) return !1;
                    if (0 === n && e < 0 || n >= t.contentWidth - t.containerWidth && e > 0) return !t.settings.wheelPropagation
                }
                return !0
            }

            var i = t.element, l = function () {
                return r(i, ":hover")
            }, n = function () {
                return r(t.scrollbarX, ":focus") || r(t.scrollbarY, ":focus")
            };
            t.event.bind(t.ownerDocument, "keydown", function (r) {
                if (!(r.isDefaultPrevented && r.isDefaultPrevented() || r.defaultPrevented) && (l() || n())) {
                    var o = document.activeElement ? document.activeElement : t.ownerDocument.activeElement;
                    if (o) {
                        if ("IFRAME" === o.tagName) o = o.contentDocument.activeElement; else for (; o.shadowRoot;) o = o.shadowRoot.activeElement;
                        if (d(o)) return
                    }
                    var s = 0, a = 0;
                    switch (r.which) {
                        case 37:
                            s = r.metaKey ? -t.contentWidth : r.altKey ? -t.containerWidth : -30;
                            break;
                        case 38:
                            a = r.metaKey ? t.contentHeight : r.altKey ? t.containerHeight : 30;
                            break;
                        case 39:
                            s = r.metaKey ? t.contentWidth : r.altKey ? t.containerWidth : 30;
                            break;
                        case 40:
                            a = r.metaKey ? -t.contentHeight : r.altKey ? -t.containerHeight : -30;
                            break;
                        case 32:
                            a = r.shiftKey ? t.containerHeight : -t.containerHeight;
                            break;
                        case 33:
                            a = t.containerHeight;
                            break;
                        case 34:
                            a = -t.containerHeight;
                            break;
                        case 36:
                            a = t.contentHeight;
                            break;
                        case 35:
                            a = -t.contentHeight;
                            break;
                        default:
                            return
                    }
                    t.settings.suppressScrollX && 0 !== s || t.settings.suppressScrollY && 0 !== a || (i.scrollTop -= a, i.scrollLeft += s, R(t), e(s, a) && r.preventDefault())
                }
            })
        }, wheel: function (e) {
            function i(t, i) {
                var r = Math.floor(o.scrollTop), l = 0 === o.scrollTop, n = r + o.offsetHeight === o.scrollHeight,
                    s = 0 === o.scrollLeft, a = o.scrollLeft + o.offsetWidth === o.scrollWidth;
                return !(Math.abs(i) > Math.abs(t) ? l || n : s || a) || !e.settings.wheelPropagation
            }

            function r(t) {
                var e = t.deltaX, i = -1 * t.deltaY;
                return void 0 !== e && void 0 !== i || (e = -1 * t.wheelDeltaX / 6, i = t.wheelDeltaY / 6), t.deltaMode && 1 === t.deltaMode && (e *= 10, i *= 10), e !== e && i !== i && (e = 0, i = t.wheelDelta), t.shiftKey ? [-i, -e] : [e, i]
            }

            function l(e, i, r) {
                if (!L.isWebKit && o.querySelector("select:focus")) return !0;
                if (!o.contains(e)) return !1;
                for (var l = e; l && l !== o;) {
                    if (l.classList.contains(m.element.consuming)) return !0;
                    var n = t(l);
                    if ([n.overflow, n.overflowX, n.overflowY].join("").match(/(scroll|auto)/)) {
                        var s = l.scrollHeight - l.clientHeight;
                        if (s > 0 && !(0 === l.scrollTop && r > 0 || l.scrollTop === s && r < 0)) return !0;
                        var a = l.scrollWidth - l.clientWidth;
                        if (a > 0 && !(0 === l.scrollLeft && i < 0 || l.scrollLeft === a && i > 0)) return !0
                    }
                    l = l.parentNode
                }
                return !1
            }

            function n(t) {
                var n = r(t), s = n[0], a = n[1];
                if (!l(t.target, s, a)) {
                    var c = !1;
                    e.settings.useBothWheelAxes ? e.scrollbarYActive && !e.scrollbarXActive ? (a ? o.scrollTop -= a * e.settings.wheelSpeed : o.scrollTop += s * e.settings.wheelSpeed, c = !0) : e.scrollbarXActive && !e.scrollbarYActive && (s ? o.scrollLeft += s * e.settings.wheelSpeed : o.scrollLeft -= a * e.settings.wheelSpeed, c = !0) : (o.scrollTop -= a * e.settings.wheelSpeed, o.scrollLeft += s * e.settings.wheelSpeed), R(e), (c = c || i(s, a)) && !t.ctrlKey && (t.stopPropagation(), t.preventDefault())
                }
            }

            var o = e.element;
            void 0 !== window.onwheel ? e.event.bind(o, "wheel", n) : void 0 !== window.onmousewheel && e.event.bind(o, "mousewheel", n)
        }, touch: function (e) {
            function i(t, i) {
                var r = Math.floor(h.scrollTop), l = h.scrollLeft, n = Math.abs(t), o = Math.abs(i);
                if (o > n) {
                    if (i < 0 && r === e.contentHeight - e.containerHeight || i > 0 && 0 === r) return 0 === window.scrollY && i > 0 && L.isChrome
                } else if (n > o && (t < 0 && l === e.contentWidth - e.containerWidth || t > 0 && 0 === l)) return !0;
                return !0
            }

            function r(t, i) {
                h.scrollTop -= i, h.scrollLeft -= t, R(e)
            }

            function l(t) {
                return t.targetTouches ? t.targetTouches[0] : t
            }

            function n(t) {
                return !(t.pointerType && "pen" === t.pointerType && 0 === t.buttons || (!t.targetTouches || 1 !== t.targetTouches.length) && (!t.pointerType || "mouse" === t.pointerType || t.pointerType === t.MSPOINTER_TYPE_MOUSE))
            }

            function o(t) {
                if (n(t)) {
                    var e = l(t);
                    u.pageX = e.pageX, u.pageY = e.pageY, d = (new Date).getTime(), null !== p && clearInterval(p)
                }
            }

            function s(e, i, r) {
                if (!h.contains(e)) return !1;
                for (var l = e; l && l !== h;) {
                    if (l.classList.contains(m.element.consuming)) return !0;
                    var n = t(l);
                    if ([n.overflow, n.overflowX, n.overflowY].join("").match(/(scroll|auto)/)) {
                        var o = l.scrollHeight - l.clientHeight;
                        if (o > 0 && !(0 === l.scrollTop && r > 0 || l.scrollTop === o && r < 0)) return !0;
                        var s = l.scrollLeft - l.clientWidth;
                        if (s > 0 && !(0 === l.scrollLeft && i < 0 || l.scrollLeft === s && i > 0)) return !0
                    }
                    l = l.parentNode
                }
                return !1
            }

            function a(t) {
                if (n(t)) {
                    var e = l(t), o = {pageX: e.pageX, pageY: e.pageY}, a = o.pageX - u.pageX, c = o.pageY - u.pageY;
                    if (s(t.target, a, c)) return;
                    r(a, c), u = o;
                    var h = (new Date).getTime(), p = h - d;
                    p > 0 && (f.x = a / p, f.y = c / p, d = h), i(a, c) && t.preventDefault()
                }
            }

            function c() {
                e.settings.swipeEasing && (clearInterval(p), p = setInterval(function () {
                    e.isInitialized ? clearInterval(p) : f.x || f.y ? Math.abs(f.x) < .01 && Math.abs(f.y) < .01 ? clearInterval(p) : (r(30 * f.x, 30 * f.y), f.x *= .8, f.y *= .8) : clearInterval(p)
                }, 10))
            }

            if (L.supportsTouch || L.supportsIePointer) {
                var h = e.element, u = {}, d = 0, f = {}, p = null;
                L.supportsTouch ? (e.event.bind(h, "touchstart", o), e.event.bind(h, "touchmove", a), e.event.bind(h, "touchend", c)) : L.supportsIePointer && (window.PointerEvent ? (e.event.bind(h, "pointerdown", o), e.event.bind(h, "pointermove", a), e.event.bind(h, "pointerup", c)) : window.MSPointerEvent && (e.event.bind(h, "MSPointerDown", o), e.event.bind(h, "MSPointerMove", a), e.event.bind(h, "MSPointerUp", c)))
            }
        }
    }, H = function (r, l) {
        var n = this;
        if (void 0 === l && (l = {}), "string" == typeof r && (r = document.querySelector(r)), !r || !r.nodeName) throw new Error("no element is specified to initialize PerfectScrollbar");
        this.element = r, r.classList.add(m.main), this.settings = {
            handlers: ["click-rail", "drag-thumb", "keyboard", "wheel", "touch"],
            maxScrollbarLength: null,
            minScrollbarLength: null,
            scrollingThreshold: 1e3,
            scrollXMarginOffset: 0,
            scrollYMarginOffset: 0,
            suppressScrollX: !1,
            suppressScrollY: !1,
            swipeEasing: !0,
            useBothWheelAxes: !1,
            wheelPropagation: !0,
            wheelSpeed: 1
        };
        for (var o in l) n.settings[o] = l[o];
        this.containerWidth = null, this.containerHeight = null, this.contentWidth = null, this.contentHeight = null;
        var s = function () {
            return r.classList.add(m.state.focus)
        }, a = function () {
            return r.classList.remove(m.state.focus)
        };
        this.isRtl = "rtl" === t(r).direction, this.isNegativeScroll = function () {
            var t = r.scrollLeft, e = null;
            return r.scrollLeft = -1, e = r.scrollLeft < 0, r.scrollLeft = t, e
        }(), this.negativeScrollAdjustment = this.isNegativeScroll ? r.scrollWidth - r.clientWidth : 0, this.event = new y, this.ownerDocument = r.ownerDocument || document, this.scrollbarXRail = i(m.element.rail("x")), r.appendChild(this.scrollbarXRail), this.scrollbarX = i(m.element.thumb("x")), this.scrollbarXRail.appendChild(this.scrollbarX), this.scrollbarX.setAttribute("tabindex", 0), this.event.bind(this.scrollbarX, "focus", s), this.event.bind(this.scrollbarX, "blur", a), this.scrollbarXActive = null, this.scrollbarXWidth = null, this.scrollbarXLeft = null;
        var c = t(this.scrollbarXRail);
        this.scrollbarXBottom = parseInt(c.bottom, 10), isNaN(this.scrollbarXBottom) ? (this.isScrollbarXUsingBottom = !1, this.scrollbarXTop = u(c.top)) : this.isScrollbarXUsingBottom = !0, this.railBorderXWidth = u(c.borderLeftWidth) + u(c.borderRightWidth), e(this.scrollbarXRail, {display: "block"}), this.railXMarginWidth = u(c.marginLeft) + u(c.marginRight), e(this.scrollbarXRail, {display: ""}), this.railXWidth = null, this.railXRatio = null, this.scrollbarYRail = i(m.element.rail("y")), r.appendChild(this.scrollbarYRail), this.scrollbarY = i(m.element.thumb("y")), this.scrollbarYRail.appendChild(this.scrollbarY), this.scrollbarY.setAttribute("tabindex", 0), this.event.bind(this.scrollbarY, "focus", s), this.event.bind(this.scrollbarY, "blur", a), this.scrollbarYActive = null, this.scrollbarYHeight = null, this.scrollbarYTop = null;
        var h = t(this.scrollbarYRail);
        this.scrollbarYRight = parseInt(h.right, 10), isNaN(this.scrollbarYRight) ? (this.isScrollbarYUsingRight = !1, this.scrollbarYLeft = u(h.left)) : this.isScrollbarYUsingRight = !0, this.scrollbarYOuterWidth = this.isRtl ? f(this.scrollbarY) : null, this.railBorderYWidth = u(h.borderTopWidth) + u(h.borderBottomWidth), e(this.scrollbarYRail, {display: "block"}), this.railYMarginHeight = u(h.marginTop) + u(h.marginBottom), e(this.scrollbarYRail, {display: ""}), this.railYHeight = null, this.railYRatio = null, this.reach = {
            x: r.scrollLeft <= 0 ? "start" : r.scrollLeft >= this.contentWidth - this.containerWidth ? "end" : null,
            y: r.scrollTop <= 0 ? "start" : r.scrollTop >= this.contentHeight - this.containerHeight ? "end" : null
        }, this.isAlive = !0, this.settings.handlers.forEach(function (t) {
            return T[t](n)
        }), this.lastScrollTop = Math.floor(r.scrollTop), this.lastScrollLeft = r.scrollLeft, this.event.bind(this.element, "scroll", function (t) {
            return n.onScroll(t)
        }), R(this)
    };
    return H.prototype.update = function () {
        this.isAlive && (this.negativeScrollAdjustment = this.isNegativeScroll ? this.element.scrollWidth - this.element.clientWidth : 0, e(this.scrollbarXRail, {display: "block"}), e(this.scrollbarYRail, {display: "block"}), this.railXMarginWidth = u(t(this.scrollbarXRail).marginLeft) + u(t(this.scrollbarXRail).marginRight), this.railYMarginHeight = u(t(this.scrollbarYRail).marginTop) + u(t(this.scrollbarYRail).marginBottom), e(this.scrollbarXRail, {display: "none"}), e(this.scrollbarYRail, {display: "none"}), R(this), W(this, "top", 0, !1, !0), W(this, "left", 0, !1, !0), e(this.scrollbarXRail, {display: ""}), e(this.scrollbarYRail, {display: ""}))
    }, H.prototype.onScroll = function (t) {
        this.isAlive && (R(this), W(this, "top", this.element.scrollTop - this.lastScrollTop), W(this, "left", this.element.scrollLeft - this.lastScrollLeft), this.lastScrollTop = Math.floor(this.element.scrollTop), this.lastScrollLeft = this.element.scrollLeft)
    }, H.prototype.destroy = function () {
        this.isAlive && (this.event.unbindAll(), l(this.scrollbarX), l(this.scrollbarY), l(this.scrollbarXRail), l(this.scrollbarYRail), this.removePsClasses(), this.element = null, this.scrollbarX = null, this.scrollbarY = null, this.scrollbarXRail = null, this.scrollbarYRail = null, this.isAlive = !1)
    }, H.prototype.removePsClasses = function () {
        this.element.className = this.element.className.split(" ").filter(function (t) {
            return !t.match(/^ps([-_].+|)$/)
        }).join(" ")
    }, H
});
/*! tooltipster v4.2.6 */
!function (a, b) {
    "function" == typeof define && define.amd ? define(["jquery"], function (a) {
        return b(a)
    }) : "object" == typeof exports ? module.exports = b(require("jquery")) : b(jQuery)
}(this, function (a) {
    function b(a) {
        this.$container, this.constraints = null, this.__$tooltip, this.__init(a)
    }

    function c(b, c) {
        var d = !0;
        return a.each(b, function (a, e) {
            return void 0 === c[a] || b[a] !== c[a] ? (d = !1, !1) : void 0
        }), d
    }

    function d(b) {
        var c = b.attr("id"), d = c ? h.window.document.getElementById(c) : null;
        return d ? d === b[0] : a.contains(h.window.document.body, b[0])
    }

    function e() {
        if (!g) return !1;
        var a = g.document.body || g.document.documentElement, b = a.style, c = "transition",
            d = ["Moz", "Webkit", "Khtml", "O", "ms"];
        if ("string" == typeof b[c]) return !0;
        c = c.charAt(0).toUpperCase() + c.substr(1);
        for (var e = 0; e < d.length; e++) if ("string" == typeof b[d[e] + c]) return !0;
        return !1
    }

    var f = {
        animation: "fade",
        animationDuration: 350,
        content: null,
        contentAsHTML: !1,
        contentCloning: !1,
        debug: !0,
        delay: 300,
        delayTouch: [300, 500],
        functionInit: null,
        functionBefore: null,
        functionReady: null,
        functionAfter: null,
        functionFormat: null,
        IEmin: 6,
        interactive: !1,
        multiple: !1,
        parent: null,
        plugins: ["sideTip"],
        repositionOnScroll: !1,
        restoration: "none",
        selfDestruction: !0,
        theme: [],
        timer: 0,
        trackerInterval: 500,
        trackOrigin: !1,
        trackTooltip: !1,
        trigger: "hover",
        triggerClose: {click: !1, mouseleave: !1, originClick: !1, scroll: !1, tap: !1, touchleave: !1},
        triggerOpen: {click: !1, mouseenter: !1, tap: !1, touchstart: !1},
        updateAnimation: "rotate",
        zIndex: 9999999
    }, g = "undefined" != typeof window ? window : null, h = {
        hasTouchCapability: !(!g || !("ontouchstart" in g || g.DocumentTouch && g.document instanceof g.DocumentTouch || g.navigator.maxTouchPoints)),
        hasTransitions: e(),
        IE: !1,
        semVer: "4.2.6",
        window: g
    }, i = function () {
        this.__$emitterPrivate = a({}), this.__$emitterPublic = a({}), this.__instancesLatestArr = [], this.__plugins = {}, this._env = h
    };
    i.prototype = {
        __bridge: function (b, c, d) {
            if (!c[d]) {
                var e = function () {
                };
                e.prototype = b;
                var g = new e;
                g.__init && g.__init(c), a.each(b, function (a, b) {
                    0 != a.indexOf("__") && (c[a] ? f.debug && console.log("The " + a + " method of the " + d + " plugin conflicts with another plugin or native methods") : (c[a] = function () {
                        return g[a].apply(g, Array.prototype.slice.apply(arguments))
                    }, c[a].bridged = g))
                }), c[d] = g
            }
            return this
        }, __setWindow: function (a) {
            return h.window = a, this
        }, _getRuler: function (a) {
            return new b(a)
        }, _off: function () {
            return this.__$emitterPrivate.off.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this
        }, _on: function () {
            return this.__$emitterPrivate.on.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this
        }, _one: function () {
            return this.__$emitterPrivate.one.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this
        }, _plugin: function (b) {
            var c = this;
            if ("string" == typeof b) {
                var d = b, e = null;
                return d.indexOf(".") > 0 ? e = c.__plugins[d] : a.each(c.__plugins, function (a, b) {
                    return b.name.substring(b.name.length - d.length - 1) == "." + d ? (e = b, !1) : void 0
                }), e
            }
            if (b.name.indexOf(".") < 0) throw new Error("Plugins must be namespaced");
            return c.__plugins[b.name] = b, b.core && c.__bridge(b.core, c, b.name), this
        }, _trigger: function () {
            var a = Array.prototype.slice.apply(arguments);
            return "string" == typeof a[0] && (a[0] = {type: a[0]}), this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, a), this.__$emitterPublic.trigger.apply(this.__$emitterPublic, a), this
        }, instances: function (b) {
            var c = [], d = b || ".tooltipstered";
            return a(d).each(function () {
                var b = a(this), d = b.data("tooltipster-ns");
                d && a.each(d, function (a, d) {
                    c.push(b.data(d))
                })
            }), c
        }, instancesLatest: function () {
            return this.__instancesLatestArr
        }, off: function () {
            return this.__$emitterPublic.off.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this
        }, on: function () {
            return this.__$emitterPublic.on.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this
        }, one: function () {
            return this.__$emitterPublic.one.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this
        }, origins: function (b) {
            var c = b ? b + " " : "";
            return a(c + ".tooltipstered").toArray()
        }, setDefaults: function (b) {
            return a.extend(f, b), this
        }, triggerHandler: function () {
            return this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this
        }
    }, a.tooltipster = new i, a.Tooltipster = function (b, c) {
        this.__callbacks = {
            close: [],
            open: []
        }, this.__closingTime, this.__Content, this.__contentBcr, this.__destroyed = !1, this.__$emitterPrivate = a({}), this.__$emitterPublic = a({}), this.__enabled = !0, this.__garbageCollector, this.__Geometry, this.__lastPosition, this.__namespace = "tooltipster-" + Math.round(1e6 * Math.random()), this.__options, this.__$originParents, this.__pointerIsOverOrigin = !1, this.__previousThemes = [], this.__state = "closed", this.__timeouts = {
            close: [],
            open: null
        }, this.__touchEvents = [], this.__tracker = null, this._$origin, this._$tooltip, this.__init(b, c)
    }, a.Tooltipster.prototype = {
        __init: function (b, c) {
            var d = this;
            if (d._$origin = a(b), d.__options = a.extend(!0, {}, f, c), d.__optionsFormat(), !h.IE || h.IE >= d.__options.IEmin) {
                var e = null;
                if (void 0 === d._$origin.data("tooltipster-initialTitle") && (e = d._$origin.attr("title"), void 0 === e && (e = null), d._$origin.data("tooltipster-initialTitle", e)), null !== d.__options.content) d.__contentSet(d.__options.content); else {
                    var g, i = d._$origin.attr("data-tooltip-content");
                    i && (g = a(i)), g && g[0] ? d.__contentSet(g.first()) : d.__contentSet(e)
                }
                d._$origin.removeAttr("title").addClass("tooltipstered"), d.__prepareOrigin(), d.__prepareGC(), a.each(d.__options.plugins, function (a, b) {
                    d._plug(b)
                }), h.hasTouchCapability && a(h.window.document.body).on("touchmove." + d.__namespace + "-triggerOpen", function (a) {
                    d._touchRecordEvent(a)
                }), d._on("created", function () {
                    d.__prepareTooltip()
                })._on("repositioned", function (a) {
                    d.__lastPosition = a.position
                })
            } else d.__options.disabled = !0
        }, __contentInsert: function () {
            var a = this, b = a._$tooltip.find(".tooltipster-content"), c = a.__Content, d = function (a) {
                c = a
            };
            return a._trigger({
                type: "format",
                content: a.__Content,
                format: d
            }), a.__options.functionFormat && (c = a.__options.functionFormat.call(a, a, {origin: a._$origin[0]}, a.__Content)), "string" != typeof c || a.__options.contentAsHTML ? b.empty().append(c) : b.text(c), a
        }, __contentSet: function (b) {
            return b instanceof a && this.__options.contentCloning && (b = b.clone(!0)), this.__Content = b, this._trigger({
                type: "updated",
                content: b
            }), this
        }, __destroyError: function () {
            throw new Error("This tooltip has been destroyed and cannot execute your method call.")
        }, __geometry: function () {
            var b = this, c = b._$origin, d = b._$origin.is("area");
            if (d) {
                var e = b._$origin.parent().attr("name");
                c = a('img[usemap="#' + e + '"]')
            }
            var f = c[0].getBoundingClientRect(), g = a(h.window.document), i = a(h.window), j = c, k = {
                available: {document: null, window: null},
                document: {size: {height: g.height(), width: g.width()}},
                window: {
                    scroll: {
                        left: h.window.scrollX || h.window.document.documentElement.scrollLeft,
                        top: h.window.scrollY || h.window.document.documentElement.scrollTop
                    }, size: {height: i.height(), width: i.width()}
                },
                origin: {
                    fixedLineage: !1,
                    offset: {},
                    size: {height: f.bottom - f.top, width: f.right - f.left},
                    usemapImage: d ? c[0] : null,
                    windowOffset: {bottom: f.bottom, left: f.left, right: f.right, top: f.top}
                }
            };
            if (d) {
                var l = b._$origin.attr("shape"), m = b._$origin.attr("coords");
                if (m && (m = m.split(","), a.map(m, function (a, b) {
                    m[b] = parseInt(a)
                })), "default" != l) switch (l) {
                    case"circle":
                        var n = m[0], o = m[1], p = m[2], q = o - p, r = n - p;
                        k.origin.size.height = 2 * p, k.origin.size.width = k.origin.size.height, k.origin.windowOffset.left += r, k.origin.windowOffset.top += q;
                        break;
                    case"rect":
                        var s = m[0], t = m[1], u = m[2], v = m[3];
                        k.origin.size.height = v - t, k.origin.size.width = u - s, k.origin.windowOffset.left += s, k.origin.windowOffset.top += t;
                        break;
                    case"poly":
                        for (var w = 0, x = 0, y = 0, z = 0, A = "even", B = 0; B < m.length; B++) {
                            var C = m[B];
                            "even" == A ? (C > y && (y = C, 0 === B && (w = y)), w > C && (w = C), A = "odd") : (C > z && (z = C, 1 == B && (x = z)), x > C && (x = C), A = "even")
                        }
                        k.origin.size.height = z - x, k.origin.size.width = y - w, k.origin.windowOffset.left += w, k.origin.windowOffset.top += x
                }
            }
            var D = function (a) {
                k.origin.size.height = a.height, k.origin.windowOffset.left = a.left, k.origin.windowOffset.top = a.top, k.origin.size.width = a.width
            };
            for (b._trigger({
                type: "geometry",
                edit: D,
                geometry: {
                    height: k.origin.size.height,
                    left: k.origin.windowOffset.left,
                    top: k.origin.windowOffset.top,
                    width: k.origin.size.width
                }
            }), k.origin.windowOffset.right = k.origin.windowOffset.left + k.origin.size.width, k.origin.windowOffset.bottom = k.origin.windowOffset.top + k.origin.size.height, k.origin.offset.left = k.origin.windowOffset.left + k.window.scroll.left, k.origin.offset.top = k.origin.windowOffset.top + k.window.scroll.top, k.origin.offset.bottom = k.origin.offset.top + k.origin.size.height, k.origin.offset.right = k.origin.offset.left + k.origin.size.width, k.available.document = {
                bottom: {
                    height: k.document.size.height - k.origin.offset.bottom,
                    width: k.document.size.width
                },
                left: {height: k.document.size.height, width: k.origin.offset.left},
                right: {height: k.document.size.height, width: k.document.size.width - k.origin.offset.right},
                top: {height: k.origin.offset.top, width: k.document.size.width}
            }, k.available.window = {
                bottom: {
                    height: Math.max(k.window.size.height - Math.max(k.origin.windowOffset.bottom, 0), 0),
                    width: k.window.size.width
                },
                left: {height: k.window.size.height, width: Math.max(k.origin.windowOffset.left, 0)},
                right: {
                    height: k.window.size.height,
                    width: Math.max(k.window.size.width - Math.max(k.origin.windowOffset.right, 0), 0)
                },
                top: {height: Math.max(k.origin.windowOffset.top, 0), width: k.window.size.width}
            }; "html" != j[0].tagName.toLowerCase();) {
                if ("fixed" == j.css("position")) {
                    k.origin.fixedLineage = !0;
                    break
                }
                j = j.parent()
            }
            return k
        }, __optionsFormat: function () {
            return "number" == typeof this.__options.animationDuration && (this.__options.animationDuration = [this.__options.animationDuration, this.__options.animationDuration]), "number" == typeof this.__options.delay && (this.__options.delay = [this.__options.delay, this.__options.delay]), "number" == typeof this.__options.delayTouch && (this.__options.delayTouch = [this.__options.delayTouch, this.__options.delayTouch]), "string" == typeof this.__options.theme && (this.__options.theme = [this.__options.theme]), null === this.__options.parent ? this.__options.parent = a(h.window.document.body) : "string" == typeof this.__options.parent && (this.__options.parent = a(this.__options.parent)), "hover" == this.__options.trigger ? (this.__options.triggerOpen = {
                mouseenter: !0,
                touchstart: !0
            }, this.__options.triggerClose = {
                mouseleave: !0,
                originClick: !0,
                touchleave: !0
            }) : "click" == this.__options.trigger && (this.__options.triggerOpen = {
                click: !0,
                tap: !0
            }, this.__options.triggerClose = {click: !0, tap: !0}), this._trigger("options"), this
        }, __prepareGC: function () {
            var b = this;
            return b.__options.selfDestruction ? b.__garbageCollector = setInterval(function () {
                var c = (new Date).getTime();
                b.__touchEvents = a.grep(b.__touchEvents, function (a, b) {
                    return c - a.time > 6e4
                }), d(b._$origin) || b.close(function () {
                    b.destroy()
                })
            }, 2e4) : clearInterval(b.__garbageCollector), b
        }, __prepareOrigin: function () {
            var a = this;
            if (a._$origin.off("." + a.__namespace + "-triggerOpen"), h.hasTouchCapability && a._$origin.on("touchstart." + a.__namespace + "-triggerOpen touchend." + a.__namespace + "-triggerOpen touchcancel." + a.__namespace + "-triggerOpen", function (b) {
                a._touchRecordEvent(b)
            }), a.__options.triggerOpen.click || a.__options.triggerOpen.tap && h.hasTouchCapability) {
                var b = "";
                a.__options.triggerOpen.click && (b += "click." + a.__namespace + "-triggerOpen "), a.__options.triggerOpen.tap && h.hasTouchCapability && (b += "touchend." + a.__namespace + "-triggerOpen"), a._$origin.on(b, function (b) {
                    a._touchIsMeaningfulEvent(b) && a._open(b)
                })
            }
            if (a.__options.triggerOpen.mouseenter || a.__options.triggerOpen.touchstart && h.hasTouchCapability) {
                var b = "";
                a.__options.triggerOpen.mouseenter && (b += "mouseenter." + a.__namespace + "-triggerOpen "), a.__options.triggerOpen.touchstart && h.hasTouchCapability && (b += "touchstart." + a.__namespace + "-triggerOpen"), a._$origin.on(b, function (b) {
                    !a._touchIsTouchEvent(b) && a._touchIsEmulatedEvent(b) || (a.__pointerIsOverOrigin = !0, a._openShortly(b))
                })
            }
            if (a.__options.triggerClose.mouseleave || a.__options.triggerClose.touchleave && h.hasTouchCapability) {
                var b = "";
                a.__options.triggerClose.mouseleave && (b += "mouseleave." + a.__namespace + "-triggerOpen "), a.__options.triggerClose.touchleave && h.hasTouchCapability && (b += "touchend." + a.__namespace + "-triggerOpen touchcancel." + a.__namespace + "-triggerOpen"), a._$origin.on(b, function (b) {
                    a._touchIsMeaningfulEvent(b) && (a.__pointerIsOverOrigin = !1)
                })
            }
            return a
        }, __prepareTooltip: function () {
            var b = this, c = b.__options.interactive ? "auto" : "";
            return b._$tooltip.attr("id", b.__namespace).css({
                "pointer-events": c,
                zIndex: b.__options.zIndex
            }), a.each(b.__previousThemes, function (a, c) {
                b._$tooltip.removeClass(c)
            }), a.each(b.__options.theme, function (a, c) {
                b._$tooltip.addClass(c)
            }), b.__previousThemes = a.merge([], b.__options.theme), b
        }, __scrollHandler: function (b) {
            var c = this;
            if (c.__options.triggerClose.scroll) c._close(b); else if (d(c._$origin) && d(c._$tooltip)) {
                var e = null;
                if (b.target === h.window.document) c.__Geometry.origin.fixedLineage || c.__options.repositionOnScroll && c.reposition(b); else {
                    e = c.__geometry();
                    var f = !1;
                    if ("fixed" != c._$origin.css("position") && c.__$originParents.each(function (b, c) {
                        var d = a(c), g = d.css("overflow-x"), h = d.css("overflow-y");
                        if ("visible" != g || "visible" != h) {
                            var i = c.getBoundingClientRect();
                            if ("visible" != g && (e.origin.windowOffset.left < i.left || e.origin.windowOffset.right > i.right)) return f = !0, !1;
                            if ("visible" != h && (e.origin.windowOffset.top < i.top || e.origin.windowOffset.bottom > i.bottom)) return f = !0, !1
                        }
                        return "fixed" == d.css("position") ? !1 : void 0
                    }), f) c._$tooltip.css("visibility", "hidden"); else if (c._$tooltip.css("visibility", "visible"), c.__options.repositionOnScroll) c.reposition(b); else {
                        var g = e.origin.offset.left - c.__Geometry.origin.offset.left,
                            i = e.origin.offset.top - c.__Geometry.origin.offset.top;
                        c._$tooltip.css({left: c.__lastPosition.coord.left + g, top: c.__lastPosition.coord.top + i})
                    }
                }
                c._trigger({type: "scroll", event: b, geo: e})
            }
            return c
        }, __stateSet: function (a) {
            return this.__state = a, this._trigger({type: "state", state: a}), this
        }, __timeoutsClear: function () {
            return clearTimeout(this.__timeouts.open), this.__timeouts.open = null, a.each(this.__timeouts.close, function (a, b) {
                clearTimeout(b)
            }), this.__timeouts.close = [], this
        }, __trackerStart: function () {
            var a = this, b = a._$tooltip.find(".tooltipster-content");
            return a.__options.trackTooltip && (a.__contentBcr = b[0].getBoundingClientRect()), a.__tracker = setInterval(function () {
                if (d(a._$origin) && d(a._$tooltip)) {
                    if (a.__options.trackOrigin) {
                        var e = a.__geometry(), f = !1;
                        c(e.origin.size, a.__Geometry.origin.size) && (a.__Geometry.origin.fixedLineage ? c(e.origin.windowOffset, a.__Geometry.origin.windowOffset) && (f = !0) : c(e.origin.offset, a.__Geometry.origin.offset) && (f = !0)), f || (a.__options.triggerClose.mouseleave ? a._close() : a.reposition())
                    }
                    if (a.__options.trackTooltip) {
                        var g = b[0].getBoundingClientRect();
                        g.height === a.__contentBcr.height && g.width === a.__contentBcr.width || (a.reposition(), a.__contentBcr = g)
                    }
                } else a._close()
            }, a.__options.trackerInterval), a
        }, _close: function (b, c, d) {
            var e = this, f = !0;
            if (e._trigger({
                type: "close", event: b, stop: function () {
                    f = !1
                }
            }), f || d) {
                c && e.__callbacks.close.push(c), e.__callbacks.open = [], e.__timeoutsClear();
                var g = function () {
                    a.each(e.__callbacks.close, function (a, c) {
                        c.call(e, e, {event: b, origin: e._$origin[0]})
                    }), e.__callbacks.close = []
                };
                if ("closed" != e.__state) {
                    var i = !0, j = new Date, k = j.getTime(), l = k + e.__options.animationDuration[1];
                    if ("disappearing" == e.__state && l > e.__closingTime && e.__options.animationDuration[1] > 0 && (i = !1), i) {
                        e.__closingTime = l, "disappearing" != e.__state && e.__stateSet("disappearing");
                        var m = function () {
                            clearInterval(e.__tracker), e._trigger({
                                type: "closing",
                                event: b
                            }), e._$tooltip.off("." + e.__namespace + "-triggerClose").removeClass("tooltipster-dying"), a(h.window).off("." + e.__namespace + "-triggerClose"), e.__$originParents.each(function (b, c) {
                                a(c).off("scroll." + e.__namespace + "-triggerClose")
                            }), e.__$originParents = null, a(h.window.document.body).off("." + e.__namespace + "-triggerClose"), e._$origin.off("." + e.__namespace + "-triggerClose"), e._off("dismissable"), e.__stateSet("closed"), e._trigger({
                                type: "after",
                                event: b
                            }), e.__options.functionAfter && e.__options.functionAfter.call(e, e, {
                                event: b,
                                origin: e._$origin[0]
                            }), g()
                        };
                        h.hasTransitions ? (e._$tooltip.css({
                            "-moz-animation-duration": e.__options.animationDuration[1] + "ms",
                            "-ms-animation-duration": e.__options.animationDuration[1] + "ms",
                            "-o-animation-duration": e.__options.animationDuration[1] + "ms",
                            "-webkit-animation-duration": e.__options.animationDuration[1] + "ms",
                            "animation-duration": e.__options.animationDuration[1] + "ms",
                            "transition-duration": e.__options.animationDuration[1] + "ms"
                        }), e._$tooltip.clearQueue().removeClass("tooltipster-show").addClass("tooltipster-dying"), e.__options.animationDuration[1] > 0 && e._$tooltip.delay(e.__options.animationDuration[1]), e._$tooltip.queue(m)) : e._$tooltip.stop().fadeOut(e.__options.animationDuration[1], m)
                    }
                } else g()
            }
            return e
        }, _off: function () {
            return this.__$emitterPrivate.off.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this
        }, _on: function () {
            return this.__$emitterPrivate.on.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this
        }, _one: function () {
            return this.__$emitterPrivate.one.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments)), this
        }, _open: function (b, c) {
            var e = this;
            if (!e.__destroying && d(e._$origin) && e.__enabled) {
                var f = !0;
                if ("closed" == e.__state && (e._trigger({
                    type: "before", event: b, stop: function () {
                        f = !1
                    }
                }), f && e.__options.functionBefore && (f = e.__options.functionBefore.call(e, e, {
                    event: b,
                    origin: e._$origin[0]
                }))), f !== !1 && null !== e.__Content) {
                    c && e.__callbacks.open.push(c), e.__callbacks.close = [], e.__timeoutsClear();
                    var g, i = function () {
                        "stable" != e.__state && e.__stateSet("stable"), a.each(e.__callbacks.open, function (a, b) {
                            b.call(e, e, {origin: e._$origin[0], tooltip: e._$tooltip[0]})
                        }), e.__callbacks.open = []
                    };
                    if ("closed" !== e.__state) g = 0, "disappearing" === e.__state ? (e.__stateSet("appearing"), h.hasTransitions ? (e._$tooltip.clearQueue().removeClass("tooltipster-dying").addClass("tooltipster-show"), e.__options.animationDuration[0] > 0 && e._$tooltip.delay(e.__options.animationDuration[0]), e._$tooltip.queue(i)) : e._$tooltip.stop().fadeIn(i)) : "stable" == e.__state && i(); else {
                        if (e.__stateSet("appearing"), g = e.__options.animationDuration[0], e.__contentInsert(), e.reposition(b, !0), h.hasTransitions ? (e._$tooltip.addClass("tooltipster-" + e.__options.animation).addClass("tooltipster-initial").css({
                            "-moz-animation-duration": e.__options.animationDuration[0] + "ms",
                            "-ms-animation-duration": e.__options.animationDuration[0] + "ms",
                            "-o-animation-duration": e.__options.animationDuration[0] + "ms",
                            "-webkit-animation-duration": e.__options.animationDuration[0] + "ms",
                            "animation-duration": e.__options.animationDuration[0] + "ms",
                            "transition-duration": e.__options.animationDuration[0] + "ms"
                        }), setTimeout(function () {
                            "closed" != e.__state && (e._$tooltip.addClass("tooltipster-show").removeClass("tooltipster-initial"), e.__options.animationDuration[0] > 0 && e._$tooltip.delay(e.__options.animationDuration[0]), e._$tooltip.queue(i))
                        }, 0)) : e._$tooltip.css("display", "none").fadeIn(e.__options.animationDuration[0], i), e.__trackerStart(), a(h.window).on("resize." + e.__namespace + "-triggerClose", function (b) {
                            var c = a(document.activeElement);
                            (c.is("input") || c.is("textarea")) && a.contains(e._$tooltip[0], c[0]) || e.reposition(b)
                        }).on("scroll." + e.__namespace + "-triggerClose", function (a) {
                            e.__scrollHandler(a)
                        }), e.__$originParents = e._$origin.parents(), e.__$originParents.each(function (b, c) {
                            a(c).on("scroll." + e.__namespace + "-triggerClose", function (a) {
                                e.__scrollHandler(a)
                            })
                        }), e.__options.triggerClose.mouseleave || e.__options.triggerClose.touchleave && h.hasTouchCapability) {
                            e._on("dismissable", function (a) {
                                a.dismissable ? a.delay ? (m = setTimeout(function () {
                                    e._close(a.event)
                                }, a.delay), e.__timeouts.close.push(m)) : e._close(a) : clearTimeout(m)
                            });
                            var j = e._$origin, k = "", l = "", m = null;
                            e.__options.interactive && (j = j.add(e._$tooltip)), e.__options.triggerClose.mouseleave && (k += "mouseenter." + e.__namespace + "-triggerClose ", l += "mouseleave." + e.__namespace + "-triggerClose "), e.__options.triggerClose.touchleave && h.hasTouchCapability && (k += "touchstart." + e.__namespace + "-triggerClose", l += "touchend." + e.__namespace + "-triggerClose touchcancel." + e.__namespace + "-triggerClose"), j.on(l, function (a) {
                                if (e._touchIsTouchEvent(a) || !e._touchIsEmulatedEvent(a)) {
                                    var b = "mouseleave" == a.type ? e.__options.delay : e.__options.delayTouch;
                                    e._trigger({delay: b[1], dismissable: !0, event: a, type: "dismissable"})
                                }
                            }).on(k, function (a) {
                                !e._touchIsTouchEvent(a) && e._touchIsEmulatedEvent(a) || e._trigger({
                                    dismissable: !1,
                                    event: a,
                                    type: "dismissable"
                                })
                            })
                        }
                        e.__options.triggerClose.originClick && e._$origin.on("click." + e.__namespace + "-triggerClose", function (a) {
                            e._touchIsTouchEvent(a) || e._touchIsEmulatedEvent(a) || e._close(a)
                        }), (e.__options.triggerClose.click || e.__options.triggerClose.tap && h.hasTouchCapability) && setTimeout(function () {
                            if ("closed" != e.__state) {
                                var b = "", c = a(h.window.document.body);
                                e.__options.triggerClose.click && (b += "click." + e.__namespace + "-triggerClose "), e.__options.triggerClose.tap && h.hasTouchCapability && (b += "touchend." + e.__namespace + "-triggerClose"), c.on(b, function (b) {
                                    e._touchIsMeaningfulEvent(b) && (e._touchRecordEvent(b), e.__options.interactive && a.contains(e._$tooltip[0], b.target) || e._close(b))
                                }), e.__options.triggerClose.tap && h.hasTouchCapability && c.on("touchstart." + e.__namespace + "-triggerClose", function (a) {
                                    e._touchRecordEvent(a)
                                })
                            }
                        }, 0), e._trigger("ready"), e.__options.functionReady && e.__options.functionReady.call(e, e, {
                            origin: e._$origin[0],
                            tooltip: e._$tooltip[0]
                        })
                    }
                    if (e.__options.timer > 0) {
                        var m = setTimeout(function () {
                            e._close()
                        }, e.__options.timer + g);
                        e.__timeouts.close.push(m)
                    }
                }
            }
            return e
        }, _openShortly: function (a) {
            var b = this, c = !0;
            if ("stable" != b.__state && "appearing" != b.__state && !b.__timeouts.open && (b._trigger({
                type: "start",
                event: a,
                stop: function () {
                    c = !1
                }
            }), c)) {
                var d = 0 == a.type.indexOf("touch") ? b.__options.delayTouch : b.__options.delay;
                d[0] ? b.__timeouts.open = setTimeout(function () {
                    b.__timeouts.open = null, b.__pointerIsOverOrigin && b._touchIsMeaningfulEvent(a) ? (b._trigger("startend"), b._open(a)) : b._trigger("startcancel")
                }, d[0]) : (b._trigger("startend"), b._open(a))
            }
            return b
        }, _optionsExtract: function (b, c) {
            var d = this, e = a.extend(!0, {}, c), f = d.__options[b];
            return f || (f = {}, a.each(c, function (a, b) {
                var c = d.__options[a];
                void 0 !== c && (f[a] = c)
            })), a.each(e, function (b, c) {
                void 0 !== f[b] && ("object" != typeof c || c instanceof Array || null == c || "object" != typeof f[b] || f[b] instanceof Array || null == f[b] ? e[b] = f[b] : a.extend(e[b], f[b]))
            }), e
        }, _plug: function (b) {
            var c = a.tooltipster._plugin(b);
            if (!c) throw new Error('The "' + b + '" plugin is not defined');
            return c.instance && a.tooltipster.__bridge(c.instance, this, c.name), this
        }, _touchIsEmulatedEvent: function (a) {
            for (var b = !1, c = (new Date).getTime(), d = this.__touchEvents.length - 1; d >= 0; d--) {
                var e = this.__touchEvents[d];
                if (!(c - e.time < 500)) break;
                e.target === a.target && (b = !0)
            }
            return b
        }, _touchIsMeaningfulEvent: function (a) {
            return this._touchIsTouchEvent(a) && !this._touchSwiped(a.target) || !this._touchIsTouchEvent(a) && !this._touchIsEmulatedEvent(a)
        }, _touchIsTouchEvent: function (a) {
            return 0 == a.type.indexOf("touch")
        }, _touchRecordEvent: function (a) {
            return this._touchIsTouchEvent(a) && (a.time = (new Date).getTime(), this.__touchEvents.push(a)), this
        }, _touchSwiped: function (a) {
            for (var b = !1, c = this.__touchEvents.length - 1; c >= 0; c--) {
                var d = this.__touchEvents[c];
                if ("touchmove" == d.type) {
                    b = !0;
                    break
                }
                if ("touchstart" == d.type && a === d.target) break
            }
            return b
        }, _trigger: function () {
            var b = Array.prototype.slice.apply(arguments);
            return "string" == typeof b[0] && (b[0] = {type: b[0]}), b[0].instance = this, b[0].origin = this._$origin ? this._$origin[0] : null, b[0].tooltip = this._$tooltip ? this._$tooltip[0] : null, this.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, b), a.tooltipster._trigger.apply(a.tooltipster, b), this.__$emitterPublic.trigger.apply(this.__$emitterPublic, b), this
        }, _unplug: function (b) {
            var c = this;
            if (c[b]) {
                var d = a.tooltipster._plugin(b);
                d.instance && a.each(d.instance, function (a, d) {
                    c[a] && c[a].bridged === c[b] && delete c[a]
                }), c[b].__destroy && c[b].__destroy(), delete c[b]
            }
            return c
        }, close: function (a) {
            return this.__destroyed ? this.__destroyError() : this._close(null, a), this
        }, content: function (a) {
            var b = this;
            if (void 0 === a) return b.__Content;
            if (b.__destroyed) b.__destroyError(); else if (b.__contentSet(a), null !== b.__Content) {
                if ("closed" !== b.__state && (b.__contentInsert(), b.reposition(), b.__options.updateAnimation)) if (h.hasTransitions) {
                    var c = b.__options.updateAnimation;
                    b._$tooltip.addClass("tooltipster-update-" + c), setTimeout(function () {
                        "closed" != b.__state && b._$tooltip.removeClass("tooltipster-update-" + c)
                    }, 1e3)
                } else b._$tooltip.fadeTo(200, .5, function () {
                    "closed" != b.__state && b._$tooltip.fadeTo(200, 1)
                })
            } else b._close();
            return b
        }, destroy: function () {
            var b = this;
            if (b.__destroyed) b.__destroyError(); else {
                "closed" != b.__state ? b.option("animationDuration", 0)._close(null, null, !0) : b.__timeoutsClear(), b._trigger("destroy"), b.__destroyed = !0, b._$origin.removeData(b.__namespace).off("." + b.__namespace + "-triggerOpen"), a(h.window.document.body).off("." + b.__namespace + "-triggerOpen");
                var c = b._$origin.data("tooltipster-ns");
                if (c) if (1 === c.length) {
                    var d = null;
                    "previous" == b.__options.restoration ? d = b._$origin.data("tooltipster-initialTitle") : "current" == b.__options.restoration && (d = "string" == typeof b.__Content ? b.__Content : a("<div></div>").append(b.__Content).html()), d && b._$origin.attr("title", d), b._$origin.removeClass("tooltipstered"), b._$origin.removeData("tooltipster-ns").removeData("tooltipster-initialTitle")
                } else c = a.grep(c, function (a, c) {
                    return a !== b.__namespace
                }), b._$origin.data("tooltipster-ns", c);
                b._trigger("destroyed"), b._off(), b.off(), b.__Content = null, b.__$emitterPrivate = null, b.__$emitterPublic = null, b.__options.parent = null, b._$origin = null, b._$tooltip = null, a.tooltipster.__instancesLatestArr = a.grep(a.tooltipster.__instancesLatestArr, function (a, c) {
                    return b !== a
                }), clearInterval(b.__garbageCollector)
            }
            return b
        }, disable: function () {
            return this.__destroyed ? (this.__destroyError(), this) : (this._close(), this.__enabled = !1, this)
        }, elementOrigin: function () {
            return this.__destroyed ? void this.__destroyError() : this._$origin[0]
        }, elementTooltip: function () {
            return this._$tooltip ? this._$tooltip[0] : null
        }, enable: function () {
            return this.__enabled = !0, this
        }, hide: function (a) {
            return this.close(a)
        }, instance: function () {
            return this
        }, off: function () {
            return this.__destroyed || this.__$emitterPublic.off.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this
        }, on: function () {
            return this.__destroyed ? this.__destroyError() : this.__$emitterPublic.on.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this
        }, one: function () {
            return this.__destroyed ? this.__destroyError() : this.__$emitterPublic.one.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this
        }, open: function (a) {
            return this.__destroyed ? this.__destroyError() : this._open(null, a), this
        }, option: function (b, c) {
            return void 0 === c ? this.__options[b] : (this.__destroyed ? this.__destroyError() : (this.__options[b] = c, this.__optionsFormat(), a.inArray(b, ["trigger", "triggerClose", "triggerOpen"]) >= 0 && this.__prepareOrigin(), "selfDestruction" === b && this.__prepareGC()), this)
        }, reposition: function (a, b) {
            var c = this;
            return c.__destroyed ? c.__destroyError() : "closed" != c.__state && d(c._$origin) && (b || d(c._$tooltip)) && (b || c._$tooltip.detach(), c.__Geometry = c.__geometry(), c._trigger({
                type: "reposition",
                event: a,
                helper: {geo: c.__Geometry}
            })), c
        }, show: function (a) {
            return this.open(a)
        }, status: function () {
            return {
                destroyed: this.__destroyed,
                enabled: this.__enabled,
                open: "closed" !== this.__state,
                state: this.__state
            }
        }, triggerHandler: function () {
            return this.__destroyed ? this.__destroyError() : this.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments)), this
        }
    }, a.fn.tooltipster = function () {
        var b = Array.prototype.slice.apply(arguments),
            c = "You are using a single HTML element as content for several tooltips. You probably want to set the contentCloning option to TRUE.";
        if (0 === this.length) return this;
        if ("string" == typeof b[0]) {
            var d = "#*$~&";
            return this.each(function () {
                var e = a(this).data("tooltipster-ns"), f = e ? a(this).data(e[0]) : null;
                if (!f) throw new Error("You called Tooltipster's \"" + b[0] + '" method on an uninitialized element');
                if ("function" != typeof f[b[0]]) throw new Error('Unknown method "' + b[0] + '"');
                this.length > 1 && "content" == b[0] && (b[1] instanceof a || "object" == typeof b[1] && null != b[1] && b[1].tagName) && !f.__options.contentCloning && f.__options.debug && console.log(c);
                var g = f[b[0]](b[1], b[2]);
                return g !== f || "instance" === b[0] ? (d = g, !1) : void 0
            }), "#*$~&" !== d ? d : this
        }
        a.tooltipster.__instancesLatestArr = [];
        var e = b[0] && void 0 !== b[0].multiple, g = e && b[0].multiple || !e && f.multiple,
            h = b[0] && void 0 !== b[0].content, i = h && b[0].content || !h && f.content,
            j = b[0] && void 0 !== b[0].contentCloning, k = j && b[0].contentCloning || !j && f.contentCloning,
            l = b[0] && void 0 !== b[0].debug, m = l && b[0].debug || !l && f.debug;
        return this.length > 1 && (i instanceof a || "object" == typeof i && null != i && i.tagName) && !k && m && console.log(c), this.each(function () {
            var c = !1, d = a(this), e = d.data("tooltipster-ns"), f = null;
            e ? g ? c = !0 : m && (console.log("Tooltipster: one or more tooltips are already attached to the element below. Ignoring."), console.log(this)) : c = !0, c && (f = new a.Tooltipster(this, b[0]), e || (e = []), e.push(f.__namespace), d.data("tooltipster-ns", e), d.data(f.__namespace, f), f.__options.functionInit && f.__options.functionInit.call(f, f, {origin: this}), f._trigger("init")), a.tooltipster.__instancesLatestArr.push(f)
        }), this
    }, b.prototype = {
        __init: function (b) {
            this.__$tooltip = b, this.__$tooltip.css({
                left: 0,
                overflow: "hidden",
                position: "absolute",
                top: 0
            }).find(".tooltipster-content").css("overflow", "auto"), this.$container = a('<div class="tooltipster-ruler"></div>').append(this.__$tooltip).appendTo(h.window.document.body)
        }, __forceRedraw: function () {
            var a = this.__$tooltip.parent();
            this.__$tooltip.detach(), this.__$tooltip.appendTo(a)
        }, constrain: function (a, b) {
            return this.constraints = {width: a, height: b}, this.__$tooltip.css({
                display: "block",
                height: "",
                overflow: "auto",
                width: a
            }), this
        }, destroy: function () {
            this.__$tooltip.detach().find(".tooltipster-content").css({
                display: "",
                overflow: ""
            }), this.$container.remove()
        }, free: function () {
            return this.constraints = null, this.__$tooltip.css({
                display: "",
                height: "",
                overflow: "visible",
                width: ""
            }), this
        }, measure: function () {
            this.__forceRedraw();
            var a = this.__$tooltip[0].getBoundingClientRect(),
                b = {size: {height: a.height || a.bottom - a.top, width: a.width || a.right - a.left}};
            if (this.constraints) {
                var c = this.__$tooltip.find(".tooltipster-content"), d = this.__$tooltip.outerHeight(),
                    e = c[0].getBoundingClientRect(), f = {
                        height: d <= this.constraints.height,
                        width: a.width <= this.constraints.width && e.width >= c[0].scrollWidth - 1
                    };
                b.fits = f.height && f.width
            }
            return h.IE && h.IE <= 11 && b.size.width !== h.window.document.documentElement.clientWidth && (b.size.width = Math.ceil(b.size.width) + 1), b
        }
    };
    var j = navigator.userAgent.toLowerCase();
    -1 != j.indexOf("msie") ? h.IE = parseInt(j.split("msie")[1]) : -1 !== j.toLowerCase().indexOf("trident") && -1 !== j.indexOf(" rv:11") ? h.IE = 11 : -1 != j.toLowerCase().indexOf("edge/") && (h.IE = parseInt(j.toLowerCase().split("edge/")[1]));
    var k = "tooltipster.sideTip";
    return a.tooltipster._plugin({
        name: k, instance: {
            __defaults: function () {
                return {
                    arrow: !0,
                    distance: 6,
                    functionPosition: null,
                    maxWidth: null,
                    minIntersection: 16,
                    minWidth: 0,
                    position: null,
                    side: "top",
                    viewportAware: !0
                }
            }, __init: function (a) {
                var b = this;
                b.__instance = a, b.__namespace = "tooltipster-sideTip-" + Math.round(1e6 * Math.random()), b.__previousState = "closed", b.__options, b.__optionsFormat(), b.__instance._on("state." + b.__namespace, function (a) {
                    "closed" == a.state ? b.__close() : "appearing" == a.state && "closed" == b.__previousState && b.__create(), b.__previousState = a.state
                }), b.__instance._on("options." + b.__namespace, function () {
                    b.__optionsFormat()
                }), b.__instance._on("reposition." + b.__namespace, function (a) {
                    b.__reposition(a.event, a.helper)
                })
            }, __close: function () {
                this.__instance.content() instanceof a && this.__instance.content().detach(), this.__instance._$tooltip.remove(), this.__instance._$tooltip = null
            }, __create: function () {
                var b = a('<div class="tooltipster-base tooltipster-sidetip"><div class="tooltipster-box"><div class="tooltipster-content"></div></div><div class="tooltipster-arrow"><div class="tooltipster-arrow-uncropped"><div class="tooltipster-arrow-border"></div><div class="tooltipster-arrow-background"></div></div></div></div>');
                this.__options.arrow || b.find(".tooltipster-box").css("margin", 0).end().find(".tooltipster-arrow").hide(), this.__options.minWidth && b.css("min-width", this.__options.minWidth + "px"), this.__options.maxWidth && b.css("max-width", this.__options.maxWidth + "px"),
                    this.__instance._$tooltip = b, this.__instance._trigger("created")
            }, __destroy: function () {
                this.__instance._off("." + self.__namespace)
            }, __optionsFormat: function () {
                var b = this;
                if (b.__options = b.__instance._optionsExtract(k, b.__defaults()), b.__options.position && (b.__options.side = b.__options.position), "object" != typeof b.__options.distance && (b.__options.distance = [b.__options.distance]), b.__options.distance.length < 4 && (void 0 === b.__options.distance[1] && (b.__options.distance[1] = b.__options.distance[0]), void 0 === b.__options.distance[2] && (b.__options.distance[2] = b.__options.distance[0]), void 0 === b.__options.distance[3] && (b.__options.distance[3] = b.__options.distance[1]), b.__options.distance = {
                    top: b.__options.distance[0],
                    right: b.__options.distance[1],
                    bottom: b.__options.distance[2],
                    left: b.__options.distance[3]
                }), "string" == typeof b.__options.side) {
                    var c = {top: "bottom", right: "left", bottom: "top", left: "right"};
                    b.__options.side = [b.__options.side, c[b.__options.side]], "left" == b.__options.side[0] || "right" == b.__options.side[0] ? b.__options.side.push("top", "bottom") : b.__options.side.push("right", "left")
                }
                6 === a.tooltipster._env.IE && b.__options.arrow !== !0 && (b.__options.arrow = !1)
            }, __reposition: function (b, c) {
                var d, e = this, f = e.__targetFind(c), g = [];
                e.__instance._$tooltip.detach();
                var h = e.__instance._$tooltip.clone(), i = a.tooltipster._getRuler(h), j = !1,
                    k = e.__instance.option("animation");
                switch (k && h.removeClass("tooltipster-" + k), a.each(["window", "document"], function (d, k) {
                    var l = null;
                    if (e.__instance._trigger({
                        container: k, helper: c, satisfied: j, takeTest: function (a) {
                            l = a
                        }, results: g, type: "positionTest"
                    }), 1 == l || 0 != l && 0 == j && ("window" != k || e.__options.viewportAware)) for (var d = 0; d < e.__options.side.length; d++) {
                        var m = {horizontal: 0, vertical: 0}, n = e.__options.side[d];
                        "top" == n || "bottom" == n ? m.vertical = e.__options.distance[n] : m.horizontal = e.__options.distance[n], e.__sideChange(h, n), a.each(["natural", "constrained"], function (a, d) {
                            if (l = null, e.__instance._trigger({
                                container: k,
                                event: b,
                                helper: c,
                                mode: d,
                                results: g,
                                satisfied: j,
                                side: n,
                                takeTest: function (a) {
                                    l = a
                                },
                                type: "positionTest"
                            }), 1 == l || 0 != l && 0 == j) {
                                var h = {
                                        container: k,
                                        distance: m,
                                        fits: null,
                                        mode: d,
                                        outerSize: null,
                                        side: n,
                                        size: null,
                                        target: f[n],
                                        whole: null
                                    },
                                    o = "natural" == d ? i.free() : i.constrain(c.geo.available[k][n].width - m.horizontal, c.geo.available[k][n].height - m.vertical),
                                    p = o.measure();
                                if (h.size = p.size, h.outerSize = {
                                    height: p.size.height + m.vertical,
                                    width: p.size.width + m.horizontal
                                }, "natural" == d ? c.geo.available[k][n].width >= h.outerSize.width && c.geo.available[k][n].height >= h.outerSize.height ? h.fits = !0 : h.fits = !1 : h.fits = p.fits, "window" == k && (h.fits ? "top" == n || "bottom" == n ? h.whole = c.geo.origin.windowOffset.right >= e.__options.minIntersection && c.geo.window.size.width - c.geo.origin.windowOffset.left >= e.__options.minIntersection : h.whole = c.geo.origin.windowOffset.bottom >= e.__options.minIntersection && c.geo.window.size.height - c.geo.origin.windowOffset.top >= e.__options.minIntersection : h.whole = !1), g.push(h), h.whole) j = !0; else if ("natural" == h.mode && (h.fits || h.size.width <= c.geo.available[k][n].width)) return !1
                            }
                        })
                    }
                }), e.__instance._trigger({
                    edit: function (a) {
                        g = a
                    }, event: b, helper: c, results: g, type: "positionTested"
                }), g.sort(function (a, b) {
                    if (a.whole && !b.whole) return -1;
                    if (!a.whole && b.whole) return 1;
                    if (a.whole && b.whole) {
                        var c = e.__options.side.indexOf(a.side), d = e.__options.side.indexOf(b.side);
                        return d > c ? -1 : c > d ? 1 : "natural" == a.mode ? -1 : 1
                    }
                    if (a.fits && !b.fits) return -1;
                    if (!a.fits && b.fits) return 1;
                    if (a.fits && b.fits) {
                        var c = e.__options.side.indexOf(a.side), d = e.__options.side.indexOf(b.side);
                        return d > c ? -1 : c > d ? 1 : "natural" == a.mode ? -1 : 1
                    }
                    return "document" == a.container && "bottom" == a.side && "natural" == a.mode ? -1 : 1
                }), d = g[0], d.coord = {}, d.side) {
                    case"left":
                    case"right":
                        d.coord.top = Math.floor(d.target - d.size.height / 2);
                        break;
                    case"bottom":
                    case"top":
                        d.coord.left = Math.floor(d.target - d.size.width / 2)
                }
                switch (d.side) {
                    case"left":
                        d.coord.left = c.geo.origin.windowOffset.left - d.outerSize.width;
                        break;
                    case"right":
                        d.coord.left = c.geo.origin.windowOffset.right + d.distance.horizontal;
                        break;
                    case"top":
                        d.coord.top = c.geo.origin.windowOffset.top - d.outerSize.height;
                        break;
                    case"bottom":
                        d.coord.top = c.geo.origin.windowOffset.bottom + d.distance.vertical
                }
                "window" == d.container ? "top" == d.side || "bottom" == d.side ? d.coord.left < 0 ? c.geo.origin.windowOffset.right - this.__options.minIntersection >= 0 ? d.coord.left = 0 : d.coord.left = c.geo.origin.windowOffset.right - this.__options.minIntersection - 1 : d.coord.left > c.geo.window.size.width - d.size.width && (c.geo.origin.windowOffset.left + this.__options.minIntersection <= c.geo.window.size.width ? d.coord.left = c.geo.window.size.width - d.size.width : d.coord.left = c.geo.origin.windowOffset.left + this.__options.minIntersection + 1 - d.size.width) : d.coord.top < 0 ? c.geo.origin.windowOffset.bottom - this.__options.minIntersection >= 0 ? d.coord.top = 0 : d.coord.top = c.geo.origin.windowOffset.bottom - this.__options.minIntersection - 1 : d.coord.top > c.geo.window.size.height - d.size.height && (c.geo.origin.windowOffset.top + this.__options.minIntersection <= c.geo.window.size.height ? d.coord.top = c.geo.window.size.height - d.size.height : d.coord.top = c.geo.origin.windowOffset.top + this.__options.minIntersection + 1 - d.size.height) : (d.coord.left > c.geo.window.size.width - d.size.width && (d.coord.left = c.geo.window.size.width - d.size.width), d.coord.left < 0 && (d.coord.left = 0)), e.__sideChange(h, d.side), c.tooltipClone = h[0], c.tooltipParent = e.__instance.option("parent").parent[0], c.mode = d.mode, c.whole = d.whole, c.origin = e.__instance._$origin[0], c.tooltip = e.__instance._$tooltip[0], delete d.container, delete d.fits, delete d.mode, delete d.outerSize, delete d.whole, d.distance = d.distance.horizontal || d.distance.vertical;
                var l = a.extend(!0, {}, d);
                if (e.__instance._trigger({
                    edit: function (a) {
                        d = a
                    }, event: b, helper: c, position: l, type: "position"
                }), e.__options.functionPosition) {
                    var m = e.__options.functionPosition.call(e, e.__instance, c, l);
                    m && (d = m)
                }
                i.destroy();
                var n, o;
                "top" == d.side || "bottom" == d.side ? (n = {
                    prop: "left",
                    val: d.target - d.coord.left
                }, o = d.size.width - this.__options.minIntersection) : (n = {
                    prop: "top",
                    val: d.target - d.coord.top
                }, o = d.size.height - this.__options.minIntersection), n.val < this.__options.minIntersection ? n.val = this.__options.minIntersection : n.val > o && (n.val = o);
                var p;
                p = c.geo.origin.fixedLineage ? c.geo.origin.windowOffset : {
                    left: c.geo.origin.windowOffset.left + c.geo.window.scroll.left,
                    top: c.geo.origin.windowOffset.top + c.geo.window.scroll.top
                }, d.coord = {
                    left: p.left + (d.coord.left - c.geo.origin.windowOffset.left),
                    top: p.top + (d.coord.top - c.geo.origin.windowOffset.top)
                }, e.__sideChange(e.__instance._$tooltip, d.side), c.geo.origin.fixedLineage ? e.__instance._$tooltip.css("position", "fixed") : e.__instance._$tooltip.css("position", ""), e.__instance._$tooltip.css({
                    left: d.coord.left,
                    top: d.coord.top,
                    height: d.size.height,
                    width: d.size.width
                }).find(".tooltipster-arrow").css({
                    left: "",
                    top: ""
                }).css(n.prop, n.val), e.__instance._$tooltip.appendTo(e.__instance.option("parent")), e.__instance._trigger({
                    type: "repositioned",
                    event: b,
                    position: d
                })
            }, __sideChange: function (a, b) {
                a.removeClass("tooltipster-bottom").removeClass("tooltipster-left").removeClass("tooltipster-right").removeClass("tooltipster-top").addClass("tooltipster-" + b)
            }, __targetFind: function (a) {
                var b = {}, c = this.__instance._$origin[0].getClientRects();
                if (c.length > 1) {
                    var d = this.__instance._$origin.css("opacity");
                    1 == d && (this.__instance._$origin.css("opacity", .99), c = this.__instance._$origin[0].getClientRects(), this.__instance._$origin.css("opacity", 1))
                }
                if (c.length < 2) b.top = Math.floor(a.geo.origin.windowOffset.left + a.geo.origin.size.width / 2), b.bottom = b.top, b.left = Math.floor(a.geo.origin.windowOffset.top + a.geo.origin.size.height / 2), b.right = b.left; else {
                    var e = c[0];
                    b.top = Math.floor(e.left + (e.right - e.left) / 2), e = c.length > 2 ? c[Math.ceil(c.length / 2) - 1] : c[0], b.right = Math.floor(e.top + (e.bottom - e.top) / 2), e = c[c.length - 1], b.bottom = Math.floor(e.left + (e.right - e.left) / 2), e = c.length > 2 ? c[Math.ceil((c.length + 1) / 2) - 1] : c[c.length - 1], b.left = Math.floor(e.top + (e.bottom - e.top) / 2)
                }
                return b
            }
        }
    }), a
});
/*!
 * clipboard.js v1.7.1
 * https://zenorocha.github.io/clipboard.js
 *
 * Licensed MIT © Zeno Rocha
 */
!function (t) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = t(); else if ("function" == typeof define && define.amd) define([], t); else {
        var e;
        e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, e.Clipboard = t()
    }
}(function () {
    var t, e, n;
    return function t(e, n, o) {
        function i(a, c) {
            if (!n[a]) {
                if (!e[a]) {
                    var l = "function" == typeof require && require;
                    if (!c && l) return l(a, !0);
                    if (r) return r(a, !0);
                    var s = new Error("Cannot find module '" + a + "'");
                    throw s.code = "MODULE_NOT_FOUND", s
                }
                var u = n[a] = {exports: {}};
                e[a][0].call(u.exports, function (t) {
                    var n = e[a][1][t];
                    return i(n || t)
                }, u, u.exports, t, e, n, o)
            }
            return n[a].exports
        }

        for (var r = "function" == typeof require && require, a = 0; a < o.length; a++) i(o[a]);
        return i
    }({
        1: [function (t, e, n) {
            function o(t, e) {
                for (; t && t.nodeType !== i;) {
                    if ("function" == typeof t.matches && t.matches(e)) return t;
                    t = t.parentNode
                }
            }

            var i = 9;
            if ("undefined" != typeof Element && !Element.prototype.matches) {
                var r = Element.prototype;
                r.matches = r.matchesSelector || r.mozMatchesSelector || r.msMatchesSelector || r.oMatchesSelector || r.webkitMatchesSelector
            }
            e.exports = o
        }, {}], 2: [function (t, e, n) {
            function o(t, e, n, o, r) {
                var a = i.apply(this, arguments);
                return t.addEventListener(n, a, r), {
                    destroy: function () {
                        t.removeEventListener(n, a, r)
                    }
                }
            }

            function i(t, e, n, o) {
                return function (n) {
                    n.delegateTarget = r(n.target, e), n.delegateTarget && o.call(t, n)
                }
            }

            var r = t("./closest");
            e.exports = o
        }, {"./closest": 1}], 3: [function (t, e, n) {
            n.node = function (t) {
                return void 0 !== t && t instanceof HTMLElement && 1 === t.nodeType
            }, n.nodeList = function (t) {
                var e = Object.prototype.toString.call(t);
                return void 0 !== t && ("[object NodeList]" === e || "[object HTMLCollection]" === e) && "length" in t && (0 === t.length || n.node(t[0]))
            }, n.string = function (t) {
                return "string" == typeof t || t instanceof String
            }, n.fn = function (t) {
                return "[object Function]" === Object.prototype.toString.call(t)
            }
        }, {}], 4: [function (t, e, n) {
            function o(t, e, n) {
                if (!t && !e && !n) throw new Error("Missing required arguments");
                if (!c.string(e)) throw new TypeError("Second argument must be a String");
                if (!c.fn(n)) throw new TypeError("Third argument must be a Function");
                if (c.node(t)) return i(t, e, n);
                if (c.nodeList(t)) return r(t, e, n);
                if (c.string(t)) return a(t, e, n);
                throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")
            }

            function i(t, e, n) {
                return t.addEventListener(e, n), {
                    destroy: function () {
                        t.removeEventListener(e, n)
                    }
                }
            }

            function r(t, e, n) {
                return Array.prototype.forEach.call(t, function (t) {
                    t.addEventListener(e, n)
                }), {
                    destroy: function () {
                        Array.prototype.forEach.call(t, function (t) {
                            t.removeEventListener(e, n)
                        })
                    }
                }
            }

            function a(t, e, n) {
                return l(document.body, t, e, n)
            }

            var c = t("./is"), l = t("delegate");
            e.exports = o
        }, {"./is": 3, delegate: 2}], 5: [function (t, e, n) {
            function o(t) {
                var e;
                if ("SELECT" === t.nodeName) t.focus(), e = t.value; else if ("INPUT" === t.nodeName || "TEXTAREA" === t.nodeName) {
                    var n = t.hasAttribute("readonly");
                    n || t.setAttribute("readonly", ""), t.select(), t.setSelectionRange(0, t.value.length), n || t.removeAttribute("readonly"), e = t.value
                } else {
                    t.hasAttribute("contenteditable") && t.focus();
                    var o = window.getSelection(), i = document.createRange();
                    i.selectNodeContents(t), o.removeAllRanges(), o.addRange(i), e = o.toString()
                }
                return e
            }

            e.exports = o
        }, {}], 6: [function (t, e, n) {
            function o() {
            }

            o.prototype = {
                on: function (t, e, n) {
                    var o = this.e || (this.e = {});
                    return (o[t] || (o[t] = [])).push({fn: e, ctx: n}), this
                }, once: function (t, e, n) {
                    function o() {
                        i.off(t, o), e.apply(n, arguments)
                    }

                    var i = this;
                    return o._ = e, this.on(t, o, n)
                }, emit: function (t) {
                    var e = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[t] || []).slice(), o = 0,
                        i = n.length;
                    for (o; o < i; o++) n[o].fn.apply(n[o].ctx, e);
                    return this
                }, off: function (t, e) {
                    var n = this.e || (this.e = {}), o = n[t], i = [];
                    if (o && e) for (var r = 0, a = o.length; r < a; r++) o[r].fn !== e && o[r].fn._ !== e && i.push(o[r]);
                    return i.length ? n[t] = i : delete n[t], this
                }
            }, e.exports = o
        }, {}], 7: [function (e, n, o) {
            !function (i, r) {
                if ("function" == typeof t && t.amd) t(["module", "select"], r); else if (void 0 !== o) r(n, e("select")); else {
                    var a = {exports: {}};
                    r(a, i.select), i.clipboardAction = a.exports
                }
            }(this, function (t, e) {
                "use strict";

                function n(t) {
                    return t && t.__esModule ? t : {default: t}
                }

                function o(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }

                var i = n(e), r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
                    return typeof t
                } : function (t) {
                    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                }, a = function () {
                    function t(t, e) {
                        for (var n = 0; n < e.length; n++) {
                            var o = e[n];
                            o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o)
                        }
                    }

                    return function (e, n, o) {
                        return n && t(e.prototype, n), o && t(e, o), e
                    }
                }(), c = function () {
                    function t(e) {
                        o(this, t), this.resolveOptions(e), this.initSelection()
                    }

                    return a(t, [{
                        key: "resolveOptions", value: function t() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            this.action = e.action, this.container = e.container, this.emitter = e.emitter, this.target = e.target, this.text = e.text, this.trigger = e.trigger, this.selectedText = ""
                        }
                    }, {
                        key: "initSelection", value: function t() {
                            this.text ? this.selectFake() : this.target && this.selectTarget()
                        }
                    }, {
                        key: "selectFake", value: function t() {
                            var e = this, n = "rtl" == document.documentElement.getAttribute("dir");
                            this.removeFake(), this.fakeHandlerCallback = function () {
                                return e.removeFake()
                            }, this.fakeHandler = this.container.addEventListener("click", this.fakeHandlerCallback) || !0, this.fakeElem = document.createElement("textarea"), this.fakeElem.style.fontSize = "12pt", this.fakeElem.style.border = "0", this.fakeElem.style.padding = "0", this.fakeElem.style.margin = "0", this.fakeElem.style.position = "absolute", this.fakeElem.style[n ? "right" : "left"] = "-9999px";
                            var o = window.pageYOffset || document.documentElement.scrollTop;
                            this.fakeElem.style.top = o + "px", this.fakeElem.setAttribute("readonly", ""), this.fakeElem.value = this.text, this.container.appendChild(this.fakeElem), this.selectedText = (0, i.default)(this.fakeElem), this.copyText()
                        }
                    }, {
                        key: "removeFake", value: function t() {
                            this.fakeHandler && (this.container.removeEventListener("click", this.fakeHandlerCallback), this.fakeHandler = null, this.fakeHandlerCallback = null), this.fakeElem && (this.container.removeChild(this.fakeElem), this.fakeElem = null)
                        }
                    }, {
                        key: "selectTarget", value: function t() {
                            this.selectedText = (0, i.default)(this.target), this.copyText()
                        }
                    }, {
                        key: "copyText", value: function t() {
                            var e = void 0;
                            try {
                                e = document.execCommand(this.action)
                            } catch (t) {
                                e = !1
                            }
                            this.handleResult(e)
                        }
                    }, {
                        key: "handleResult", value: function t(e) {
                            this.emitter.emit(e ? "success" : "error", {
                                action: this.action,
                                text: this.selectedText,
                                trigger: this.trigger,
                                clearSelection: this.clearSelection.bind(this)
                            })
                        }
                    }, {
                        key: "clearSelection", value: function t() {
                            this.trigger && this.trigger.focus(), window.getSelection().removeAllRanges()
                        }
                    }, {
                        key: "destroy", value: function t() {
                            this.removeFake()
                        }
                    }, {
                        key: "action", set: function t() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "copy";
                            if (this._action = e, "copy" !== this._action && "cut" !== this._action) throw new Error('Invalid "action" value, use either "copy" or "cut"')
                        }, get: function t() {
                            return this._action
                        }
                    }, {
                        key: "target", set: function t(e) {
                            if (void 0 !== e) {
                                if (!e || "object" !== (void 0 === e ? "undefined" : r(e)) || 1 !== e.nodeType) throw new Error('Invalid "target" value, use a valid Element');
                                if ("copy" === this.action && e.hasAttribute("disabled")) throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                                if ("cut" === this.action && (e.hasAttribute("readonly") || e.hasAttribute("disabled"))) throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                                this._target = e
                            }
                        }, get: function t() {
                            return this._target
                        }
                    }]), t
                }();
                t.exports = c
            })
        }, {select: 5}], 8: [function (e, n, o) {
            !function (i, r) {
                if ("function" == typeof t && t.amd) t(["module", "./clipboard-action", "tiny-emitter", "good-listener"], r); else if (void 0 !== o) r(n, e("./clipboard-action"), e("tiny-emitter"), e("good-listener")); else {
                    var a = {exports: {}};
                    r(a, i.clipboardAction, i.tinyEmitter, i.goodListener), i.clipboard = a.exports
                }
            }(this, function (t, e, n, o) {
                "use strict";

                function i(t) {
                    return t && t.__esModule ? t : {default: t}
                }

                function r(t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }

                function a(t, e) {
                    if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !e || "object" != typeof e && "function" != typeof e ? t : e
                }

                function c(t, e) {
                    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
                    t.prototype = Object.create(e && e.prototype, {
                        constructor: {
                            value: t,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e)
                }

                function l(t, e) {
                    var n = "data-clipboard-" + t;
                    if (e.hasAttribute(n)) return e.getAttribute(n)
                }

                var s = i(e), u = i(n), f = i(o),
                    d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
                        return typeof t
                    } : function (t) {
                        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
                    }, h = function () {
                        function t(t, e) {
                            for (var n = 0; n < e.length; n++) {
                                var o = e[n];
                                o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o)
                            }
                        }

                        return function (e, n, o) {
                            return n && t(e.prototype, n), o && t(e, o), e
                        }
                    }(), p = function (t) {
                        function e(t, n) {
                            r(this, e);
                            var o = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this));
                            return o.resolveOptions(n), o.listenClick(t), o
                        }

                        return c(e, t), h(e, [{
                            key: "resolveOptions", value: function t() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                                this.action = "function" == typeof e.action ? e.action : this.defaultAction, this.target = "function" == typeof e.target ? e.target : this.defaultTarget, this.text = "function" == typeof e.text ? e.text : this.defaultText, this.container = "object" === d(e.container) ? e.container : document.body
                            }
                        }, {
                            key: "listenClick", value: function t(e) {
                                var n = this;
                                this.listener = (0, f.default)(e, "click", function (t) {
                                    return n.onClick(t)
                                })
                            }
                        }, {
                            key: "onClick", value: function t(e) {
                                var n = e.delegateTarget || e.currentTarget;
                                this.clipboardAction && (this.clipboardAction = null), this.clipboardAction = new s.default({
                                    action: this.action(n),
                                    target: this.target(n),
                                    text: this.text(n),
                                    container: this.container,
                                    trigger: n,
                                    emitter: this
                                })
                            }
                        }, {
                            key: "defaultAction", value: function t(e) {
                                return l("action", e)
                            }
                        }, {
                            key: "defaultTarget", value: function t(e) {
                                var n = l("target", e);
                                if (n) return document.querySelector(n)
                            }
                        }, {
                            key: "defaultText", value: function t(e) {
                                return l("text", e)
                            }
                        }, {
                            key: "destroy", value: function t() {
                                this.listener.destroy(), this.clipboardAction && (this.clipboardAction.destroy(), this.clipboardAction = null)
                            }
                        }], [{
                            key: "isSupported", value: function t() {
                                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ["copy", "cut"],
                                    n = "string" == typeof e ? [e] : e, o = !!document.queryCommandSupported;
                                return n.forEach(function (t) {
                                    o = o && !!document.queryCommandSupported(t)
                                }), o
                            }
                        }]), e
                    }(u.default);
                t.exports = p
            })
        }, {"./clipboard-action": 7, "good-listener": 4, "tiny-emitter": 6}]
    }, {}, [8])(8)
});
/**
 * TinySort is a small script that sorts HTML elements. It sorts by text- or attribute value, or by that of one of it's children.
 * @summary A nodeElement sorting script.
 * @version 2.3.6
 * @license MIT
 * @author Ron Valstar <ron@ronvalstar.nl>
 * @copyright Ron Valstar <ron@ronvalstar.nl>
 * @namespace tinysort
 */
!function (e, t) {
    "use strict";

    function r() {
        return t
    }

    "function" == typeof define && define.amd ? define("tinysort", r) : e.tinysort = t
}(this, function () {
    "use strict";

    function e(e, n) {
        function s() {
            0 === arguments.length ? v({}) : t(arguments, function (e) {
                v(x(e) ? {selector: e} : e)
            }), d = $.length
        }

        function v(e) {
            var t = !!e.selector, n = t && ":" === e.selector[0], o = r(e || {}, m);
            $.push(r({
                hasSelector: t,
                hasAttr: !(o.attr === l || "" === o.attr),
                hasData: o.data !== l,
                hasFilter: n,
                sortReturnNumber: "asc" === o.order ? 1 : -1
            }, o))
        }

        function S() {
            t(e, function (e, t) {
                M ? M !== e.parentNode && (k = !1) : M = e.parentNode;
                var r = $[0], n = r.hasFilter, o = r.selector,
                    a = !o || n && e.matchesSelector(o) || o && e.querySelector(o), l = a ? R : V,
                    s = {elm: e, pos: t, posn: l.length};
                B.push(s), l.push(s)
            }), D = R.slice(0)
        }

        function y(e, t, r) {
            for (var n = r(e.toString()), o = r(t.toString()), a = 0; n[a] && o[a]; a++) if (n[a] !== o[a]) {
                var l = Number(n[a]), s = Number(o[a]);
                return l == n[a] && s == o[a] ? l - s : n[a] > o[a] ? 1 : -1
            }
            return n.length - o.length
        }

        function N(e) {
            for (var t, r, n = [], o = 0, a = -1, l = 0; t = (r = e.charAt(o++)).charCodeAt(0);) {
                var s = 46 == t || t >= 48 && 57 >= t;
                s !== l && (n[++a] = "", l = s), n[a] += r
            }
            return n
        }

        function C(e, r) {
            var n = 0;
            for (0 !== p && (p = 0); 0 === n && d > p;) {
                var l = $[p], s = l.ignoreDashes ? f : u;
                if (t(h, function (e) {
                    var t = e.prepare;
                    t && t(l)
                }), l.sortFunction) n = l.sortFunction(e, r); else if ("rand" == l.order) n = Math.random() < .5 ? 1 : -1; else {
                    var c = a, g = w(e, l), m = w(r, l), v = "" === g || g === o, S = "" === m || m === o;
                    if (g === m) n = 0; else if (l.emptyEnd && (v || S)) n = v && S ? 0 : v ? 1 : -1; else {
                        if (!l.forceStrings) {
                            var C = x(g) ? g && g.match(s) : a, b = x(m) ? m && m.match(s) : a;
                            if (C && b) {
                                var A = g.substr(0, g.length - C[0].length), F = m.substr(0, m.length - b[0].length);
                                A == F && (c = !a, g = i(C[0]), m = i(b[0]))
                            }
                        }
                        n = g === o || m === o ? 0 : l.natural && (isNaN(g) || isNaN(m)) ? y(g, m, N) : m > g ? -1 : g > m ? 1 : 0
                    }
                }
                t(h, function (e) {
                    var t = e.sort;
                    t && (n = t(l, c, g, m, n))
                }), n *= l.sortReturnNumber, 0 === n && p++
            }
            return 0 === n && (n = e.pos > r.pos ? 1 : -1), n
        }

        function b() {
            var e = R.length === B.length;
            if (k && e) O ? R.forEach(function (e, t) {
                e.elm.style.order = t
            }) : M ? M.appendChild(A()) : console.warn("parentNode has been removed"); else {
                var t = $[0], r = t.place, n = "org" === r, o = "start" === r, a = "end" === r, l = "first" === r,
                    s = "last" === r;
                if (n) R.forEach(F), R.forEach(function (e, t) {
                    E(D[t], e.elm)
                }); else if (o || a) {
                    var c = D[o ? 0 : D.length - 1], i = c && c.elm.parentNode,
                        u = i && (o && i.firstChild || i.lastChild);
                    u && (u !== c.elm && (c = {elm: u}), F(c), a && i.appendChild(c.ghost), E(c, A()))
                } else if (l || s) {
                    var f = D[l ? 0 : D.length - 1];
                    E(F(f), A())
                }
            }
        }

        function A() {
            return R.forEach(function (e) {
                q.appendChild(e.elm)
            }), q
        }

        function F(e) {
            var t = e.elm, r = c.createElement("div");
            return e.ghost = r, t.parentNode.insertBefore(r, t), e
        }

        function E(e, t) {
            var r = e.ghost, n = r.parentNode;
            n.insertBefore(t, r), n.removeChild(r), delete e.ghost
        }

        function w(e, t) {
            var r, n = e.elm;
            return t.selector && (t.hasFilter ? n.matchesSelector(t.selector) || (n = l) : n = n.querySelector(t.selector)), t.hasAttr ? r = n.getAttribute(t.attr) : t.useVal ? r = n.value || n.getAttribute("value") : t.hasData ? r = n.getAttribute("data-" + t.data) : n && (r = n.textContent), x(r) && (t.cases || (r = r.toLowerCase()), r = r.replace(/\s+/g, " ")), null === r && (r = g), r
        }

        function x(e) {
            return "string" == typeof e
        }

        x(e) && (e = c.querySelectorAll(e)), 0 === e.length && console.warn("No elements to sort");
        var D, M, q = c.createDocumentFragment(), B = [], R = [], V = [], $ = [], k = !0,
            z = e.length && e[0].parentNode, L = z.rootNode !== document,
            O = e.length && (n === o || n.useFlex !== !1) && !L && -1 !== getComputedStyle(z, null).display.indexOf("flex");
        return s.apply(l, Array.prototype.slice.call(arguments, 1)), S(), R.sort(C), b(), R.map(function (e) {
            return e.elm
        })
    }

    function t(e, t) {
        for (var r, n = e.length, o = n; o--;) r = n - o - 1, t(e[r], r)
    }

    function r(e, t, r) {
        for (var n in t) (r || e[n] === o) && (e[n] = t[n]);
        return e
    }

    function n(e, t, r) {
        h.push({prepare: e, sort: t, sortBy: r})
    }

    var o, a = !1, l = null, s = window, c = s.document, i = parseFloat, u = /(-?\d+\.?\d*)\s*$/g,
        f = /(\d+\.?\d*)\s*$/g, h = [], d = 0, p = 0, g = String.fromCharCode(4095), m = {
            selector: l,
            order: "asc",
            attr: l,
            data: l,
            useVal: a,
            place: "org",
            returns: a,
            cases: a,
            natural: a,
            forceStrings: a,
            ignoreDashes: a,
            sortFunction: l,
            useFlex: a,
            emptyEnd: a
        };
    return s.Element && function (e) {
        e.matchesSelector = e.matchesSelector || e.mozMatchesSelector || e.msMatchesSelector || e.oMatchesSelector || e.webkitMatchesSelector || function (e) {
            for (var t = this, r = (t.parentNode || t.document).querySelectorAll(e), n = -1; r[++n] && r[n] != t;) ;
            return !!r[n]
        }
    }(Element.prototype), r(n, {loop: t}), r(e, {plugin: n, defaults: m})
}());
/*! ScrollMagic v2.0.6 | (c) 2018 Jan Paepke (@janpaepke) | license & info: http://scrollmagic.io */
!function (e, t) {
    "function" == typeof define && define.amd ? define(t) : "object" == typeof exports ? module.exports = t() : e.ScrollMagic = t()
}(this, function () {
    "use strict";
    var e = function () {
    };
    e.version = "2.0.6", window.addEventListener("mousewheel", function () {
    });
    var t = "data-scrollmagic-pin-spacer";
    e.Controller = function (r) {
        var o, s, a = "ScrollMagic.Controller", l = "FORWARD", c = "REVERSE", f = "PAUSED", u = n.defaults, d = this,
            h = i.extend({}, u, r), g = [], p = !1, v = 0, m = f, w = !0, y = 0, S = !0, b = function () {
                for (var e in h) u.hasOwnProperty(e) || delete h[e];
                if (h.container = i.get.elements(h.container)[0], !h.container) throw a + " init failed.";
                w = h.container === window || h.container === document.body || !document.body.contains(h.container), w && (h.container = window), y = z(), h.container.addEventListener("resize", T), h.container.addEventListener("scroll", T);
                var t = parseInt(h.refreshInterval, 10);
                h.refreshInterval = i.type.Number(t) ? t : u.refreshInterval, E()
            }, E = function () {
                h.refreshInterval > 0 && (s = window.setTimeout(A, h.refreshInterval))
            }, x = function () {
                return h.vertical ? i.get.scrollTop(h.container) : i.get.scrollLeft(h.container)
            }, z = function () {
                return h.vertical ? i.get.height(h.container) : i.get.width(h.container)
            }, C = this._setScrollPos = function (e) {
                h.vertical ? w ? window.scrollTo(i.get.scrollLeft(), e) : h.container.scrollTop = e : w ? window.scrollTo(e, i.get.scrollTop()) : h.container.scrollLeft = e
            }, F = function () {
                if (S && p) {
                    var e = i.type.Array(p) ? p : g.slice(0);
                    p = !1;
                    var t = v;
                    v = d.scrollPos();
                    var n = v - t;
                    0 !== n && (m = n > 0 ? l : c), m === c && e.reverse(), e.forEach(function (e) {
                        e.update(!0)
                    })
                }
            }, L = function () {
                o = i.rAF(F)
            }, T = function (e) {
                "resize" == e.type && (y = z(), m = f), p !== !0 && (p = !0, L())
            }, A = function () {
                if (!w && y != z()) {
                    var e;
                    try {
                        e = new Event("resize", {bubbles: !1, cancelable: !1})
                    } catch (t) {
                        e = document.createEvent("Event"), e.initEvent("resize", !1, !1)
                    }
                    h.container.dispatchEvent(e)
                }
                g.forEach(function (e) {
                    e.refresh()
                }), E()
            };
        this._options = h;
        var N = function (e) {
            if (e.length <= 1) return e;
            var t = e.slice(0);
            return t.sort(function (e, t) {
                return e.scrollOffset() > t.scrollOffset() ? 1 : -1
            }), t
        };
        return this.addScene = function (t) {
            if (i.type.Array(t)) t.forEach(function (e) {
                d.addScene(e)
            }); else if (t instanceof e.Scene) if (t.controller() !== d) t.addTo(d); else if (g.indexOf(t) < 0) {
                g.push(t), g = N(g), t.on("shift.controller_sort", function () {
                    g = N(g)
                });
                for (var n in h.globalSceneOptions) t[n] && t[n].call(t, h.globalSceneOptions[n])
            }
            return d
        }, this.removeScene = function (e) {
            if (i.type.Array(e)) e.forEach(function (e) {
                d.removeScene(e)
            }); else {
                var t = g.indexOf(e);
                t > -1 && (e.off("shift.controller_sort"), g.splice(t, 1), e.remove())
            }
            return d
        }, this.updateScene = function (t, n) {
            return i.type.Array(t) ? t.forEach(function (e) {
                d.updateScene(e, n)
            }) : n ? t.update(!0) : p !== !0 && t instanceof e.Scene && (p = p || [], -1 == p.indexOf(t) && p.push(t), p = N(p), L()), d
        }, this.update = function (e) {
            return T({type: "resize"}), e && F(), d
        }, this.scrollTo = function (n, r) {
            if (i.type.Number(n)) C.call(h.container, n, r); else if (n instanceof e.Scene) n.controller() === d && d.scrollTo(n.scrollOffset(), r); else if (i.type.Function(n)) C = n; else {
                var o = i.get.elements(n)[0];
                if (o) {
                    for (; o.parentNode.hasAttribute(t);) o = o.parentNode;
                    var s = h.vertical ? "top" : "left", a = i.get.offset(h.container), l = i.get.offset(o);
                    w || (a[s] -= d.scrollPos()), d.scrollTo(l[s] - a[s], r)
                }
            }
            return d
        }, this.scrollPos = function (e) {
            return arguments.length ? (i.type.Function(e) && (x = e), d) : x.call(d)
        }, this.info = function (e) {
            var t = {
                size: y,
                vertical: h.vertical,
                scrollPos: v,
                scrollDirection: m,
                container: h.container,
                isDocument: w
            };
            return arguments.length ? void 0 !== t[e] ? t[e] : void 0 : t
        }, this.loglevel = function () {
            return d
        }, this.enabled = function (e) {
            return arguments.length ? (S != e && (S = !!e, d.updateScene(g, !0)), d) : S
        }, this.destroy = function (e) {
            window.clearTimeout(s);
            for (var t = g.length; t--;) g[t].destroy(e);
            return h.container.removeEventListener("resize", T), h.container.removeEventListener("scroll", T), i.cAF(o), null
        }, b(), d
    };
    var n = {defaults: {container: window, vertical: !0, globalSceneOptions: {}, loglevel: 2, refreshInterval: 100}};
    e.Controller.addOption = function (e, t) {
        n.defaults[e] = t
    }, e.Controller.extend = function (t) {
        var n = this;
        e.Controller = function () {
            return n.apply(this, arguments), this.$super = i.extend({}, this), t.apply(this, arguments) || this
        }, i.extend(e.Controller, n), e.Controller.prototype = n.prototype, e.Controller.prototype.constructor = e.Controller
    }, e.Scene = function (n) {
        var o, s, a = "BEFORE", l = "DURING", c = "AFTER", f = r.defaults, u = this, d = i.extend({}, f, n), h = a,
            g = 0, p = {start: 0, end: 0}, v = 0, m = !0, w = function () {
                for (var e in d) f.hasOwnProperty(e) || delete d[e];
                for (var t in f) L(t);
                C()
            }, y = {};
        this.on = function (e, t) {
            return i.type.Function(t) && (e = e.trim().split(" "), e.forEach(function (e) {
                var n = e.split("."), r = n[0], i = n[1];
                "*" != r && (y[r] || (y[r] = []), y[r].push({namespace: i || "", callback: t}))
            })), u
        }, this.off = function (e, t) {
            return e ? (e = e.trim().split(" "), e.forEach(function (e) {
                var n = e.split("."), r = n[0], i = n[1] || "", o = "*" === r ? Object.keys(y) : [r];
                o.forEach(function (e) {
                    for (var n = y[e] || [], r = n.length; r--;) {
                        var o = n[r];
                        !o || i !== o.namespace && "*" !== i || t && t != o.callback || n.splice(r, 1)
                    }
                    n.length || delete y[e]
                })
            }), u) : u
        }, this.trigger = function (t, n) {
            if (t) {
                var r = t.trim().split("."), i = r[0], o = r[1], s = y[i];
                s && s.forEach(function (t) {
                    o && o !== t.namespace || t.callback.call(u, new e.Event(i, t.namespace, u, n))
                })
            }
            return u
        }, u.on("change.internal", function (e) {
            "loglevel" !== e.what && "tweenChanges" !== e.what && ("triggerElement" === e.what ? E() : "reverse" === e.what && u.update())
        }).on("shift.internal", function () {
            S(), u.update()
        }), this.addTo = function (t) {
            return t instanceof e.Controller && s != t && (s && s.removeScene(u), s = t, C(), b(!0), E(!0), S(), s.info("container").addEventListener("resize", x), t.addScene(u), u.trigger("add", {controller: s}), u.update()), u
        }, this.enabled = function (e) {
            return arguments.length ? (m != e && (m = !!e, u.update(!0)), u) : m
        }, this.remove = function () {
            if (s) {
                s.info("container").removeEventListener("resize", x);
                var e = s;
                s = void 0, e.removeScene(u), u.trigger("remove")
            }
            return u
        }, this.destroy = function (e) {
            return u.trigger("destroy", {reset: e}), u.remove(), u.off("*.*"), null
        }, this.update = function (e) {
            if (s) if (e) if (s.enabled() && m) {
                var t, n = s.info("scrollPos");
                t = d.duration > 0 ? (n - p.start) / (p.end - p.start) : n >= p.start ? 1 : 0, u.trigger("update", {
                    startPos: p.start,
                    endPos: p.end,
                    scrollPos: n
                }), u.progress(t)
            } else T && h === l && N(!0); else s.updateScene(u, !1);
            return u
        }, this.refresh = function () {
            return b(), E(), u
        }, this.progress = function (e) {
            if (arguments.length) {
                var t = !1, n = h, r = s ? s.info("scrollDirection") : "PAUSED", i = d.reverse || e >= g;
                if (0 === d.duration ? (t = g != e, g = 1 > e && i ? 0 : 1, h = 0 === g ? a : l) : 0 > e && h !== a && i ? (g = 0, h = a, t = !0) : e >= 0 && 1 > e && i ? (g = e, h = l, t = !0) : e >= 1 && h !== c ? (g = 1, h = c, t = !0) : h !== l || i || N(), t) {
                    var o = {progress: g, state: h, scrollDirection: r}, f = h != n, p = function (e) {
                        u.trigger(e, o)
                    };
                    f && n !== l && (p("enter"), p(n === a ? "start" : "end")), p("progress"), f && h !== l && (p(h === a ? "start" : "end"), p("leave"))
                }
                return u
            }
            return g
        };
        var S = function () {
            p = {start: v + d.offset}, s && d.triggerElement && (p.start -= s.info("size") * d.triggerHook), p.end = p.start + d.duration
        }, b = function (e) {
            if (o) {
                var t = "duration";
                F(t, o.call(u)) && !e && (u.trigger("change", {what: t, newval: d[t]}), u.trigger("shift", {reason: t}))
            }
        }, E = function (e) {
            var n = 0, r = d.triggerElement;
            if (s && (r || v > 0)) {
                if (r) if (r.parentNode) {
                    for (var o = s.info(), a = i.get.offset(o.container), l = o.vertical ? "top" : "left"; r.parentNode.hasAttribute(t);) r = r.parentNode;
                    var c = i.get.offset(r);
                    o.isDocument || (a[l] -= s.scrollPos()), n = c[l] - a[l]
                } else u.triggerElement(void 0);
                var f = n != v;
                v = n, f && !e && u.trigger("shift", {reason: "triggerElementPosition"})
            }
        }, x = function () {
            d.triggerHook > 0 && u.trigger("shift", {reason: "containerResize"})
        }, z = i.extend(r.validate, {
            duration: function (e) {
                if (i.type.String(e) && e.match(/^(\.|\d)*\d+%$/)) {
                    var t = parseFloat(e) / 100;
                    e = function () {
                        return s ? s.info("size") * t : 0
                    }
                }
                if (i.type.Function(e)) {
                    o = e;
                    try {
                        e = parseFloat(o())
                    } catch (n) {
                        e = -1
                    }
                }
                if (e = parseFloat(e), !i.type.Number(e) || 0 > e) throw o ? (o = void 0, 0) : 0;
                return e
            }
        }), C = function (e) {
            e = arguments.length ? [e] : Object.keys(z), e.forEach(function (e) {
                var t;
                if (z[e]) try {
                    t = z[e](d[e])
                } catch (n) {
                    t = f[e]
                } finally {
                    d[e] = t
                }
            })
        }, F = function (e, t) {
            var n = !1, r = d[e];
            return d[e] != t && (d[e] = t, C(e), n = r != d[e]), n
        }, L = function (e) {
            u[e] || (u[e] = function (t) {
                return arguments.length ? ("duration" === e && (o = void 0), F(e, t) && (u.trigger("change", {
                    what: e,
                    newval: d[e]
                }), r.shifts.indexOf(e) > -1 && u.trigger("shift", {reason: e})), u) : d[e]
            })
        };
        this.controller = function () {
            return s
        }, this.state = function () {
            return h
        }, this.scrollOffset = function () {
            return p.start
        }, this.triggerPosition = function () {
            var e = d.offset;
            return s && (e += d.triggerElement ? v : s.info("size") * u.triggerHook()), e
        };
        var T, A;
        u.on("shift.internal", function (e) {
            var t = "duration" === e.reason;
            (h === c && t || h === l && 0 === d.duration) && N(), t && O()
        }).on("progress.internal", function () {
            N()
        }).on("add.internal", function () {
            O()
        }).on("destroy.internal", function (e) {
            u.removePin(e.reset)
        });
        var N = function (e) {
            if (T && s) {
                var t = s.info(), n = A.spacer.firstChild;
                if (e || h !== l) {
                    var r = {position: A.inFlow ? "relative" : "absolute", top: 0, left: 0},
                        o = i.css(n, "position") != r.position;
                    A.pushFollowers ? d.duration > 0 && (h === c && 0 === parseFloat(i.css(A.spacer, "padding-top")) ? o = !0 : h === a && 0 === parseFloat(i.css(A.spacer, "padding-bottom")) && (o = !0)) : r[t.vertical ? "top" : "left"] = d.duration * g, i.css(n, r), o && O()
                } else {
                    "fixed" != i.css(n, "position") && (i.css(n, {position: "fixed"}), O());
                    var f = i.get.offset(A.spacer, !0),
                        u = d.reverse || 0 === d.duration ? t.scrollPos - p.start : Math.round(g * d.duration * 10) / 10;
                    f[t.vertical ? "top" : "left"] += u, i.css(A.spacer.firstChild, {top: f.top, left: f.left})
                }
            }
        }, O = function () {
            if (T && s && A.inFlow) {
                var e = h === l, t = s.info("vertical"), n = A.spacer.firstChild,
                    r = i.isMarginCollapseType(i.css(A.spacer, "display")), o = {};
                A.relSize.width || A.relSize.autoFullWidth ? e ? i.css(T, {width: i.get.width(A.spacer)}) : i.css(T, {width: "100%"}) : (o["min-width"] = i.get.width(t ? T : n, !0, !0), o.width = e ? o["min-width"] : "auto"), A.relSize.height ? e ? i.css(T, {height: i.get.height(A.spacer) - (A.pushFollowers ? d.duration : 0)}) : i.css(T, {height: "100%"}) : (o["min-height"] = i.get.height(t ? n : T, !0, !r), o.height = e ? o["min-height"] : "auto"), A.pushFollowers && (o["padding" + (t ? "Top" : "Left")] = d.duration * g, o["padding" + (t ? "Bottom" : "Right")] = d.duration * (1 - g)), i.css(A.spacer, o)
            }
        }, _ = function () {
            s && T && h === l && !s.info("isDocument") && N()
        }, P = function () {
            s && T && h === l && ((A.relSize.width || A.relSize.autoFullWidth) && i.get.width(window) != i.get.width(A.spacer.parentNode) || A.relSize.height && i.get.height(window) != i.get.height(A.spacer.parentNode)) && O()
        }, D = function (e) {
            s && T && h === l && !s.info("isDocument") && (e.preventDefault(), s._setScrollPos(s.info("scrollPos") - ((e.wheelDelta || e[s.info("vertical") ? "wheelDeltaY" : "wheelDeltaX"]) / 3 || 30 * -e.detail)))
        };
        this.setPin = function (e, n) {
            var r = {pushFollowers: !0, spacerClass: "scrollmagic-pin-spacer"};
            if (n = i.extend({}, r, n), e = i.get.elements(e)[0], !e) return u;
            if ("fixed" === i.css(e, "position")) return u;
            if (T) {
                if (T === e) return u;
                u.removePin()
            }
            T = e;
            var o = T.parentNode.style.display,
                s = ["top", "left", "bottom", "right", "margin", "marginLeft", "marginRight", "marginTop", "marginBottom"];
            T.parentNode.style.display = "none";
            var a = "absolute" != i.css(T, "position"), l = i.css(T, s.concat(["display"])),
                c = i.css(T, ["width", "height"]);
            T.parentNode.style.display = o, !a && n.pushFollowers && (n.pushFollowers = !1);
            var f = T.parentNode.insertBefore(document.createElement("div"), T), d = i.extend(l, {
                position: a ? "relative" : "absolute",
                boxSizing: "content-box",
                mozBoxSizing: "content-box",
                webkitBoxSizing: "content-box"
            });
            if (a || i.extend(d, i.css(T, ["width", "height"])), i.css(f, d), f.setAttribute(t, ""), i.addClass(f, n.spacerClass), A = {
                spacer: f,
                relSize: {
                    width: "%" === c.width.slice(-1),
                    height: "%" === c.height.slice(-1),
                    autoFullWidth: "auto" === c.width && a && i.isMarginCollapseType(l.display)
                },
                pushFollowers: n.pushFollowers,
                inFlow: a
            }, !T.___origStyle) {
                T.___origStyle = {};
                var h = T.style,
                    g = s.concat(["width", "height", "position", "boxSizing", "mozBoxSizing", "webkitBoxSizing"]);
                g.forEach(function (e) {
                    T.___origStyle[e] = h[e] || ""
                })
            }
            return A.relSize.width && i.css(f, {width: c.width}), A.relSize.height && i.css(f, {height: c.height}), f.appendChild(T), i.css(T, {
                position: a ? "relative" : "absolute",
                margin: "auto",
                top: "auto",
                left: "auto",
                bottom: "auto",
                right: "auto"
            }), (A.relSize.width || A.relSize.autoFullWidth) && i.css(T, {
                boxSizing: "border-box",
                mozBoxSizing: "border-box",
                webkitBoxSizing: "border-box"
            }), window.addEventListener("scroll", _), window.addEventListener("resize", _), window.addEventListener("resize", P), T.addEventListener("mousewheel", D), T.addEventListener("DOMMouseScroll", D), N(), u
        }, this.removePin = function (e) {
            if (T) {
                if (h === l && N(!0), e || !s) {
                    var n = A.spacer.firstChild;
                    if (n.hasAttribute(t)) {
                        var r = A.spacer.style,
                            o = ["margin", "marginLeft", "marginRight", "marginTop", "marginBottom"], a = {};
                        o.forEach(function (e) {
                            a[e] = r[e] || ""
                        }), i.css(n, a)
                    }
                    A.spacer.parentNode.insertBefore(n, A.spacer), A.spacer.parentNode.removeChild(A.spacer), T.parentNode.hasAttribute(t) || (i.css(T, T.___origStyle), delete T.___origStyle)
                }
                window.removeEventListener("scroll", _), window.removeEventListener("resize", _), window.removeEventListener("resize", P), T.removeEventListener("mousewheel", D), T.removeEventListener("DOMMouseScroll", D), T = void 0
            }
            return u
        };
        var R, k = [];
        return u.on("destroy.internal", function (e) {
            u.removeClassToggle(e.reset)
        }), this.setClassToggle = function (e, t) {
            var n = i.get.elements(e);
            return 0 !== n.length && i.type.String(t) ? (k.length > 0 && u.removeClassToggle(), R = t, k = n, u.on("enter.internal_class leave.internal_class", function (e) {
                var t = "enter" === e.type ? i.addClass : i.removeClass;
                k.forEach(function (e) {
                    t(e, R)
                })
            }), u) : u
        }, this.removeClassToggle = function (e) {
            return e && k.forEach(function (e) {
                i.removeClass(e, R)
            }), u.off("start.internal_class end.internal_class"), R = void 0, k = [], u
        }, w(), u
    };
    var r = {
        defaults: {duration: 0, offset: 0, triggerElement: void 0, triggerHook: .5, reverse: !0, loglevel: 2},
        validate: {
            offset: function (e) {
                if (e = parseFloat(e), !i.type.Number(e)) throw 0;
                return e
            }, triggerElement: function (e) {
                if (e = e || void 0) {
                    var t = i.get.elements(e)[0];
                    if (!t || !t.parentNode) throw 0;
                    e = t
                }
                return e
            }, triggerHook: function (e) {
                var t = {onCenter: .5, onEnter: 1, onLeave: 0};
                if (i.type.Number(e)) e = Math.max(0, Math.min(parseFloat(e), 1)); else {
                    if (!(e in t)) throw 0;
                    e = t[e]
                }
                return e
            }, reverse: function (e) {
                return !!e
            }
        },
        shifts: ["duration", "offset", "triggerHook"]
    };
    e.Scene.addOption = function (e, t, n, i) {
        e in r.defaults || (r.defaults[e] = t, r.validate[e] = n, i && r.shifts.push(e))
    }, e.Scene.extend = function (t) {
        var n = this;
        e.Scene = function () {
            return n.apply(this, arguments), this.$super = i.extend({}, this), t.apply(this, arguments) || this
        }, i.extend(e.Scene, n), e.Scene.prototype = n.prototype, e.Scene.prototype.constructor = e.Scene
    }, e.Event = function (e, t, n, r) {
        r = r || {};
        for (var i in r) this[i] = r[i];
        return this.type = e, this.target = this.currentTarget = n, this.namespace = t || "", this.timeStamp = this.timestamp = Date.now(), this
    };
    var i = e._util = function (e) {
        var t, n = {}, r = function (e) {
            return parseFloat(e) || 0
        }, i = function (t) {
            return t.currentStyle ? t.currentStyle : e.getComputedStyle(t)
        }, o = function (t, n, o, s) {
            if (n = n === document ? e : n, n === e) s = !1; else if (!u.DomElement(n)) return 0;
            t = t.charAt(0).toUpperCase() + t.substr(1).toLowerCase();
            var a = (o ? n["offset" + t] || n["outer" + t] : n["client" + t] || n["inner" + t]) || 0;
            if (o && s) {
                var l = i(n);
                a += "Height" === t ? r(l.marginTop) + r(l.marginBottom) : r(l.marginLeft) + r(l.marginRight)
            }
            return a
        }, s = function (e) {
            return e.replace(/^[^a-z]+([a-z])/g, "$1").replace(/-([a-z])/g, function (e) {
                return e[1].toUpperCase()
            })
        };
        n.extend = function (e) {
            for (e = e || {}, t = 1; t < arguments.length; t++) if (arguments[t]) for (var n in arguments[t]) arguments[t].hasOwnProperty(n) && (e[n] = arguments[t][n]);
            return e
        }, n.isMarginCollapseType = function (e) {
            return ["block", "flex", "list-item", "table", "-webkit-box"].indexOf(e) > -1
        };
        var a = 0, l = ["ms", "moz", "webkit", "o"], c = e.requestAnimationFrame, f = e.cancelAnimationFrame;
        for (t = 0; !c && t < l.length; ++t) c = e[l[t] + "RequestAnimationFrame"], f = e[l[t] + "CancelAnimationFrame"] || e[l[t] + "CancelRequestAnimationFrame"];
        c || (c = function (t) {
            var n = (new Date).getTime(), r = Math.max(0, 16 - (n - a)), i = e.setTimeout(function () {
                t(n + r)
            }, r);
            return a = n + r, i
        }), f || (f = function (t) {
            e.clearTimeout(t)
        }), n.rAF = c.bind(e), n.cAF = f.bind(e);
        var u = n.type = function (e) {
            return Object.prototype.toString.call(e).replace(/^\[object (.+)\]$/, "$1").toLowerCase()
        };
        u.String = function (e) {
            return "string" === u(e)
        }, u.Function = function (e) {
            return "function" === u(e)
        }, u.Array = function (e) {
            return Array.isArray(e)
        }, u.Number = function (e) {
            return !u.Array(e) && e - parseFloat(e) + 1 >= 0
        }, u.DomElement = function (e) {
            return "object" == typeof HTMLElement ? e instanceof HTMLElement : e && "object" == typeof e && null !== e && 1 === e.nodeType && "string" == typeof e.nodeName
        };
        var d = n.get = {};
        return d.elements = function (t) {
            var n = [];
            if (u.String(t)) try {
                t = document.querySelectorAll(t)
            } catch (r) {
                return n
            }
            if ("nodelist" === u(t) || u.Array(t)) for (var i = 0, o = n.length = t.length; o > i; i++) {
                var s = t[i];
                n[i] = u.DomElement(s) ? s : d.elements(s)
            } else (u.DomElement(t) || t === document || t === e) && (n = [t]);
            return n
        }, d.scrollTop = function (t) {
            return t && "number" == typeof t.scrollTop ? t.scrollTop : e.pageYOffset || 0
        }, d.scrollLeft = function (t) {
            return t && "number" == typeof t.scrollLeft ? t.scrollLeft : e.pageXOffset || 0
        }, d.width = function (e, t, n) {
            return o("width", e, t, n)
        }, d.height = function (e, t, n) {
            return o("height", e, t, n)
        }, d.offset = function (e, t) {
            var n = {top: 0, left: 0};
            if (e && e.getBoundingClientRect) {
                var r = e.getBoundingClientRect();
                n.top = r.top, n.left = r.left, t || (n.top += d.scrollTop(), n.left += d.scrollLeft())
            }
            return n
        }, n.addClass = function (e, t) {
            t && (e.classList ? e.classList.add(t) : e.className += " " + t)
        }, n.removeClass = function (e, t) {
            t && (e.classList ? e.classList.remove(t) : e.className = e.className.replace(RegExp("(^|\\b)" + t.split(" ").join("|") + "(\\b|$)", "gi"), " "))
        }, n.css = function (e, t) {
            if (u.String(t)) return i(e)[s(t)];
            if (u.Array(t)) {
                var n = {}, r = i(e);
                return t.forEach(function (e) {
                    n[e] = r[s(e)]
                }), n
            }
            for (var o in t) {
                var a = t[o];
                a == parseFloat(a) && (a += "px"), e.style[s(o)] = a
            }
        }, n
    }(window || {});
    return e
});
!function (n) {
    "function" == typeof define && define.amd ? define(["jquery"], function (e) {
        return n(e)
    }) : "object" == typeof module && "object" == typeof module.exports ? exports = n(require("jquery")) : n(jQuery)
}(function (n) {
    function e(n) {
        var e = 7.5625, t = 2.75;
        return n < 1 / t ? e * n * n : n < 2 / t ? e * (n -= 1.5 / t) * n + .75 : n < 2.5 / t ? e * (n -= 2.25 / t) * n + .9375 : e * (n -= 2.625 / t) * n + .984375
    }

    void 0 !== n.easing && (n.easing.jswing = n.easing.swing);
    var t = Math.pow, u = Math.sqrt, r = Math.sin, i = Math.cos, a = Math.PI, c = 1.70158, o = 1.525 * c, s = 2 * a / 3,
        f = 2 * a / 4.5;
    n.extend(n.easing, {
        def: "easeOutQuad", swing: function (e) {
            return n.easing[n.easing.def](e)
        }, easeInQuad: function (n) {
            return n * n
        }, easeOutQuad: function (n) {
            return 1 - (1 - n) * (1 - n)
        }, easeInOutQuad: function (n) {
            return n < .5 ? 2 * n * n : 1 - t(-2 * n + 2, 2) / 2
        }, easeInCubic: function (n) {
            return n * n * n
        }, easeOutCubic: function (n) {
            return 1 - t(1 - n, 3)
        }, easeInOutCubic: function (n) {
            return n < .5 ? 4 * n * n * n : 1 - t(-2 * n + 2, 3) / 2
        }, easeInQuart: function (n) {
            return n * n * n * n
        }, easeOutQuart: function (n) {
            return 1 - t(1 - n, 4)
        }, easeInOutQuart: function (n) {
            return n < .5 ? 8 * n * n * n * n : 1 - t(-2 * n + 2, 4) / 2
        }, easeInQuint: function (n) {
            return n * n * n * n * n
        }, easeOutQuint: function (n) {
            return 1 - t(1 - n, 5)
        }, easeInOutQuint: function (n) {
            return n < .5 ? 16 * n * n * n * n * n : 1 - t(-2 * n + 2, 5) / 2
        }, easeInSine: function (n) {
            return 1 - i(n * a / 2)
        }, easeOutSine: function (n) {
            return r(n * a / 2)
        }, easeInOutSine: function (n) {
            return -(i(a * n) - 1) / 2
        }, easeInExpo: function (n) {
            return 0 === n ? 0 : t(2, 10 * n - 10)
        }, easeOutExpo: function (n) {
            return 1 === n ? 1 : 1 - t(2, -10 * n)
        }, easeInOutExpo: function (n) {
            return 0 === n ? 0 : 1 === n ? 1 : n < .5 ? t(2, 20 * n - 10) / 2 : (2 - t(2, -20 * n + 10)) / 2
        }, easeInCirc: function (n) {
            return 1 - u(1 - t(n, 2))
        }, easeOutCirc: function (n) {
            return u(1 - t(n - 1, 2))
        }, easeInOutCirc: function (n) {
            return n < .5 ? (1 - u(1 - t(2 * n, 2))) / 2 : (u(1 - t(-2 * n + 2, 2)) + 1) / 2
        }, easeInElastic: function (n) {
            return 0 === n ? 0 : 1 === n ? 1 : -t(2, 10 * n - 10) * r((10 * n - 10.75) * s)
        }, easeOutElastic: function (n) {
            return 0 === n ? 0 : 1 === n ? 1 : t(2, -10 * n) * r((10 * n - .75) * s) + 1
        }, easeInOutElastic: function (n) {
            return 0 === n ? 0 : 1 === n ? 1 : n < .5 ? -(t(2, 20 * n - 10) * r((20 * n - 11.125) * f)) / 2 : t(2, -20 * n + 10) * r((20 * n - 11.125) * f) / 2 + 1
        }, easeInBack: function (n) {
            return (c + 1) * n * n * n - c * n * n
        }, easeOutBack: function (n) {
            return 1 + (c + 1) * t(n - 1, 3) + c * t(n - 1, 2)
        }, easeInOutBack: function (n) {
            return n < .5 ? t(2 * n, 2) * (7.189819 * n - o) / 2 : (t(2 * n - 2, 2) * ((o + 1) * (2 * n - 2) + o) + 2) / 2
        }, easeInBounce: function (n) {
            return 1 - e(1 - n)
        }, easeOutBounce: e, easeInOutBounce: function (n) {
            return n < .5 ? (1 - e(1 - 2 * n)) / 2 : (1 + e(2 * n - 1)) / 2
        }
    })
});

/*! jQuery plugin for Hammer.JS - v1.1.3 - 2014-05-20
 * http://eightmedia.github.com/hammer.js
 *
 * Copyright (c) 2014 Jorik Tangelder <j.tangelder@gmail.com>;
 * Licensed under the MIT license */

!function (a, b) {
    "use strict";

    function c() {
        e.READY || (t.determineEventTypes(), s.each(e.gestures, function (a) {
            v.register(a)
        }), t.onTouch(e.DOCUMENT, o, v.detect), t.onTouch(e.DOCUMENT, p, v.detect), e.READY = !0)
    }

    function d(a, c) {
        Date.now || (Date.now = function () {
            return (new Date).getTime()
        }), a.utils.each(["on", "off"], function (d) {
            a.utils[d] = function (a, e, f) {
                c(a)[d](e, function (a) {
                    var d = c.extend({}, a.originalEvent, a);
                    d.button === b && (d.button = a.which - 1), f.call(this, d)
                })
            }
        }), a.Instance.prototype.trigger = function (a, b) {
            var d = c(this.element);
            return d.has(b.target).length && (d = c(b.target)), d.trigger({type: a, gesture: b})
        }, c.fn.hammer = function (b) {
            return this.each(function () {
                var d = c(this), e = d.data("hammer");
                e ? e && b && a.utils.extend(e.options, b) : d.data("hammer", new a(this, b || {}))
            })
        }
    }

    var e = function w(a, b) {
        return new w.Instance(a, b || {})
    };
    e.VERSION = "1.1.3", e.defaults = {
        behavior: {
            userSelect: "none",
            touchAction: "pan-y",
            touchCallout: "none",
            contentZooming: "none",
            userDrag: "none",
            tapHighlightColor: "rgba(0,0,0,0)"
        }
    }, e.DOCUMENT = document, e.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled, e.HAS_TOUCHEVENTS = "ontouchstart" in a, e.IS_MOBILE = /mobile|tablet|ip(ad|hone|od)|android|silk/i.test(navigator.userAgent), e.NO_MOUSEEVENTS = e.HAS_TOUCHEVENTS && e.IS_MOBILE || e.HAS_POINTEREVENTS, e.CALCULATE_INTERVAL = 25;
    var f = {}, g = e.DIRECTION_DOWN = "down", h = e.DIRECTION_LEFT = "left", i = e.DIRECTION_UP = "up",
        j = e.DIRECTION_RIGHT = "right", k = e.POINTER_MOUSE = "mouse", l = e.POINTER_TOUCH = "touch",
        m = e.POINTER_PEN = "pen", n = e.EVENT_START = "start", o = e.EVENT_MOVE = "move", p = e.EVENT_END = "end",
        q = e.EVENT_RELEASE = "release", r = e.EVENT_TOUCH = "touch";
    e.READY = !1, e.plugins = e.plugins || {}, e.gestures = e.gestures || {};
    var s = e.utils = {
        extend: function (a, c, d) {
            for (var e in c) !c.hasOwnProperty(e) || a[e] !== b && d || (a[e] = c[e]);
            return a
        }, on: function (a, b, c) {
            a.addEventListener(b, c, !1)
        }, off: function (a, b, c) {
            a.removeEventListener(b, c, !1)
        }, each: function (a, c, d) {
            var e, f;
            if ("forEach" in a) a.forEach(c, d); else if (a.length !== b) {
                for (e = 0, f = a.length; f > e; e++) if (c.call(d, a[e], e, a) === !1) return
            } else for (e in a) if (a.hasOwnProperty(e) && c.call(d, a[e], e, a) === !1) return
        }, inStr: function (a, b) {
            return a.indexOf(b) > -1
        }, inArray: function (a, b) {
            if (a.indexOf) {
                var c = a.indexOf(b);
                return -1 === c ? !1 : c
            }
            for (var d = 0, e = a.length; e > d; d++) if (a[d] === b) return d;
            return !1
        }, toArray: function (a) {
            return Array.prototype.slice.call(a, 0)
        }, hasParent: function (a, b) {
            for (; a;) {
                if (a == b) return !0;
                a = a.parentNode
            }
            return !1
        }, getCenter: function (a) {
            var b = [], c = [], d = [], e = [], f = Math.min, g = Math.max;
            return 1 === a.length ? {
                pageX: a[0].pageX,
                pageY: a[0].pageY,
                clientX: a[0].clientX,
                clientY: a[0].clientY
            } : (s.each(a, function (a) {
                b.push(a.pageX), c.push(a.pageY), d.push(a.clientX), e.push(a.clientY)
            }), {
                pageX: (f.apply(Math, b) + g.apply(Math, b)) / 2,
                pageY: (f.apply(Math, c) + g.apply(Math, c)) / 2,
                clientX: (f.apply(Math, d) + g.apply(Math, d)) / 2,
                clientY: (f.apply(Math, e) + g.apply(Math, e)) / 2
            })
        }, getVelocity: function (a, b, c) {
            return {x: Math.abs(b / a) || 0, y: Math.abs(c / a) || 0}
        }, getAngle: function (a, b) {
            var c = b.clientX - a.clientX, d = b.clientY - a.clientY;
            return 180 * Math.atan2(d, c) / Math.PI
        }, getDirection: function (a, b) {
            var c = Math.abs(a.clientX - b.clientX), d = Math.abs(a.clientY - b.clientY);
            return c >= d ? a.clientX - b.clientX > 0 ? h : j : a.clientY - b.clientY > 0 ? i : g
        }, getDistance: function (a, b) {
            var c = b.clientX - a.clientX, d = b.clientY - a.clientY;
            return Math.sqrt(c * c + d * d)
        }, getScale: function (a, b) {
            return a.length >= 2 && b.length >= 2 ? this.getDistance(b[0], b[1]) / this.getDistance(a[0], a[1]) : 1
        }, getRotation: function (a, b) {
            return a.length >= 2 && b.length >= 2 ? this.getAngle(b[1], b[0]) - this.getAngle(a[1], a[0]) : 0
        }, isVertical: function (a) {
            return a == i || a == g
        }, setPrefixedCss: function (a, b, c, d) {
            var e = ["", "Webkit", "Moz", "O", "ms"];
            b = s.toCamelCase(b);
            for (var f = 0; f < e.length; f++) {
                var g = b;
                if (e[f] && (g = e[f] + g.slice(0, 1).toUpperCase() + g.slice(1)), g in a.style) {
                    a.style[g] = (null == d || d) && c || "";
                    break
                }
            }
        }, toggleBehavior: function (a, b, c) {
            if (b && a && a.style) {
                s.each(b, function (b, d) {
                    s.setPrefixedCss(a, d, b, c)
                });
                var d = c && function () {
                    return !1
                };
                "none" == b.userSelect && (a.onselectstart = d), "none" == b.userDrag && (a.ondragstart = d)
            }
        }, toCamelCase: function (a) {
            return a.replace(/[_-]([a-z])/g, function (a) {
                return a[1].toUpperCase()
            })
        }
    };
    e.Instance = function (a, b) {
        var d = this;
        c(), this.element = a, this.enabled = !0, s.each(b, function (a, c) {
            delete b[c], b[s.toCamelCase(c)] = a
        }), this.options = s.extend(s.extend({}, e.defaults), b || {}), this.options.behavior && s.toggleBehavior(this.element, this.options.behavior, !0), this.eventStartHandler = t.onTouch(a, n, function (a) {
            d.enabled && a.eventType == n ? v.startDetect(d, a) : a.eventType == r && v.detect(a)
        }), this.eventHandlers = []
    }, e.Instance.prototype = {
        on: function (a, b) {
            var c = this;
            return t.on(c.element, a, b, function (a) {
                c.eventHandlers.push({gesture: a, handler: b})
            }), c
        }, off: function (a, b) {
            var c = this;
            return t.off(c.element, a, b, function (a) {
                var d = s.inArray({gesture: a, handler: b});
                d !== !1 && c.eventHandlers.splice(d, 1)
            }), c
        }, trigger: function (a, b) {
            b || (b = {});
            var c = e.DOCUMENT.createEvent("Event");
            c.initEvent(a, !0, !0), c.gesture = b;
            var d = this.element;
            return s.hasParent(b.target, d) && (d = b.target), d.dispatchEvent(c), this
        }, enable: function (a) {
            return this.enabled = a, this
        }, dispose: function () {
            var a, b;
            for (s.toggleBehavior(this.element, this.options.behavior, !1), a = -1; b = this.eventHandlers[++a];) s.off(this.element, b.gesture, b.handler);
            return this.eventHandlers = [], t.off(this.element, f[n], this.eventStartHandler), null
        }
    };
    var t = e.event = {
        preventMouseEvents: !1, started: !1, shouldDetect: !1, on: function (a, b, c, d) {
            var e = b.split(" ");
            s.each(e, function (b) {
                s.on(a, b, c), d && d(b)
            })
        }, off: function (a, b, c, d) {
            var e = b.split(" ");
            s.each(e, function (b) {
                s.off(a, b, c), d && d(b)
            })
        }, onTouch: function (a, b, c) {
            var d = this, g = function (f) {
                var g, h = f.type.toLowerCase(), i = e.HAS_POINTEREVENTS, j = s.inStr(h, "mouse");
                j && d.preventMouseEvents || (j && b == n && 0 === f.button ? (d.preventMouseEvents = !1, d.shouldDetect = !0) : i && b == n ? d.shouldDetect = 1 === f.buttons || u.matchType(l, f) : j || b != n || (d.preventMouseEvents = !0, d.shouldDetect = !0), i && b != p && u.updatePointer(b, f), d.shouldDetect && (g = d.doDetect.call(d, f, b, a, c)), g == p && (d.preventMouseEvents = !1, d.shouldDetect = !1, u.reset()), i && b == p && u.updatePointer(b, f))
            };
            return this.on(a, f[b], g), g
        }, doDetect: function (a, b, c, d) {
            var e = this.getTouchList(a, b), f = e.length, g = b, h = e.trigger, i = f;
            b == n ? h = r : b == p && (h = q, i = e.length - (a.changedTouches ? a.changedTouches.length : 1)), i > 0 && this.started && (g = o), this.started = !0;
            var j = this.collectEventData(c, g, e, a);
            return b != p && d.call(v, j), h && (j.changedLength = i, j.eventType = h, d.call(v, j), j.eventType = g, delete j.changedLength), g == p && (d.call(v, j), this.started = !1), g
        }, determineEventTypes: function () {
            var b;
            return b = e.HAS_POINTEREVENTS ? a.PointerEvent ? ["pointerdown", "pointermove", "pointerup pointercancel lostpointercapture"] : ["MSPointerDown", "MSPointerMove", "MSPointerUp MSPointerCancel MSLostPointerCapture"] : e.NO_MOUSEEVENTS ? ["touchstart", "touchmove", "touchend touchcancel"] : ["touchstart mousedown", "touchmove mousemove", "touchend touchcancel mouseup"], f[n] = b[0], f[o] = b[1], f[p] = b[2], f
        }, getTouchList: function (a, b) {
            if (e.HAS_POINTEREVENTS) return u.getTouchList();
            if (a.touches) {
                if (b == o) return a.touches;
                var c = [], d = [].concat(s.toArray(a.touches), s.toArray(a.changedTouches)), f = [];
                return s.each(d, function (a) {
                    s.inArray(c, a.identifier) === !1 && f.push(a), c.push(a.identifier)
                }), f
            }
            return a.identifier = 1, [a]
        }, collectEventData: function (a, b, c, d) {
            var e = l;
            return s.inStr(d.type, "mouse") || u.matchType(k, d) ? e = k : u.matchType(m, d) && (e = m), {
                center: s.getCenter(c),
                timeStamp: Date.now(),
                target: d.target,
                touches: c,
                eventType: b,
                pointerType: e,
                srcEvent: d,
                preventDefault: function () {
                    var a = this.srcEvent;
                    a.preventManipulation && a.preventManipulation(), a.preventDefault && a.preventDefault()
                },
                stopPropagation: function () {
                    this.srcEvent.stopPropagation()
                },
                stopDetect: function () {
                    return v.stopDetect()
                }
            }
        }
    }, u = e.PointerEvent = {
        pointers: {}, getTouchList: function () {
            var a = [];
            return s.each(this.pointers, function (b) {
                a.push(b)
            }), a
        }, updatePointer: function (a, b) {
            a == p || a != p && 1 !== b.buttons ? delete this.pointers[b.pointerId] : (b.identifier = b.pointerId, this.pointers[b.pointerId] = b)
        }, matchType: function (a, b) {
            if (!b.pointerType) return !1;
            var c = b.pointerType, d = {};
            return d[k] = c === (b.MSPOINTER_TYPE_MOUSE || k), d[l] = c === (b.MSPOINTER_TYPE_TOUCH || l), d[m] = c === (b.MSPOINTER_TYPE_PEN || m), d[a]
        }, reset: function () {
            this.pointers = {}
        }
    }, v = e.detection = {
        gestures: [], current: null, previous: null, stopped: !1, startDetect: function (a, b) {
            this.current || (this.stopped = !1, this.current = {
                inst: a,
                startEvent: s.extend({}, b),
                lastEvent: !1,
                lastCalcEvent: !1,
                futureCalcEvent: !1,
                lastCalcData: {},
                name: ""
            }, this.detect(b))
        }, detect: function (a) {
            if (this.current && !this.stopped) {
                a = this.extendEventData(a);
                var b = this.current.inst, c = b.options;
                return s.each(this.gestures, function (d) {
                    !this.stopped && b.enabled && c[d.name] && d.handler.call(d, a, b)
                }, this), this.current && (this.current.lastEvent = a), a.eventType == p && this.stopDetect(), a
            }
        }, stopDetect: function () {
            this.previous = s.extend({}, this.current), this.current = null, this.stopped = !0
        }, getCalculatedData: function (a, b, c, d, f) {
            var g = this.current, h = !1, i = g.lastCalcEvent, j = g.lastCalcData;
            i && a.timeStamp - i.timeStamp > e.CALCULATE_INTERVAL && (b = i.center, c = a.timeStamp - i.timeStamp, d = a.center.clientX - i.center.clientX, f = a.center.clientY - i.center.clientY, h = !0), (a.eventType == r || a.eventType == q) && (g.futureCalcEvent = a), (!g.lastCalcEvent || h) && (j.velocity = s.getVelocity(c, d, f), j.angle = s.getAngle(b, a.center), j.direction = s.getDirection(b, a.center), g.lastCalcEvent = g.futureCalcEvent || a, g.futureCalcEvent = a), a.velocityX = j.velocity.x, a.velocityY = j.velocity.y, a.interimAngle = j.angle, a.interimDirection = j.direction
        }, extendEventData: function (a) {
            var b = this.current, c = b.startEvent, d = b.lastEvent || c;
            (a.eventType == r || a.eventType == q) && (c.touches = [], s.each(a.touches, function (a) {
                c.touches.push({clientX: a.clientX, clientY: a.clientY})
            }));
            var e = a.timeStamp - c.timeStamp, f = a.center.clientX - c.center.clientX,
                g = a.center.clientY - c.center.clientY;
            return this.getCalculatedData(a, d.center, e, f, g), s.extend(a, {
                startEvent: c,
                deltaTime: e,
                deltaX: f,
                deltaY: g,
                distance: s.getDistance(c.center, a.center),
                angle: s.getAngle(c.center, a.center),
                direction: s.getDirection(c.center, a.center),
                scale: s.getScale(c.touches, a.touches),
                rotation: s.getRotation(c.touches, a.touches)
            }), a
        }, register: function (a) {
            var c = a.defaults || {};
            return c[a.name] === b && (c[a.name] = !0), s.extend(e.defaults, c, !0), a.index = a.index || 1e3, this.gestures.push(a), this.gestures.sort(function (a, b) {
                return a.index < b.index ? -1 : a.index > b.index ? 1 : 0
            }), this.gestures
        }
    };
    !function (a) {
        function b(b, d) {
            var e = v.current;
            if (!(d.options.dragMaxTouches > 0 && b.touches.length > d.options.dragMaxTouches)) switch (b.eventType) {
                case n:
                    c = !1;
                    break;
                case o:
                    if (b.distance < d.options.dragMinDistance && e.name != a) return;
                    var f = e.startEvent.center;
                    if (e.name != a && (e.name = a, d.options.dragDistanceCorrection && b.distance > 0)) {
                        var k = Math.abs(d.options.dragMinDistance / b.distance);
                        f.pageX += b.deltaX * k, f.pageY += b.deltaY * k, f.clientX += b.deltaX * k, f.clientY += b.deltaY * k, b = v.extendEventData(b)
                    }
                    (e.lastEvent.dragLockToAxis || d.options.dragLockToAxis && d.options.dragLockMinDistance <= b.distance) && (b.dragLockToAxis = !0);
                    var l = e.lastEvent.direction;
                    b.dragLockToAxis && l !== b.direction && (b.direction = s.isVertical(l) ? b.deltaY < 0 ? i : g : b.deltaX < 0 ? h : j), c || (d.trigger(a + "start", b), c = !0), d.trigger(a, b), d.trigger(a + b.direction, b);
                    var m = s.isVertical(b.direction);
                    (d.options.dragBlockVertical && m || d.options.dragBlockHorizontal && !m) && b.preventDefault();
                    break;
                case q:
                    c && b.changedLength <= d.options.dragMaxTouches && (d.trigger(a + "end", b), c = !1);
                    break;
                case p:
                    c = !1
            }
        }

        var c = !1;
        e.gestures.Drag = {
            name: a,
            index: 50,
            handler: b,
            defaults: {
                dragMinDistance: 10,
                dragDistanceCorrection: !0,
                dragMaxTouches: 1,
                dragBlockHorizontal: !1,
                dragBlockVertical: !1,
                dragLockToAxis: !1,
                dragLockMinDistance: 25
            }
        }
    }("drag"), e.gestures.Gesture = {
        name: "gesture", index: 1337, handler: function (a, b) {
            b.trigger(this.name, a)
        }
    }, function (a) {
        function b(b, d) {
            var e = d.options, f = v.current;
            switch (b.eventType) {
                case n:
                    clearTimeout(c), f.name = a, c = setTimeout(function () {
                        f && f.name == a && d.trigger(a, b)
                    }, e.holdTimeout);
                    break;
                case o:
                    b.distance > e.holdThreshold && clearTimeout(c);
                    break;
                case q:
                    clearTimeout(c)
            }
        }

        var c;
        e.gestures.Hold = {name: a, index: 10, defaults: {holdTimeout: 500, holdThreshold: 2}, handler: b}
    }("hold"), e.gestures.Release = {
        name: "release", index: 1 / 0, handler: function (a, b) {
            a.eventType == q && b.trigger(this.name, a)
        }
    }, e.gestures.Swipe = {
        name: "swipe",
        index: 40,
        defaults: {swipeMinTouches: 1, swipeMaxTouches: 1, swipeVelocityX: .6, swipeVelocityY: .6},
        handler: function (a, b) {
            if (a.eventType == q) {
                var c = a.touches.length, d = b.options;
                if (c < d.swipeMinTouches || c > d.swipeMaxTouches) return;
                (a.velocityX > d.swipeVelocityX || a.velocityY > d.swipeVelocityY) && (b.trigger(this.name, a), b.trigger(this.name + a.direction, a))
            }
        }
    }, function (a) {
        function b(b, d) {
            var e, f, g = d.options, h = v.current, i = v.previous;
            switch (b.eventType) {
                case n:
                    c = !1;
                    break;
                case o:
                    c = c || b.distance > g.tapMaxDistance;
                    break;
                case p:
                    !s.inStr(b.srcEvent.type, "cancel") && b.deltaTime < g.tapMaxTime && !c && (e = i && i.lastEvent && b.timeStamp - i.lastEvent.timeStamp, f = !1, i && i.name == a && e && e < g.doubleTapInterval && b.distance < g.doubleTapDistance && (d.trigger("doubletap", b), f = !0), (!f || g.tapAlways) && (h.name = a, d.trigger(h.name, b)))
            }
        }

        var c = !1;
        e.gestures.Tap = {
            name: a,
            index: 100,
            handler: b,
            defaults: {
                tapMaxTime: 250,
                tapMaxDistance: 10,
                tapAlways: !0,
                doubleTapDistance: 20,
                doubleTapInterval: 300
            }
        }
    }("tap"), e.gestures.Touch = {
        name: "touch",
        index: -1 / 0,
        defaults: {preventDefault: !1, preventMouse: !1},
        handler: function (a, b) {
            return b.options.preventMouse && a.pointerType == k ? void a.stopDetect() : (b.options.preventDefault && a.preventDefault(), void (a.eventType == r && b.trigger("touch", a)))
        }
    }, function (a) {
        function b(b, d) {
            switch (b.eventType) {
                case n:
                    c = !1;
                    break;
                case o:
                    if (b.touches.length < 2) return;
                    var e = Math.abs(1 - b.scale), f = Math.abs(b.rotation);
                    if (e < d.options.transformMinScale && f < d.options.transformMinRotation) return;
                    v.current.name = a, c || (d.trigger(a + "start", b), c = !0), d.trigger(a, b), f > d.options.transformMinRotation && d.trigger("rotate", b), e > d.options.transformMinScale && (d.trigger("pinch", b), d.trigger("pinch" + (b.scale < 1 ? "in" : "out"), b));
                    break;
                case q:
                    c && b.changedLength < 2 && (d.trigger(a + "end", b), c = !1)
            }
        }

        var c = !1;
        e.gestures.Transform = {
            name: a,
            index: 45,
            defaults: {transformMinScale: .01, transformMinRotation: 1},
            handler: b
        }
    }("transform"), a.Hammer = e, "undefined" != typeof module && module.exports && (module.exports = e), "function" == typeof define && define.amd ? define(["jquery"], function (b) {
        return d(a.Hammer, b)
    }) : d(a.Hammer, a.jQuery || a.Zepto)
}(window);
//# sourceMappingURL=jquery.hammer-full.min.map
// Mega Image Viewer v2.5 - jQuery image viewer plugin - converting <div> element to an animated image viewer
// (c) 2012 lhp - http://codecanyon.net/user/lhp

(function (g) {
    var d, i, f;
    i = {dragSmooth: 8};
    f = {
        viewportWidth: "100%",
        viewportHeight: "100%",
        fitToViewportShortSide: false,
        contentSizeOver100: false,
        loadingBgColor: "#ffffff",
        startScale: 1,
        startX: 0,
        startY: 0,
        animTime: 500,
        draggInertia: 10,
        zoomLevel: 1,
        zoomStep: 0.1,
        contentUrl: "",
        intNavEnable: true,
        intNavPos: "T",
        intNavAutoHide: false,
        intNavMoveDownBtt: true,
        intNavMoveUpBtt: true,
        intNavMoveRightBtt: true,
        intNavMoveLeftBtt: true,
        intNavZoomBtt: true,
        intNavUnzoomBtt: true,
        intNavFitToViewportBtt: true,
        intNavFullSizeBtt: true,
        intNavBttSizeRation: 1,
        mapEnable: true,
        mapThumb: null,
        mapPos: "BL",
        popupShowAction: "rollover",
        testMode: false
    };
    d = {
        init: function (n, m) {
            return this.each(function () {
                var r = g(this), q = r.data("lhpMIV"), p = r.find("img"), o = {};
                g.extend(o, f, n);
                g.extend(o, i);
                if (!q) {
                    if (o.draggInertia < 0) {
                        o.draggInertia = 0
                    }
                    o.animTime = parseInt(o.animTime);
                    if (o.animTime < 0) {
                        o.animTime = 0
                    }
                    if (p.length > 0) {
                        o.contentUrl = p[0].src;
                        p.remove()
                    }
                    r.data("lhpMIV", {});
                    r.data("lhpMIV").interImgsTmp = p;
                    r.data("lhpMIV").lc = new e(o, r, m)
                }
            })
        }, setPosition: function (m, p, o, n) {
            return this.each(function () {
                var r = g(this), q = r.data("lhpMIV");
                if (q) {
                    r.data("lhpMIV").lc.setProperties(m, p, o, n)
                }
            })
        }, moveUp: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.beginDirectMove("U")
                }
            })
        }, moveDown: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.beginDirectMove("D")
                }
            })
        }, moveLeft: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.beginDirectMove("L")
                }
            })
        }, moveRight: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.beginDirectMove("R")
                }
            })
        }, moveStop: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.stopDirectMoving()
                }
            })
        }, zoom: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.beginZooming("Z")
                }
            })
        }, unzoom: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.beginZooming("U")
                }
            })
        }, zoomStop: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.stopZooming()
                }
            })
        }, fitToViewport: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.setProperties(null, null, 0)
                }
            })
        }, fullSize: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.setProperties(null, null, n.data("lhpMIV").lc.sett.zoomLevel)
                }
            })
        }, adaptsToContainer: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.adaptsToContainer()
                }
            })
        }, getCurrentState: function () {
            var o = g(this), n = o.data("lhpMIV"), m = {};
            if (n) {
                m = o.data("lhpMIV").lc.getCurrentState()
            }
            return m
        }, destroy: function () {
            return this.each(function () {
                var n = g(this), m = n.data("lhpMIV");
                if (m) {
                    n.data("lhpMIV").lc.destroy();
                    n.prepend(n.data("lhpMIV").interImgsTmp);
                    n.removeData("lhpMIV")
                }
            })
        }
    };
    g.fn.lhpMegaImgViewer = function (m) {
        if (d[m]) {
            return d[m].apply(this, Array.prototype.slice.call(arguments, 1))
        } else {
            if (typeof m === "object" || !m) {
                return d.init.apply(this, arguments)
            } else {
                g.error("Method " + m + " does not exist on jQuery.lhpMegaImgViewer")
            }
        }
    };
    var e = function (n, o, m) {
        this.isTouchDev = this.isTouchDevice();
        this.sett = n;
        this.$mainHolder = o;
        this.lastMousePageCoor = null;
        this.lastDrag = null;
        this.contentFullSize = {};
        this.$mivHol = null;
        this.$contentHol = null;
        this.$content = null;
        this.$preloadHol = null;
        this.$blackScreen = null;
        this.$infoBox = null;
        this.$navHol = null;
        this.movingIntreval = null;
        this.movingDirectIntreval = null;
        this.navAutohideInterval = null;
        this.speedX = this.speedY = null;
        this.targetX = this.targetY = null;
        this.allow = {
            allowDown: false,
            allowUp: false,
            allowLeft: false,
            allowRight: false,
            allowZoom: false,
            allowUnzoom: false
        };
        this.isScaled = false;
        this.sett.zoomLevel = Math.abs(this.sett.zoomLevel);
        this.sett.zoomStep = Math.abs(this.sett.zoomStep);
        this.sm = new l(this.sett.zoomLevel, this.sett.zoomStep);
        this.map = null;
        this.pinchData = {dt: 0, ds: 0};
        this.markersContainer = m;
        this.markers = null;
        this.createHolders();
        this.contentLoader = new h(this.sett.contentUrl, this.$contentHol, function (p) {
            return function (q) {
                p.imgContentStart(q)
            }
        }(this));
        this.contentLoader.loadStart()
    };
    e.prototype.isTouchDevice = function () {
        if (navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
            if (navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i) == null) {
                return false
            }
        }
        return (("ontouchstart" in window) || window.DocumentTouch && document instanceof DocumentTouch)
    };
    e.prototype.createHolders = function () {
        this.$mivHol = g("<div />").addClass("lhp_miv_holder").css({
            position: "relative",
            overflow: "hidden",
            width: this.sett.viewportWidth,
            height: this.sett.viewportHeight
        });
        this.$preloadHol = g("<div />").addClass("lhp_miv_preload_holder");
        this.$contentHol = g("<div />").addClass("lhp_miv_content_holder").css({position: "absolute"});
        this.$blackScreen = g("<div />").addClass("lhp_miv_blackScreen").css({
            position: "absolute",
            "z-index": "9999",
            width: "100%",
            height: "100%",
            background: this.sett.loadingBgColor
        });
        this.$mivHol.append(this.$preloadHol);
        this.$mivHol.append(this.$blackScreen);
        this.$mivHol.append(this.$contentHol);
        this.$mainHolder.append(this.$mivHol);
        if (this.sett.testMode) {
            this.$infoBox = g("<div />").addClass("lhp_miv_infoBox_holder");
            this.$mivHol.append(this.$infoBox)
        }
    };
    e.prototype.navBttCalcSize = function () {
        var o = 27, m = 0, p = 4, n = this.sett.intNavBttSizeRation;
        if (n > 1) {
            p = Math.ceil(p * n);
            m = p - 4;
            o += 2 * m
        }
        return {width: o, paddingHoriziontal: m, paddingVertical: p}
    };
    e.prototype.iniNav = function () {
        var n = g("<ul />").addClass("ui-widget ui-helper-clearfix"), u = this.$mainHolder, o = this.$navHol, r, s,
            p = this, w = this.navBttCalcSize().width, v = this.navBttCalcSize().paddingVertical,
            q = this.navBttCalcSize().paddingHoriziontal, m = 0,
            t = [["moveDown", "moveStop", "ui-icon-carat-1-n", "intNavMoveDownBtt"], ["moveUp", "moveStop", "ui-icon-carat-1-s", "intNavMoveUpBtt"], ["moveRight", "moveStop", "ui-icon-carat-1-w", "intNavMoveRightBtt"], ["moveLeft", "moveStop", "ui-icon-carat-1-e", "intNavMoveLeftBtt"], ["zoom", "zoomStop", "ui-icon-zoomin", "intNavZoomBtt"], ["unzoom", "zoomStop", "ui-icon-zoomout", "intNavUnzoomBtt"], ["fitToViewport", null, "ui-icon-stop", "intNavFitToViewportBtt"], ["fullSize", null, "ui-icon-arrow-4-diag", "intNavFullSizeBtt"]];
        g.each(t, function (y) {
            var z = t[y][0], A = t[y][1], C = t[y][3], B, x;
            if (p.sett[C]) {
                m += w;
                B = g("<li />").addClass("ui-state-default ui-corner-all " + z), x = g("<span />").addClass("ui-icon " + t[y][2]);
                B.append(x);
                n.append(B);
                B.css("padding", v + "px " + q + "px");
                B.bind("mouseenter.lhpMIV touchstart.lhpMIV", function () {
                    if (!g(this).hasClass("lhp_miv_nav_btt_disab")) {
                        g(this).addClass("ui-state-hover")
                    }
                });
                B.bind("mouseleave.lhpMIV touchend.lhpMIV", function () {
                    g(this).removeClass("ui-state-hover")
                });
                B.bind(((p.isTouchDev) ? "touchstart.lhpMIV" : "mousedown.lhpMIV"), function (D) {
                    return function (E) {
                        if (!g(this).hasClass("lhp_miv_nav_btt_disab")) {
                            u.lhpMegaImgViewer(D)
                        }
                        E.preventDefault()
                    }
                }(z));
                if (A) {
                    B.bind(((p.isTouchDev) ? "touchend.lhpMIV" : "mouseup.lhpMIV"), function (D) {
                        return function (E) {
                            if (!g(this).hasClass("lhp_miv_nav_btt_disab")) {
                                u.lhpMegaImgViewer(D)
                            }
                            E.preventDefault()
                        }
                    }(A))
                }
            }
        });
        if (this.$navHol.hasClass("lhp_miv_nav_pos_L") || this.$navHol.hasClass("lhp_miv_nav_pos_R")) {
            this.$navHol.css("width", w);
            this.$navHol.css("margin-top", -m / 2)
        }
        if (this.$navHol.hasClass("lhp_miv_nav_pos_T") || this.$navHol.hasClass("lhp_miv_nav_pos_B")) {
            this.$navHol.css("margin-left", -m / 2)
        }
        u.bind("mivChange.lhpMIV", function (z) {
            var y = "lhp_miv_nav_btt_disab", x = "ui-state-hover";
            if (z.allowDown) {
                o.find(".moveDown").removeClass(y)
            } else {
                o.find(".moveDown").removeClass(x).addClass(y)
            }
            if (z.allowUp) {
                o.find(".moveUp").removeClass(y)
            } else {
                o.find(".moveUp").removeClass(x).addClass(y)
            }
            if (z.allowLeft) {
                o.find(".moveLeft").removeClass(y)
            } else {
                o.find(".moveLeft").removeClass(x).addClass(y)
            }
            if (z.allowRight) {
                o.find(".moveRight").removeClass(y)
            } else {
                o.find(".moveRight").removeClass(x).addClass(y)
            }
            if (z.allowZoom) {
                o.find(".zoom").removeClass(y);
                o.find(".fullSize").removeClass(y)
            } else {
                o.find(".zoom").removeClass(x).addClass(y);
                o.find(".fullSize").removeClass(x).addClass(y)
            }
            if (z.allowUnzoom) {
                o.find(".unzoom").removeClass(y);
                o.find(".fitToViewport").removeClass(y)
            } else {
                o.find(".unzoom").removeClass(x).addClass(y);
                o.find(".fitToViewport").removeClass(x).addClass(y)
            }
        });
        if (this.sett.intNavAutoHide) {
            o.css("display", "none");
            u.bind("mouseenter.lhpMIV touchstart.lhpMIV", function () {
                clearInterval(p.navAutohideInterval);
                o.fadeIn("fast")
            });
            u.bind("mouseleave.lhpMIV touchend.lhpMIV", function () {
                clearInterval(p.navAutohideInterval);
                p.navAutohideInterval = setInterval(function (x) {
                    return function () {
                        x.stop().clearQueue().fadeOut("fast")
                    }
                }(o), 1000)
            })
        }
        o.append(n)
    };
    e.prototype.imgContentStart = function (m) {
        this.$content = m;
        m.addClass("lhp_miv_content").css({"float": "left"});
        this.contentFullSize = {w: m.width(), h: m.height()};
        this.sett.mainImgWidth = this.contentFullSize.w;
        this.sett.mainImgHeight = this.contentFullSize.h;
        this.start();
        this.$preloadHol.remove();
        this.$blackScreen.animate({opacity: 0}, {
            duration: 500, complete: function () {
                g(this).remove()
            }
        });
        this.dispatchEventReady()
    };
    e.prototype.start = function () {
        if (this.sett.mapEnable && this.sett.mapThumb) {
            this.map = new c(this.sett, this.$mainHolder, this.$content, this.isTouchDev);
            this.map.ini(this.$mivHol)
        }
        if (this.sett.intNavEnable) {
            this.$navHol = g('<div class="lhp_miv_nav"/>').addClass("lhp_miv_nav_pos_" + this.sett.intNavPos);
            this.iniNav();
            this.$mivHol.prepend(this.$navHol)
        }
        this.markers = new b(this.$mainHolder, this.$contentHol, this.markersContainer, this.isTouchDev, this.sett.popupShowAction, this.sett.startScale);
        this.markers.ini();
        if (this.isTouchDev) {
            this.$contentHol.hammer({preventDefault: true});
            this.$contentHol.off("touch", this.mousedownHandler).on("touch", {_this: this}, this.mousedownHandler);
            this.$contentHol.on("pinch", {_this: this}, this.pinchHandler)
        } else {
            this.$contentHol.bind("mouseenter.lhpMIV", {_this: this}, this.mouseenterHandler);
            this.$contentHol.bind("mousedown.lhpMIV", {_this: this}, this.mousedownHandler);
            this.$contentHol.bind("mouseup.lhpMIV", {_this: this}, this.mouseupHandler);
            this.$contentHol.bind("mouseleave.lhpMIV", {_this: this}, this.mouseupHandler);
            this.$contentHol.bind("mousewheel.lhpMIV", {_this: this}, this.mousewheelHandler);
            if (this.sett.testMode) {
                this.$contentHol.bind("mousemove.lhpMIV", {_this: this}, this.showCurrentCoor)
            }
        }
        this.setProperties(this.sett.startX, this.sett.startY, this.sett.startScale, true)
    };
    e.prototype.destroy = function () {
        this.contentLoader.dispose();
        this.contentLoader = null;
        this.animStop();
        this.stopMoving();
        this.stopDirectMoving();
        if (this.markers) {
            this.markers.destroy()
        }
        if (this.$navHol) {
            this.$navHol.find("li").each(function (m) {
                g(this).unbind()
            })
        }
        if (this.map) {
            this.map.destroy()
        }
        this.$mainHolder.unbind(".lhpMIV");
        this.$contentHol.unbind();
        this.$mivHol.remove();
        g.each(this, function (n, m) {
            if (!g.isFunction(m)) {
                n = null
            }
        })
    };
    e.prototype.mouseenterHandler = function (m) {
        if (!m.data._this.sett.testMode) {
            m.data._this.$contentHol.removeClass("lhp_cursor_drag").addClass("lhp_cursor_hand")
        }
    };
    e.prototype.mousedownHandler = function (n) {
        if (g(n.target).hasClass("lhp_miv_content")) {
            var o = n.data._this, m = a(n);
            o.animStop(true);
            o.stopMoving();
            o.stopDirectMoving();
            o.lastMousePageCoor = m[0];
            if (o.isTouchDev) {
                o.pinchData.dt = 0;
                o.pinchData.ds = null;
                o.$contentHol.off("drag", o.mousemoveHandler);
                o.$contentHol.off("release", o.positioning);
                if (m.length < 2) {
                    o.$contentHol.on("drag", {_this: o}, o.mousemoveHandler);/*o.$contentHol.on("release",{_this:o},o.positioning)*/
                }
            } else {
                o.$contentHol.removeClass("lhp_cursor_hand").addClass("lhp_cursor_drag");
                o.$contentHol.unbind("mousemove.lhpMIV", o.mousemoveHandler).bind("mousemove.lhpMIV", {_this: o}, o.mousemoveHandler);/*o.$contentHol.unbind({"mouseup.lhpMIV":o.positioning}).bind("mouseup.lhpMIV",{_this:o},o.positioning)*/
            }
            n.preventDefault()
        }
    };
    e.prototype.pinchHandler = function (q) {
        if (g(q.target).hasClass("lhp_miv_content")) {
            var t = q.data._this, n = q.gesture.timeStamp - t.pinchData.dt, o = q.gesture.scale - t.pinchData.ds,
                m = t.pinchData.ds === null;
            if (n > 100 && Math.abs(o) > 0.1) {
                t.animStop();
                t.stopMoving();
                t.stopDirectMoving();
                t.pinchData.dt = q.gesture.timeStamp;
                t.pinchData.ds = q.gesture.scale;
                if (!m) {
                    var r = t.getCurrentState().scale, s = (o > 0) ? t.sm.nextScale() : t.sm.prevScale(),
                        p = t.calculateScale(q, s);
                    t.animSizeAndPos(p.x, p.y, p.w, p.h, false)
                }
            }
        }
    };
    e.prototype.mousemoveHandler = function (m) {
        if (g(m.target).hasClass("lhp_miv_content")) {
            var n = m.data._this;
            if (n.isTouchDev) {
                n.$contentHol.off("release", n.positioning);
                n.$contentHol.off("release", n.stopDraggingHandler).on("release", {_this: n}, n.stopDraggingHandler)
            } else {
                n.$contentHol.unbind("mouseup.lhpMIV", n.positioning);
                n.$contentHol.unbind({"mouseup.lhpMIV": n.stopDraggingHandler}).bind("mouseup.lhpMIV", {_this: n}, n.stopDraggingHandler);
                n.$contentHol.unbind({"mouseleave.lhpMIV": n.stopDraggingHandler}).bind("mouseleave.lhpMIV", {_this: n}, n.stopDraggingHandler)
            }
            n.dragging(m, "hard");
            m.preventDefault()
        }
    };
    e.prototype.mouseupHandler = function (m) {
        var n = m.data._this;
        n.$contentHol.unbind("mousemove.lhpMIV", n.mousemoveHandler);
        n.$contentHol.unbind("mouseup.lhpMIV", n.positioning);
        if (!n.sett.testMode) {
            n.$contentHol.removeClass("lhp_cursor_drag").addClass("lhp_cursor_hand")
        } else {
            n.$contentHol.css("cursor", "default")
        }
    };
    e.prototype.stopDraggingHandler = function (m) {
        var n = m.data._this;
        if (n.isTouchDev) {
            n.$contentHol.off("release", n.stopDraggingHandler)
        } else {
            n.$contentHol.unbind({"mouseup.lhpMIV": n.stopDraggingHandler});
            n.$contentHol.unbind({"mouseleave.lhpMIV": n.stopDraggingHandler})
        }
        n.dragging(m, "inertia")
    };
    e.prototype.mousewheelHandler = function (n, q) {
        var p = n.data._this, o = (q > 0) ? p.sm.nextScale() : p.sm.prevScale(), m = p.calculateScale(n, o);
        p.animStop();
        p.stopMoving();
        p.stopDirectMoving();
        p.animSizeAndPos(m.x, m.y, m.w, m.h);
        n.preventDefault();
        n.stopPropagation();
        return false
    };
    e.prototype.showCurrentCoor = function (p) {
        var r = p.data._this, m = a(p)[0], q = r.$contentHol.position(), n = r.$mivHol.offset(),
            o = r.$content.width() / r.contentFullSize.w;
        m.x = Math.round((m.x - q.left - n.left) / o);
        m.y = Math.round((m.y - q.top - n.top) / o);
        r.$infoBox.css("display", "block");
        r.$infoBox.html("x:" + m.x + " y:" + m.y)
    };
    e.prototype.adaptsToContainer = function () {
        if (this.$content) {
            var m = this.$content.width() / this.contentFullSize.w;
            m = (m > this.sett.zoomLevel) ? this.sett.zoomLevel : m;
            this.animStop();
            this.stopMoving();
            this.stopDirectMoving();
            this.setProperties(null, null, m, true)
        }
    };
    e.prototype.beginZooming = function (o) {
        if (this.$content) {
            var s = (o == "Z") ? 1 : -1, p = {_this: this},
                r = {x: (this.$mivHol.width() / 2), y: (this.$mivHol.height() / 2)}, n = this.$mivHol.offset(),
                m = {x: (r.x + n.left), y: (r.y + n.top)}, q = {data: p, pageX: m.x, pageY: m.y};
            this.animStop(true);
            this.stopMoving();
            this.stopDirectMoving();
            if (!this.movingIntreval) {
                this.movingIntreval = setInterval(function (v, t, u) {
                    return function () {
                        v.zooming(t, u)
                    }
                }(this, q, s), this.sett.animTime / 5)
            }
            this.zooming(q, s)
        }
    };
    e.prototype.zooming = function (n, p) {
        var o = (p > 0) ? this.sm.nextScale() : this.sm.prevScale(), m = this.calculateScale(n, o);
        this.animStop();
        this.animSizeAndPos(m.x, m.y, m.w, m.h);
        if (this.sett.fitToViewportShortSide) {
            if (o >= this.sett.zoomLevel || m.w <= this.$mivHol.width() || m.h <= this.$mivHol.height()) {
                this.stopZooming()
            }
        } else {
            if (o >= this.sett.zoomLevel || (m.w <= this.$mivHol.width() && m.h <= this.$mivHol.height())) {
                this.stopZooming()
            }
        }
    };
    e.prototype.stopZooming = function () {
        this.stopMoving()
    };
    e.prototype.beginDirectMove = function (m) {
        if (this.$content) {
            this.animStop(true);
            this.stopMoving();
            this.sm.setScale(this.$content.width() / this.contentFullSize.w);
            this.speedX = this.speedY = 0;
            switch (m) {
                case"U":
                    this.speedY = -50000 / this.sett.animTime;
                    break;
                case"D":
                    this.speedY = 50000 / this.sett.animTime;
                    break;
                case"L":
                    this.speedX = -50000 / this.sett.animTime;
                    break;
                case"R":
                    this.speedX = 50000 / this.sett.animTime;
                    break
            }
            if (!this.movingDirectIntreval && (this.speedX || this.speedY)) {
                this.movingDirectIntreval = setInterval(function (n) {
                    return function () {
                        n.directMoveWithInertia()
                    }
                }(this), 10)
            }
        }
    };
    e.prototype.directMoveWithInertia = function () {
        var n = this.$contentHol.position().left, m = this.$contentHol.position().top, q = Math.ceil(n + this.speedX),
            o = Math.ceil(m + this.speedY), p;
        if (!this.movingIntreval) {
            this.movingIntreval = setInterval(function (r) {
                return function () {
                    r.moveWithInertia()
                }
            }(this), 10)
        }
        p = this.getSafeTarget(q, o, this.speedX, this.speedY);
        this.targetX = Math.round(p.x);
        this.targetY = Math.round(p.y)
    };
    e.prototype.stopDirectMoving = function () {
        clearInterval(this.movingDirectIntreval);
        this.movingDirectIntreval = null
    };
    e.prototype.dragging = function (r, p) {
        var q = this.sett.draggInertia, n = a(r)[0], o = n.x - this.lastMousePageCoor.x,
            m = n.y - this.lastMousePageCoor.y;
        if (p == "inertia" && this.lastDragg) {
            this.draggingWithInertia(this.lastDragg.x * q, this.lastDragg.y * q)
        } else {
            this.draggingHard(o, m)
        }
        this.lastDragg = {x: (Math.abs(o) < 5) ? 0 : o, y: (Math.abs(m) < 5) ? 0 : m};
        this.lastMousePageCoor = n
    };
    e.prototype.draggingHard = function (n, m) {
        var r = this.$contentHol.position(), q = r.left + n, o = r.top + m, p = this.getSafeTarget(q, o, n, m);
        this.animStop();
        this.$contentHol.css({left: p.x, top: p.y})
    };
    e.prototype.draggingWithInertia = function (n, m) {
        var q = this.targetX + n, o = this.targetY + m, p;
        if (!this.movingIntreval) {
            this.movingIntreval = setInterval(function (r) {
                return function () {
                    r.moveWithInertia()
                }
            }(this), 10);
            q = this.$contentHol.position().left + n;
            o = this.$contentHol.position().top + m
        }
        p = this.getSafeTarget(q, o, n, m);
        this.targetX = Math.round(p.x);
        this.targetY = Math.round(p.y)
    };
    e.prototype.getSafeTarget = function (z, x, p, n) {
        var m = this.getLimit(this.sm.getScale()), q = m.xMin, t = m.xMax, A = m.yMin, s = m.yMax,
            o = this.$mivHol.width(), y = this.$mivHol.height(), w = o / 2, v = y / 2,
            u = this.contentFullSize.w * this.sm.getScale(), r = this.contentFullSize.h * this.sm.getScale();
        if ((n < 0) && (x < A)) {
            x = A
        } else {
            if ((n > 0) && (x > s)) {
                x = s
            }
        }
        if (r < y) {
            x = v - r / 2
        }
        if ((p < 0) && (z < q)) {
            z = q
        } else {
            if ((p > 0) && (z > t)) {
                z = t
            }
        }
        if (u < o) {
            z = w - u / 2
        }
        return {x: z, y: x}
    };
    e.prototype.moveWithInertia = function () {
        var p = this.$contentHol.position(), o = this.sett.dragSmooth, n, m;
        p.left = Math.ceil(p.left);
        p.top = Math.ceil(p.top);
        n = (this.targetX - p.left) / o;
        m = (this.targetY - p.top) / o;
        if (Math.abs(n) < 1) {
            n = (n > 0) ? 1 : -1
        }
        if (Math.abs(m) < 1) {
            m = (m > 0) ? 1 : -1
        }
        if (p.left == this.targetX) {
            n = 0
        }
        if (p.top == this.targetY) {
            m = 0
        }
        this.$contentHol.css({left: p.left + n, top: p.top + m});
        this.dispatchEventChange();
        if (p.left == this.targetX && p.top == this.targetY) {
            this.stopDirectMoving();
            this.stopMoving()
        }
    };
    e.prototype.stopMoving = function () {
        clearInterval(this.movingIntreval);
        this.movingIntreval = null
    };
    e.prototype.positioning = function (n) {
        if (g(n.target).hasClass("lhp_miv_content")) {
            var o = n.data._this, m = o.calculatePosInCenter(n);
            o.animStop();
            o.stopMoving();
            o.stopDirectMoving();
            o.animSizeAndPos(m.x, m.y)
        }
    };
    e.prototype.setProperties = function (B, v, p, A) {
        if (this.$content) {
            var q = {_this: this}, r = {x: (this.$mivHol.width() / 2), y: (this.$mivHol.height() / 2)},
                C = this.$mivHol.offset(), o = {x: (r.x + C.left), y: (r.y + C.top)},
                s = {data: q, pageX: o.x, pageY: o.y}, z = this.$contentHol.position(), t, w, m = z.left, D = z.top,
                n = this.$content.width(), u = this.$content.height();
            B = parseFloat(B);
            v = parseFloat(v);
            p = parseFloat(p);
            if (!isNaN(p)) {
                if (p > this.sett.zoomLevel) {
                    p = this.sett.zoomLevel
                }
                t = this.calculateScale(s, p);
                m = t.x;
                D = t.y;
                n = t.w;
                u = t.h
            }
            w = n / this.contentFullSize.w;
            if (!isNaN(B)) {
                m = -(B * w) + r.x
            }
            if (!isNaN(v)) {
                D = -(v * w) + r.y
            }
            this.animStop();
            this.stopMoving();
            this.stopDirectMoving();
            this.animSizeAndPos(m, D, n, u, A)
        }
    };
    e.prototype.calculatePosInCenter = function (o) {
        var p = this.$contentHol.position(), s = this.$mivHol.offset(),
            n = {x: (this.$mivHol.width() / 2), y: (this.$mivHol.height() / 2)}, t = a(o)[0],
            u = {x: (t.x - s.left), y: (t.y - s.top)}, r, q, m, v;
        r = n.x - u.x;
        q = n.y - u.y;
        m = p.left + r;
        v = p.top + q;
        return {x: m, y: v, shftX: r, shftY: q}
    };
    e.prototype.calculateScale = function (r, q) {
        var u = this.$mivHol.offset(), p = this.$content.offset(), v = a(r)[0], t, o, m, w, n, s;
        q = this.getSafeScale(q);
        this.sm.setScale(q);
        t = this.$content.width() / this.contentFullSize.w;
        o = {x: (v.x - p.left) / t, y: (v.y - p.top) / t};
        n = Math.round(this.contentFullSize.w * q);
        s = Math.round(this.contentFullSize.h * q);
        m = Math.round(p.left - u.left + o.x * (t - q));
        w = Math.round(p.top - u.top + o.y * (t - q));
        return {x: m, y: w, w: n, h: s}
    };
    e.prototype.getSafeScale = function (t) {
        var v = (t <= 0) ? 0.00001 : t, m = this.$mivHol.width(), w = this.$mivHol.height(), u = this.contentFullSize.w,
            q = this.contentFullSize.h, s = u * v, o = q * v, r = m / u, x = w / q, n = m / w, p = s / o;
        if (this.sett.fitToViewportShortSide) {
            if (s < m || o < w) {
                r = m / this.contentFullSize.w;
                x = w / this.contentFullSize.h;
                v = Math.max(r, x);
                if (!this.sett.contentSizeOver100 && (u <= m || q <= w)) {
                    v = 1
                }
            }
        } else {
            if (s < m && o < w) {
                if (p <= n) {
                    v = x
                } else {
                    v = r
                }
            }
            if (!this.sett.contentSizeOver100 && u <= m && q <= w) {
                v = 1
            }
        }
        return v
    };
    e.prototype.getLimit = function (o) {
        var n = -(Math.round(this.contentFullSize.w * o) - this.$mivHol.width()),
            m = -(Math.round(this.contentFullSize.h * o) - this.$mivHol.height());
        return {xMin: n, xMax: 0, yMin: m, yMax: 0}
    };
    e.prototype.getSafeXY = function (z, v, u) {
        var m = this.getLimit(u), n = this.$mivHol.width(), w = this.$mivHol.height(), t = n / 2, r = w / 2,
            s = this.contentFullSize.w, p = this.contentFullSize.h, q = s * u, o = p * u, B = z, A = v;
        if (q < n) {
            if (z < m.xMin || z > m.xMax) {
                B = t - q / 2
            }
        } else {
            if (z < m.xMin) {
                B = m.xMin
            } else {
                if (z > m.xMax) {
                    B = m.xMax
                }
            }
        }
        if (o < w) {
            if (v < m.yMin || v > m.yMax) {
                A = r - o / 2
            }
        } else {
            if (v < m.yMin) {
                A = m.yMin
            } else {
                if (v > m.yMax) {
                    A = m.yMax
                }
            }
        }
        return {x: B, y: A}
    };
    e.prototype.animSizeAndPos = function (u, r, v, o, t) {
        var q, s, z = function (w) {
            return function () {
                w.dispatchEventChange()
            }
        }(this), m = function (w) {
            return function () {
                w.dispatchEventChange()
            }
        }(this), n = function (w) {
            return function () {
                w.dispatchEventChange()
            }
        }(this), p = function (w) {
            return function () {
                w.isScaled = false;
                w.dispatchEventChange()
            }
        }(this);
        if (v != undefined) {
            s = v / this.contentFullSize.w
        } else {
            s = this.$content.width() / this.contentFullSize.w
        }
        if (u != undefined && r != undefined) {
            q = this.getSafeXY(u, r, s);
            if (t) {
                this.$contentHol.css({left: q.x, top: q.y});
                m()
            } else {
                this.$contentHol.animate({left: q.x, top: q.y}, {
                    duration: this.sett.animTime,
                    easing: "easeOutCubic",
                    step: z,
                    complete: m
                })
            }
        }
        if (v != undefined && o != undefined && (v != this.$content.width() || o != this.$content.height())) {
            this.isScaled = true;
            if (t) {
                this.$content.css({width: v, height: o});
                n();
                p()
            } else {
                this.$content.animate({width: v, height: o}, {
                    duration: this.sett.animTime,
                    easing: "easeOutCubic",
                    step: n,
                    complete: p
                })
            }
        }
    };
    e.prototype.animStop = function (m) {
        if (this.$contentHol && this.$content) {
            this.$contentHol.stop().clearQueue();
            this.$content.stop().clearQueue();
            if (m) {
                this.sm.setScale(this.$content.width() / this.contentFullSize.w)
            }
            this.dispatchEventChange()
        }
    };
    e.prototype.dispatchEventChange = function () {
        var m = this.getCurrentState(), n = g.Event("mivChange", m);
        this.allow = m;
        this.$mainHolder.trigger(n)
    };
    e.prototype.dispatchEventReady = function () {
        this.$mainHolder.trigger(g.Event("mivReady"))
    };
    e.prototype.getCurrentState = function () {
        var n = {};
        if (this.$content) {
            var s = this.$contentHol.position(), o = this.getLimit(this.sm.getScale()), m = this.$content.width(),
                p = this.$content.height(), r = {x: (this.$mivHol.width() / 2), y: (this.$mivHol.height() / 2)},
                q = m / this.contentFullSize.w;
            n.allowDown = (Math.ceil(s.top) < Math.ceil(o.yMax));
            n.allowUp = (Math.ceil(s.top) > Math.ceil(o.yMin));
            n.allowRight = (Math.ceil(s.left) < Math.ceil(o.xMax));
            n.allowLeft = (Math.ceil(s.left) > Math.ceil(o.xMin));
            n.allowZoom = (m / this.contentFullSize.w < this.sett.zoomLevel);
            if (this.sett.fitToViewportShortSide) {
                n.allowUnzoom = (m > this.$mivHol.width() && p > this.$mivHol.height())
            } else {
                n.allowUnzoom = (m > this.$mivHol.width() || p > this.$mivHol.height())
            }
            n.wPropViewpContent = this.$mivHol.width() / m;
            n.hPropViewpContent = this.$mivHol.height() / p;
            n.xPosInCenter = Math.round((-s.left + r.x) / q);
            n.yPosInCenter = Math.round((-s.top + r.y) / q);
            n.scale = q;
            n.isScaled = this.isScaled
        }
        return n
    };
    e.prototype.allowCompare = function (o, m) {
        var n = true;
        g.each(o, function (p) {
            if (o[p] != m[p]) {
                n = false;
                return
            }
        });
        return n
    };
    var l = function (n, m) {
        this.step = m;
        this.curr = 1;
        this.zoomLevel = n
    };
    l.prototype.getScale = function () {
        return this.curr
    };
    l.prototype.setScale = function (m) {
        this.curr = m
    };
    l.prototype.nextScale = function () {
        var m = this.curr + this.step;
        if (m > this.zoomLevel) {
            this.curr = this.zoomLevel
        } else {
            this.curr = m
        }
        return this.getScale()
    };
    l.prototype.prevScale = function () {
        var m = this.curr - this.step;
        if (m < this.step) {
            this.curr = 0
        } else {
            this.curr = m
        }
        return this.getScale()
    };
    var h = function (n, m, o) {
        this.url = n;
        this.$imgHolder = m;
        this.callback = o
    };
    h.prototype.loadStart = function () {
        var m = g("<img/>");
        m.one("load", function (n) {
            return function (o) {
                n.loadComplete(o)
            }
        }(this));
        this.$imgHolder.prepend(m);
        m.attr("src", this.url)
    };
    h.prototype.loadComplete = function (m) {
        if (this.callback) {
            this.callback(g(m.currentTarget))
        }
    };
    h.prototype.dispose = function () {
        this.callback = null
    };
    var c = function (o, p, m, n) {
        this.contentLoader = null;
        this.isTouchDev = n;
        this.sett = o;
        this.$mainHolder = p;
        this.$previewImg = m;
        this.$img = null;
        this.$mapHol = null;
        this.$mapWrappHol = null;
        this.$vr = null;
        this.lastMousePageCoor = {};
        this.contentLoadStartTimeout = null
    };
    c.prototype.ini = function (m) {
        this.$mapHol = g('<div class="lhp_miv_map"/>');
        this.$mapWrappHol = g('<div class="lhp_miv_map_wrapp_hol"/>');
        this.$mapHol.append(this.$mapWrappHol);
        m.prepend(this.$mapHol);
        this.contentLoader = new h(this.sett.mapThumb, this.$mapWrappHol, function (o) {
            return function (p) {
                o.start(p)
            }
        }(this));
        var n = this;
        this.contentLoadStartTimeout = setTimeout(function () {
            return function () {
                n.contentLoader.loadStart()
            }
        }(), 10)
    };
    c.prototype.start = function (n) {
        var m = n.width(), o = n.height(), p;
        this.$img = n;
        this.$img.css({cursor: "pointer"});
        this.$mapHol.addClass("lhp_miv_map_pos_" + this.sett.mapPos).css({width: m, height: o});
        this.$mapWrappHol.addClass("lhp_miv_map_wrapp_hol_" + this.sett.mapPos).css({width: m, height: o});
        switch (this.sett.mapPos) {
            case"T":
            case"B":
                this.$mapHol.css("margin-left", -m / 2);
                break;
            case"L":
            case"R":
                this.$mapHol.css("margin-top", -o / 2);
                break
        }
        this.$mapWrappHol.append(this.$img);
        this.$vr = g('<div class="lhp_miv_map_vr"/>').css({
            position: "absolute",
            "z-index": 2
        }).appendTo(this.$mapWrappHol);
        this.vrAddInteractions();
        this.$mainHolder.bind("mivChange.lhpMIV", {_this: this}, this.mivChangeHandler);
        p = this.$mainHolder.lhpMegaImgViewer("getCurrentState");
        p.data = {};
        p.data._this = this;
        this.mivChangeHandler(p)
    };
    c.prototype.destroy = function () {
        clearTimeout(this.contentLoadStartTimeout);
        this.$vr.unbind(".lhpMIV");
        this.$mapHol.unbind(".lhpMIV");
        this.$img.unbind(".lhpMIV");
        this.contentLoader.dispose();
        this.contentLoader = null
    };
    c.prototype.vrAddInteractions = function () {
        if (this.isTouchDev) {
            this.$vr.bind("touchstart.lhpMIV", {_this: this}, this.mousedownHandler);
            this.$vr.bind("touchend.lhpMIV", {_this: this}, this.mouseupHandler);
            this.$img.bind("touchstart.lhpMIV", {_this: this}, this.mouseclickHandler)
        } else {
            this.$vr.bind("mouseenter.lhpMIV", {_this: this}, this.mouseenterHandler);
            this.$vr.bind("mousedown.lhpMIV", {_this: this}, this.mousedownHandler);
            this.$mapHol.bind("mouseup.lhpMIV", {_this: this}, this.mouseupHandler);
            this.$mapHol.bind("mouseleave.lhpMIV", {_this: this}, this.mouseupHandler);
            this.$img.bind("click.lhpMIV", {_this: this}, this.mouseclickHandler)
        }
    };
    c.prototype.mouseenterHandler = function (m) {
        m.data._this.$vr.removeClass("lhp_cursor_drag").addClass("lhp_cursor_hand")
    };
    c.prototype.mousedownHandler = function (m) {
        var n = m.data._this;
        n.$mainHolder.unbind("mivChange.lhpMIV", n.mivChangeHandler);
        if (n.isTouchDev) {
            n.$mapHol.unbind("touchmove.lhpMIV", n.mousemoveHandler).bind("touchmove.lhpMIV", {_this: n}, n.mousemoveHandler)
        } else {
            n.$vr.removeClass("lhp_cursor_hand").addClass("lhp_cursor_drag");
            n.$mapHol.unbind("mousemove.lhpMIV", n.mousemoveHandler).bind("mousemove.lhpMIV", {_this: n}, n.mousemoveHandler)
        }
        n.$vr.unbind("mouseenter.lhpMIV", n.mouseenterHandler);
        n.lastMousePageCoor = a(m)[0];
        n.$vr.addClass("lhp_miv_map_vr_over");
        m.preventDefault()
    };
    c.prototype.mousemoveHandler = function (m) {
        var n = m.data._this;
        if (n.isTouchDev) {
            n.$mapHol.unbind({"touchend.lhpMIV": n.stopDraggingHandler}).bind("touchend.lhpMIV", {_this: n}, n.stopDraggingHandler)
        } else {
            n.$mapHol.unbind({"mouseup.lhpMIV": n.stopDraggingHandler}).bind("mouseup.lhpMIV", {_this: n}, n.stopDraggingHandler);
            n.$mapHol.unbind({"mouseleave.lhpMIV": n.stopDraggingHandler}).bind("mouseleave.lhpMIV", {_this: n}, n.stopDraggingHandler)
        }
        n.dragging(m);
        m.preventDefault()
    };
    c.prototype.mouseupHandler = function (m) {
        var n = m.data._this;
        n.$mapHol.unbind("touchmove.lhpMIV", n.mousemoveHandler);
        n.$mapHol.unbind("mousemove.lhpMIV", n.mousemoveHandler);
        n.$mainHolder.unbind("mivChange.lhpMIV", n.mivChangeHandler).bind("mivChange.lhpMIV", {_this: n}, n.mivChangeHandler);
        if (!n.isTouchDev) {
            n.$vr.removeClass("lhp_cursor_drag").addClass("lhp_cursor_hand");
            n.$vr.unbind("mouseenter.lhpMIV", n.mouseenterHandler).bind("mouseenter.lhpMIV", {_this: n}, n.mouseenterHandler)
        }
        n.$vr.removeClass("lhp_miv_map_vr_over")
    };
    c.prototype.mouseclickHandler = function (p) {
        var r = p.data._this, n = a(p)[0], o = r.$mapHol.offset(),
            m = (n.x - o.left) * r.sett.mainImgWidth / r.$mapWrappHol.width(),
            q = (n.y - o.top) * r.sett.mainImgHeight / r.$mapWrappHol.height();
        r.$mainHolder.lhpMegaImgViewer("setPosition", m, q)
    };
    c.prototype.dragging = function (s) {
        var n = a(s)[0], o = n.x - this.lastMousePageCoor.x, m = n.y - this.lastMousePageCoor.y,
            t = this.$vr.position(), r = t.left + o, p = t.top + m, q = this.getSafeTarget(r, p, o, m);
        this.$vr.css({left: q.x, top: q.y});
        this.lastMousePageCoor = n;
        this.mainHolderSetPosition(q.x, q.y)
    };
    c.prototype.stopDraggingHandler = function (m) {
        var n = m.data._this;
        n.$mapHol.unbind({"touchend.lhpMIV": n.stopDraggingHandler});
        n.$mapHol.unbind({"mouseup.lhpMIV": n.stopDraggingHandler});
        n.$mapHol.unbind({"mouseleave.lhpMIV": n.stopDraggingHandler})
    };
    c.prototype.getSafeTarget = function (r, q, o, n) {
        var p = 0, m = 0, t = this.$mapWrappHol.width() - this.$vr.width(),
            s = this.$mapWrappHol.height() - this.$vr.height();
        if ((n < 0) && (q < m)) {
            q = m
        } else {
            if ((n > 0) && (q > s)) {
                q = s
            }
        }
        if ((o < 0) && (r < p)) {
            r = p
        } else {
            if ((o > 0) && (r > t)) {
                r = t
            }
        }
        return {x: r, y: q}
    };
    c.prototype.mainHolderSetPosition = function (o, n) {
        var m = (o + this.$vr.width() / 2) * this.sett.mainImgWidth / this.$mapWrappHol.width(),
            p = (n + this.$vr.height() / 2) * this.sett.mainImgHeight / this.$mapWrappHol.height();
        this.$mainHolder.lhpMegaImgViewer("setPosition", m, p, null, true)
    };
    c.prototype.mivChangeHandler = function (r) {
        var t = r.data._this, n = t.$mapWrappHol.width(), q = t.$mapWrappHol.height(),
            s = Math.round(n * ((r.wPropViewpContent > 1) ? 1 : r.wPropViewpContent)),
            m = Math.round(q * ((r.hPropViewpContent > 1) ? 1 : r.hPropViewpContent)),
            p = Math.round((n / t.sett.mainImgWidth) * r.xPosInCenter - (s / 2)),
            o = Math.round((q / t.sett.mainImgHeight) * r.yPosInCenter - (m / 2));
        t.$vr.css({width: s, height: m, left: p, top: o})
    };
    var b = function (r, q, m, o, p, n) {
        this.$mainHolder = r;
        this.$contentHol = q;
        this.containerId = m;
        this.mClass = "lhp_miv_hotspot";
        this.mInnClass = "lhp_miv_marker";
        this.pClass = "lhp_miv_popup";
        this.isTouchDev = o;
        this.markers = [];
        this.popups = [];
        this.currShowPopup = null;
        this.popupShowAction = p;
        this.startScale = n
    };
    b.prototype.ini = function () {
        var n = this, m;
        g("#" + this.containerId).find("." + this.mClass).each(function () {
            n.addMarker(g(this).clone(true, true))
        });
        this.$mainHolder.bind("mivChange.lhpMIV", {_this: this}, this.mivChangeHandler);
        if (this.startScale == 1) {
            this.positionsMarkers(1)
        }
    };
    b.prototype.destroy = function () {
        var m;
        for (m in this.markers) {
            this.markers[m].destroy()
        }
        for (m in this.popups) {
            this.popups[m].destroy()
        }
        this.$mainHolder = null;
        this.$contentHol = null;
        this.markers = null;
        this.popups = null
    };
    b.prototype.addMarker = function (u) {
        var q = 0, v = 0, t = 0, s = 0, m, r, n, o;
        if (u.attr("data-id")) {
            q = u.attr("data-id")
        }
        if (u.attr("data-x")) {
            v = parseInt(u.attr("data-x"))
        }
        if (u.attr("data-y")) {
            t = parseInt(u.attr("data-y"))
        }
        if (u.attr("data-visible-scale")) {
            s = parseFloat(u.attr("data-visible-scale"))
        }
        if (u.attr("data-url")) {
            m = u.attr("data-url")
        }
        o = u.find("." + this.pClass).remove()[0];
        this.$contentHol.append(u);
        r = new j(this, q, v, t, s, m, u);
        this.markers.push(r);
        if (o) {
            this.$contentHol.append(o);
            n = new k(q, g(o), r);
            n.ini();
            this.popups.push(n);
            r.popup = n
        }
        r.ini()
    };
    b.prototype.mivChangeHandler = function (m) {
        var n = m.data._this;
        if (m.isScaled) {
            n.positionsMarkers(m.scale);
            n.positionsPopup()
        } else {
            n.positionsPopup()
        }
    };
    b.prototype.positionsMarkers = function (o) {
        var n, m;
        for (n in this.markers) {
            m = this.markers[n];
            if (m.positions) {
                m.positions(o)
            }
            if (m.visibility) {
                m.visibility(o)
            }
        }
    };
    b.prototype.positionsPopup = function () {
        if (this.currShowPopup) {
            this.currShowPopup.positions()
        }
    };
    b.prototype.getLimit = function () {
        var q = this.$contentHol.position(), n = -q.left, p = n + this.$mainHolder.width(), m = -q.top,
            o = m + this.$mainHolder.height();
        return {xMin: n, xMax: p, yMin: m, yMax: o}
    };
    b.prototype.showPopup = function (m) {
        if (!this.currShowPopup) {
            this.currShowPopup = m;
            this.currShowPopup.show();
            this.currShowPopup.positions();
            return
        }
        if (this.currShowPopup && this.currShowPopup != m) {
            this.hidePopup(this.currShowPopup);
            this.currShowPopup = m;
            this.currShowPopup.show();
            this.currShowPopup.positions()
        }
    };
    b.prototype.hidePopup = function (m) {
        if (this.currShowPopup && this.currShowPopup == m) {
            this.currShowPopup.hide();
            this.currShowPopup = null
        }
    };
    var j = function (q, s, m, r, p, n, o) {
        this.markers = q;
        this.id = s;
        this.x = m;
        this.y = r;
        this.visibleScale = p;
        this.url = n;
        this.$m = o;
        this.visible = false;
        this.popup = null;
        this.popupClose = null
    };
    j.prototype.ini = function () {
        this.style();
        this.positions(1);
        if (this.url) {
            this.addInteractivityUrl()
        }
        if (this.popup) {
            this.popupClose = this.popup.addClose();
            this.addPopupAction()
        } else {
            if (this.markers.popupShowAction == "rollover") {
                this.addPopupActionNull()
            }
        }
    };
    j.prototype.destroy = function () {
        this.getInn().unbind(".lhpMIV");
        if (this.popup) {
            this.popupClose.unbind(".lhpMIV");
            this.popupClose = null;
            this.popup = null
        }
        this.$m = null;
        this.markers = null
    };
    j.prototype.getInn = function () {
        return this.$m.find("." + this.markers.mInnClass)
    };
    j.prototype.getSize = function () {
        return {w: this.getInn().width(), h: this.getInn().height()}
    };
    j.prototype.getEdges = function () {
        return this.findEdges()
    };
    j.prototype.findEdges = function () {
        var q = this.getInn().offset(), n = this.markers.$mainHolder.offset(), u = this.markers.$contentHol.position(),
            x = u.left, p = u.top, v = this.getSize(), o = q.left - x - n.left, m = o + v.w, w = q.top - p - n.top,
            s = w + v.h;
        return ({L: o, R: m, T: w, B: s})
    };
    j.prototype.getLimit = function () {
        return this.markers.getLimit()
    };
    j.prototype.style = function () {
        var m = {position: "absolute", "z-index": "2", display: "none"};
        this.$m.css(m);
        this.$m.css("height", this.$m.height())
    };
    j.prototype.positions = function (n) {
        var m = Math.round(this.x * n), o = Math.round(this.y * n);
        this.$m.css({left: m, top: o})
    };
    j.prototype.visibility = function (m) {
        if (m >= this.visibleScale) {
            if (!this.visible) {
                this.$m.stop(true, true).fadeIn(300)
            }
            this.visible = true
        } else {
            if (this.visible) {
                this.$m.fadeOut(300)
            }
            this.visible = false;
            this.markers.hidePopup(this.popup)
        }
    };
    j.prototype.addInteractivityUrl = function () {
        this.getInn().css("cursor", "pointer");
        this.getInn().bind(((this.markers.isTouchDev) ? "touchend.lhpMIV" : "mousedown.lhpMIV"), {_this: this}, this.clickHandlerUrl)
    };
    j.prototype.clickHandlerUrl = function (m) {
        var n = m.data._this;
        if (n.url) {
            window.location = n.url
        }
        m.stopPropagation()
    };
    j.prototype.addPopupAction = function () {
        if (this.markers.popupShowAction == "click") {
            this.getInn().bind(((this.markers.isTouchDev) ? "touchend.lhpMIV" : "mousedown.lhpMIV"), {_this: this}, this.showPopup);
            this.getInn().css("cursor", "pointer")
        } else {
            this.getInn().bind(((this.markers.isTouchDev) ? "touchend.lhpMIV" : "mouseenter.lhpMIV"), {_this: this}, this.showPopup)
        }
        this.popupClose.bind(((this.markers.isTouchDev) ? "touchend.lhpMIV" : "mousedown.lhpMIV"), {_this: this}, this.hidePopup)
    };
    j.prototype.addPopupActionNull = function () {
        this.getInn().bind(((this.markers.isTouchDev) ? "touchend.lhpMIV" : "mouseenter.lhpMIV"), {_this: this}, this.showPopup)
    };
    j.prototype.showPopup = function (m) {
        var n = m.data._this;
        n.markers.showPopup(n.popup);
        m.preventDefault();
        m.stopPropagation();
        return false
    };
    j.prototype.hidePopup = function (m) {
        var n = m.data._this;
        n.markers.hidePopup(n.popup);
        m.preventDefault();
        m.stopPropagation();
        return false
    };
    var k = function (o, n, m) {
        this.id = o;
        this.$p = n;
        this.marker = m;
        this.posHor = this.posHC;
        this.posVer = this.posVT;
        this.$closeHolder = null
    };
    k.prototype.ini = function () {
        if (this.$p.hasClass("pos-TL")) {
            this.posHor = this.posHL;
            this.posVer = this.posVT
        } else {
            if (this.$p.hasClass("pos-T")) {
                this.posHor = this.posHC;
                this.posVer = this.posVT
            } else {
                if (this.$p.hasClass("pos-TR")) {
                    this.posHor = this.posHR;
                    this.posVer = this.posVT
                } else {
                    if (this.$p.hasClass("pos-L")) {
                        this.posHor = this.posHL;
                        this.posVer = this.posVC
                    } else {
                        if (this.$p.hasClass("pos-R")) {
                            this.posHor = this.posHR;
                            this.posVer = this.posVC
                        } else {
                            if (this.$p.hasClass("pos-BL")) {
                                this.posHor = this.posHL;
                                this.posVer = this.posVB
                            } else {
                                if (this.$p.hasClass("pos-B")) {
                                    this.posHor = this.posHC;
                                    this.posVer = this.posVB
                                } else {
                                    if (this.$p.hasClass("pos-BR")) {
                                        this.posHor = this.posHR;
                                        this.posVer = this.posVB
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        this.$p.bind("mousewheel.lhpGIV", function (m) {
            m.stopPropagation();
            return false
        });
        this.style();
        this.positions(1)
    };
    k.prototype.destroy = function () {
        this.$p = null;
        this.marker = null
    };
    k.prototype.style = function () {
        var m = {display: "none", position: "absolute", "z-index": "3"};
        this.$p.css(m);
        this.$p.css("height", this.$p.height())
    };
    k.prototype.addClose = function () {
        this.$closeHolder = g('<div class="lhp_miv_popup_close"></div>');
        this.$closeHolder.hover(function () {
            g(this).css("opacity", 0.7)
        }, function () {
            g(this).css("opacity", 1)
        });
        this.$p.append(this.$closeHolder);
        return this.$closeHolder
    };
    k.prototype.getSize = function () {
        return {w: this.$p.width(), h: this.$p.height()}
    };
    k.prototype.positions = function () {
        var n = this.marker.getEdges(), m = this.posHor(n), r = this.posVer(n), p = this.marker.getLimit(),
            o = this.$p.width(), q = this.$p.height();
        if (m < p.xMin) {
            m = p.xMin
        } else {
            if (m + o > p.xMax) {
                m = p.xMax - o
            }
        }
        if (r < p.yMin) {
            r = p.yMin
        } else {
            if (r + q > p.yMax) {
                r = p.yMax - q
            }
        }
        this.$p.css({left: m, top: r})
    };
    k.prototype.posVT = function (m) {
        return Math.round(m.T) - this.$p.height()
    };
    k.prototype.posVC = function (m) {
        return Math.round(m.T + (m.B - m.T) / 2) - this.$p.height() / 2
    };
    k.prototype.posVB = function (m) {
        return Math.round(m.B)
    };
    k.prototype.posHL = function (m) {
        return Math.round(m.L) - this.$p.width()
    };
    k.prototype.posHC = function (m) {
        return Math.round(m.L + (m.R - m.L) / 2) - this.$p.width() / 2
    };
    k.prototype.posHR = function (m) {
        return Math.round(m.R)
    };
    k.prototype.show = function () {
        this.$p.fadeIn(300)
    };
    k.prototype.hide = function () {
        this.$p.stop().clearQueue().fadeOut(100)
    };

    function a(q) {
        var o, p = [], m = q.originalEvent, n = q.gesture;
        if (m && m.changedTouches) {
            for (o = 0; o < m.changedTouches.length; o++) {
                p.push({x: m.changedTouches[o].pageX, y: m.changedTouches[o].pageY})
            }
        } else {
            if (n && n.touches) {
                for (o = 0; o < n.touches.length; o++) {
                    p.push({x: n.touches[o].pageX, y: n.touches[o].pageY})
                }
            } else {
                p.push({x: q.pageX, y: q.pageY})
            }
        }
        return p
    }
})(jQuery);

function location_hash_update(hash, loc) {
    if (history.replaceState) {
        history.replaceState({
            time: (new Date()).getTime(),
            hash: hash
        }, null, ((typeof loc !== "undefined" && loc) ? loc : "") + ((typeof hash !== "undefined" && hash) ? hash : ""));
    } else {
        location.hash = hash;
    }
}

function location_hash_remove() {
    var scrollV, scrollH, loc = window.location;
    if ("pushState" in history) {
        history.pushState("", document.title, loc.pathname + loc.search);
    } else {
        // Prevent scrolling by storing the page's current scroll offset
        scrollV = document.body.scrollTop;
        scrollH = document.body.scrollLeft;

        loc.hash = "";

        // Restore the scroll offset, should be flicker free
        document.body.scrollTop = scrollV;
        document.body.scrollLeft = scrollH;
    }
}

function touchclick() {
    if (!Modernizr.touchevents) return "click";
    else return "touchstart";
}

var addCSSRule = function (sheet_id, rules) {
    $("#" + sheet_id).remove();
    $("<style type='text/css' id='" + sheet_id + "'>" + rules + "</style>").appendTo("head");
};

var removeCSSRule = function (sheet_id) {
    $("#" + sheet_id).remove();
};

var delay = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();

var forceRedraw = function ($el) {
    return ($el && $el.length && $el[0].offsetHeight);
};

$.fn.hasScrollBar = function () {
    return this.get(0).scrollHeight > this.outerHeight();
}

$.fn.hasHorzScrollbar = function () {
    return this.get(0).scrollWidth > this.width();
}


function fix_touch_hovers() {
    if (Modernizr.touchevents) {
        try {
            for (var i = 0; i < document.styleSheets.length; i++) {
                var sheet = document.styleSheets[i];
                fix_touch_hovers_delete(sheet, sheet.cssRules);
            }
        } catch (e) {
            console.log('fix hovers error');
        }
    }
}

function fix_touch_hovers_delete(sheet, rules) {
    var ignore = /:hover/;
    for (var j = rules.length - 1; j >= 0; j--) {
        var rule = rules[j];
        if (rule.type === CSSRule.STYLE_RULE && ignore.test(rule.selectorText)) {
            sheet.deleteRule(j);
        } else if (rule.type === CSSRule.MEDIA_RULE) {
            fix_touch_hovers_delete(rule, rule.cssRules);
        }
    }
}


/**
 * detect IE
 * returns version of IE or false, if browser is not Internet Explorer
 */
function detectIE() {
    var ua = window.navigator.userAgent;

    // Test values; Uncomment to check result …

    // IE 10
    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';

    // IE 11
    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';

    // Edge 12 (Spartan)
    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';

    // Edge 13
    // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';

    var msie = ua.indexOf('MSIE ');
    if (msie > 0) {
        // IE 10 or older => return version number
        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
    }

    var trident = ua.indexOf('Trident/');
    if (trident > 0) {
        // IE 11 => return version number
        var rv = ua.indexOf('rv:');
        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
    }

    var edge = ua.indexOf('Edge/');
    if (edge > 0) {
        // Edge (IE 12+) => return version number
        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
    }

    // other browser
    return false;
}

/*

 Click and touch events helpers

 */

function click_touch_init() {

    $(document).on("click.touchfocused", ".touchevents .touch-focused, .touch-focused-all", function (e) {
        var $o = $(this);
        if (!$o.hasClass("focused")) {
            if (!$o.hasClass("disable-prevent-link-clicks")) {
                e.preventDefault();
            }
            $(".touch-focused").not($o).not($o.closest(".touch-focused")).removeClass("focused");
            $o.addClass("focused");
        } else {
            if ($o.hasClass('touch-focused-toggle')) {
                $o.removeClass("focused");
            }
        }
    });

    $(document).on("click", ".touchevents .touch-focused a, .touch-focused-all a", function (e) {
        var $tf = $(this).closest(".touch-focused");
        if (!$tf.hasClass("focused") && !$tf.hasClass("disable-prevent-link-clicks")) {
            e.preventDefault();
        }
    });

    $(document).on("click touchstart", "*", function (e) {
        if (!$(e.target).closest(".touch-focused").length) {
            $(".touch-focused").removeClass("focused");
        }
    });

    $(document).on("click", ".no-click", function (e) {
        e.preventDefault();
    });

    $(document).on("click", ".no-propagation", function (e) {
        e.stopPropagation();
    });

}


/*

Responsive design helpers

 */

function responsive_type(force) {
    if (!$(".respon-meter").length) {
        $("body").append("<div class='respon-meter'></div>");
    }
    return (force) ? $(".respon-meter").css("z-index") : $("body").data("responsive_type");
}

function responsive_init() {
    responsive_update();
}

function responsive_update(force) {
    if (typeof force === "undefined") force = false;
    var ww = window.innerWidth;
    if ($("body").data("ww") != ww || force) {
        $("[data-place]").each(function () {
            var places = $(this).data("place");
            var breakpoints = Object.keys(places).map(function (value) {
                return parseInt(value);
            }).sort(function (a, b) {
                return a - b;
            }).reverse();
            for (i in breakpoints) {
                if (window.matchMedia("(min-width: " + breakpoints[i] + "px)").matches) {
                    if ($(places[breakpoints[i]]).length) {
                        $(this).attr("data-place-breakpoint", breakpoints[i]).insertBefore(places[breakpoints[i]]);
                    }
                    break;
                }
            }
        });

        $("body").data("ww", ww);
    }
}


/*

Set Background Image depending on img content inside it

 */

function img_to_bg($o, context) {
    if (typeof $o === "undefined" || !$o) $o = $(".img-to-bg", context);
    $o.each(function () {
        var $imgtobg = $(this);
        var $img = $imgtobg.find("> img");
        if ($img.length && $img.prop("src")) {
            $imgtobg.css("background-image", "url('" + $img.prop("src") + "')");
            $imgtobg.addClass("img-to-bg--inited");
        } else {
            var $sources = $(this).find("> picture > source, > picture > img");
            $sources.each(function () {
                var src = $(this).prop("srcset") || $(this).prop("src");
                if (src) {
                    $imgtobg.css("background-image", "url('" + src + "')");
                    $imgtobg.addClass("img-to-bg--inited");
                    return false;
                }
            });
        }
    });
}


/*

Fix buggy 100vh behaviour on mobiles

 */

function fix_100vh_init() {
    if (!Modernizr.touchevents) return;

    fix_100vh();
    $("body").data("fix_100vh_ww", $(window).width());
    $("body").data("fix_100vh_wh", window.innerHeight);

    // $(window).on("resize", function (e) {
    //     if ($("body").data("fix_100vh_ww") != $(window).width()) {
    //         fix_100vh();
    //     }
    //     $("body").data("fix_100vh_ww", $(window).width());
    // });

    $(window).on("resize", function (e) {
        var wh = window.innerHeight;
        if ($("body").data("fix_100vh_wh") != wh) {
            fix_100vh();
        }
        $("body").data("fix_100vh_wh", wh);
    });
}

function fix_100vh() {
    var wh = window.innerHeight;
    $(".js-fix-100vh").each(function () {
        var h = wh;
        if ($(this).hasClass('header__popover')) {
            h -= $('.header').height() + $('.topbar').height();
        }
        $(this).css("height", h);
    });
    $(".js-fix-100vh-min").each(function () {
        var h = wh;
        if ($(this).hasClass('header__popover')) {
            h -= $('.header').height() + $('.topbar').height();
        }
        $(this).css("min-height", h);
    });
    $(".js-fix-100vh-max").each(function () {
        var h = wh;
        if ($(this).hasClass('header__popover')) {
            h -= $('.header').height() + $('.topbar').height();
        }
        $(this).css("max-height", h);
    });
}


/*

Scroll to needed objects

 */

function goto_init() {

    $(window).on('load scroll', function () {
        //delay_goto_activate_link(function(){
        var $gtl_a = $(".js-goto");
        if ($gtl_a.length/* && !$("body").hasClass("scroll-animated")*/) {
            var dh = $(".header").outerHeight();
            var st = $(window).scrollTop();
            if (st > $(".header-replace").offset().top) {
                var active = false;
                var index = -1;
                var offset_line = st + $(window).height() / 4;
                $gtl_a.each(function (i) {
                    var $this = $(this);
                    var hash = $(this).attr("href");
                    if (hash.length < 2) {
                        return true;
                    }
                    $o = $(hash);
                    if (!$o.length) {
                        return true;
                    }
                    var offset_height = $o.outerHeight();
                    var offset_top = $o.offset().top;
                    var $next_offset_item = $($o.data('goto-offset-end'));
                    if (!offset_height && $next_offset_item.length) {
                        offset_height = $next_offset_item.offset().top - offset_top;
                    }
                    if (offset_line >= offset_top - dh && offset_line < offset_top + offset_height - dh) {
                        index = i;
                        active = hash;
                        return false;
                    }
                });
                if ($(".wrap").outerHeight() - $(window).height() - st < 100) {
                    index = $gtl_a.length - 1;
                    active = $gtl_a.last().attr("href");
                }
                if (active) {
                    if (typeof window['hmai'] === "undefined" || index != window['hmai']) {
                        window['hmai'] = index;
                        goto_deactivate_links($gtl_a);
                        goto_activate_link($gtl_a.filter('[href="' + active + '"]'));
                    }
                } else {
                    goto_deactivate_links($gtl_a);
                    window['hmai'] = -1;
                }
            } else {
                window['hmai'] = -1;
                goto_deactivate_links($gtl_a);
                // $gtl_a.removeClass("active").closest("li").removeClass("active");
                // goto_activate_link($gtl_a.first());
            }
        }
        //}, 100);
    });

    if (location.hash && location.hash.substr(1).match(/\w/i)) {
        var $o = $(location.hash);
        goto_object($o, 0);
        $(window).trigger('scroll');
    }

    $(document).on("click", ".js-goto", function (e) {
        var href = $(this).attr("href");
        var hash = href.split('#');
        if (hash.length > 1) {
            hash = '#' + hash.pop();
            var $o = $(hash);
            if ($o.length) {
                e.preventDefault();
                var $this = $(this);
                if ($this.closest(".goto-list").length) {
                    $this.closest(".goto-list").find("li").removeClass("active");
                    $this.closest("li").addClass("active");
                    tabs_update_pointer($this.closest(".tabs"));
                }
                if ($this.closest("[data-goto-hash-change]").length) {
                    location_hash_update($this.attr("href"));
                }
                goto_object($o);
            }
        }
    });
}

var delay_goto_activate_link = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();

function goto_object($o, speed, doffset) {
    if (typeof speed === 'undefined') {
        speed = 500;
    }
    if ($o.length) {
        var offset = $o.offset().top;
        if (typeof doffset !== 'undefined') {
            offset += doffset;
        }
        if ($o.data("goto-offset-element")) {
            $($o.data("goto-offset-element")).each(function () {
                offset -= $(this).outerHeight();
            });
        } else {
            $(".js-goto-offset").each(function () {
                offset -= $(this).outerHeight();
            });
        }
        goto_offset(offset, speed);
    }
}

function goto_offset(offset, speed, $scroller) {
    var scroller_default = false;
    if (typeof $scroller == "undefined" || !$scroller.length) {
        $scroller = $("html, body");
        scroller_default = true;
    }
    if (typeof speed === 'undefined') {
        speed = 500;
    }
    $scroller.addClass("scroll-animated");
    $("html, body").stop(true, true).animate({scrollTop: offset}, speed, function () {
        $scroller.removeClass("scroll-animated");
    });
}

function goto_activate_link($obj) {
    $obj.not('.js-goto-noactivate').addClass("active").siblings().removeClass("active")
        .end().closest("li").addClass("active").siblings().removeClass("active").find('.js-goto').removeClass("active");
    $obj.trigger("click-tabs-fixed-center");
}

function goto_deactivate_links($obj) {
    $obj.removeClass("active").closest("li").removeClass("active");
}


/*

Actions on Scroll

 */

function scroll_animations_init() {
    scroll_animations();

    var controller = new ScrollMagic.Controller();
    $(".scroll-activate").each(function () {
        var scene = new ScrollMagic.Scene({
            duration: 0,    // the scene should last for a scroll distance of 100px
            offset: -1 * (($(this).data('scroll-activate-offset')) ? $(this).data('scroll-activate-offset') : (($(this).data('scroll-activate-offset-element')) ? $($(this).data('scroll-activate-offset-element')).outerHeight() : 0)),
            reverse: ($(this).data('scroll-activate-reverse')) ? $(this).data('scroll-activate-reverse') : false
        }).addTo(controller);
        var trigger_hook = $(this).data('scroll-activate-trigger-hook') ? $(this).data('scroll-activate-trigger-hook') : "onEnter";
        if (window.matchMedia("(max-width: 640px)").matches && $(this).data('scroll-activate-trigger-hook-mobile')) {
            trigger_hook = $(this).data('scroll-activate-trigger-hook-mobile');
        }
        scene.triggerHook(trigger_hook).triggerElement($(this).data("scroll-activate-trigger") || $(this).closest(".scroll-activate-trigger").get(0)).setClassToggle(this, "scroll-active");
    });
}

function scroll_animations() {
    body_scrolled();
}

function body_scrolled(st) {
    if (typeof st === 'undefined') {
        st = $(window).scrollTop();
    }
    var scrolled_condition = st > 0;
    if (scrolled_condition) {
        if (!$("body").hasClass("scrolled")) $("body").addClass("scrolled");
    } else {
        if ($("body").hasClass("scrolled")) $("body").removeClass("scrolled");
    }
    var topbar_visible = ($('.topbar').length && !window.matchMedia("(max-width: 640px)").matches);
    if (topbar_visible) {
        if (st > 50) {
            if (!$("body").hasClass("header-scrolled")) $("body").addClass("header-scrolled");
        } else {
            if ($("body").hasClass("header-scrolled")) $("body").removeClass("header-scrolled");
        }
    }
}

$(window).on('load resize scroll', function (e) {

    var $sticky = $(".js-header-sticky");
    if ($sticky.length) {
        var top_space = $('.header').height();
        $sticky.each(function () {
            var $sticky_parent = $(this).closest(".js-header-sticky-wrapper");
            if (e.type == 'resize' || e.type == 'load') {
                $sticky_parent.css("height", $(this).outerHeight());
            }
            if ($(window).scrollTop() + top_space > $sticky_parent.offset().top) {
                if (!$(this).hasClass("fixed")) $(this).addClass("fixed");
            } else {
                if ($(this).hasClass("fixed")) $(this).removeClass("fixed");
            }
        });
    }

});

$(window).on('load resize scroll fbar-update', function (e) {

    var $sticky = $(".js-fbar-sticky");
    if ($sticky.length) {
        $sticky.each(function () {
            var $sticky_parent = $(this).closest(".js-fbar-sticky-wrapper");
            if (e.type == 'resize' || e.type == 'load' || e.type == 'fbar-update') {
                $sticky_parent.css("height", $(this).outerHeight());
            }
            if ($(window).scrollTop() + $(window).height() < $sticky_parent.offset().top + $sticky_parent.height()) {
                if (!$(this).hasClass("fixed")) {
                    $(this).addClass("fixed");
                }
            } else {
                if ($(this).hasClass("fixed")) {
                    $(this).removeClass("fixed");
                }
            }
            if ($(this).hasClass("fixed")) {
                $sticky_parent.css("height", $(this).outerHeight());
            } else {
                $sticky_parent.css("height", "");
            }
        });
    }

});


/*

 Lazy Loading Helpers

 */

function lazy_init($o, context) {

    if (!$("html").hasClass("lazy-inited")) {

        if (!("IntersectionObserver" in window)) {
            $(window).on('resize scroll', function (e) {
                lazy_load_depricated();
            });
        }

        $("html").addClass("lazy-inited");
    }

    if (typeof $o === 'undefined' || !$o) {
        $o = context ? $('[data-lazy-src]', context) : $('[data-lazy-src]');
    }
    if ("IntersectionObserver" in window) {
        var imageObserver = new IntersectionObserver(function (entries, observer) {
            entries.forEach(function (entry) {
                if (entry.isIntersecting) {
                    var image = entry.target;
                    lazy_load_change($(image));
                    imageObserver.unobserve(image);
                }
            });
        });

        $o.not(".lazy-load-observer-inited").each(function () {
            imageObserver.observe(this);
            $(this).addClass('lazy-load-observer-inited');
        });
    } else {
        lazy_load_depricated($o, context);
    }
}

function lazy_load_depricated($o, context) {
    if (typeof $o === 'undefined' || !$o) {
        $o = context ? $('[data-lazy-src]', context) : $('[data-lazy-src]');
    }
    $o.not(".lazy-loaded").each(function () {
        if ($(this).offset().top - $(window).height() / 3 < $(window).scrollTop() + $(window).height()) {
            lazy_load_change($(this));
        }
    });
}

function lazy_load_change($o, callback) {
    $o.addClass("lazy-loaded");
    $o.attr("src", $o.attr("data-lazy-src"));
    $o.trigger('lazy-loading');
    $o.one("load", function () {
        var $this = $(this);
        $this.trigger('lazy-loaded');
        img_to_bg($this.closest(".img-to-bg"));
        if (callback) {
            callback();
        }
    });
}


/*

Scroll Load Functionality

 */

function scroll_load_init() {

    $(window).on("load scroll", function () {
        scroll_load();
    });

    $(document).on("click", ".js-scroll-load-trigger", function (e) {
        e.preventDefault();
        scroll_load({
            wrapper: false,
            container: $(this).attr("data-load-container"),
            initiator: $(this),
            onscroll: false
        });
    });
}

function scroll_load(options) {
    var options = $.extend({}, options);
    if (!options.wrapper) $o = $(window);
    else $o = $(options.wrapper);
    if (!options.container) $c = $(".scroll-load");
    else $c = $(options.container);
    if (!options.initiator) $i = $("body");
    else $i = $(options.initiator);
    if (typeof options.onscroll === "undefined") options.onscroll = true;
    $c.not(".scroll-loading-end").each(function () {
        var $this = $(this);
        var inactive_class = $this.data("scroll-load-inactive-class") ? $this.data("scroll-load-inactive-class") : "inactive";
        var offset_top = $this.offset().top;
        if ($o.not($(window)).length) offset_top = 0;
        if (!$this.hasClass("scroll-loading") && !$this.hasClass("scroll-loading-end") && offset_top >= 0 && (offset_top + $this.outerHeight() - $o.height() < $o.scrollTop() + $o.height() / 5) || !options.onscroll) {
            let page = $this.attr("data-scroll-load-page");
            let filterAlias = $this.attr("data-scroll-load-filter-alias");
            console.log(filterAlias);
            console.log(page);
            let params = {};
            if(filterAlias) {
                params.filterAlias = filterAlias;
            }
            if (typeof page === "undefined") page = 0;
            let url = $this.attr("data-scroll-load-url");
            url = url.replace(/\/page-\d+/, '');
            url = url + 'page-' + page + '/';
            console.log(url);
            if (url) {
                $.ajax({
                    url: url,
                    type: "get",
                    data: params,
                    beforeSend: function () {
                        $this.addClass("scroll-loading");
                        $($this.attr("data-hide-on-last-load")).addClass("loading");
                    },
                    complete: function () {
                        $this.removeClass("scroll-loading");
                        $($this.attr("data-hide-on-last-load")).removeClass("loading");
                    },
                    success: function (response) {
                        if ($('.js-section').length === 1 && $('.js-section').data('removePages').toString() === 'true') {
                            $('.js-pagination').remove();
                            $('.js-more').remove();
                            $('.js-section-text').remove();
                        }
                        var $response = $(response);
                        if ($this.data("scroll-load-insert-before")) {
                            $response.insertBefore($this.data("scroll-load-insert-before"));
                        } else {
                            let $items = $response.find('.js-filter-results').find('.js-cards-list').html();
                            let $more_button = $response.find('.js-more');
                            let $pagination = $response.find('.js-pagination');
                            if ($more_button.length) {
                                $('.js-filter-results').parent().append($more_button);
                            }
                            if ($pagination.length) {
                                $('.js-filter-results').parent().append($pagination);
                            }
                            $this.append($items);
                        }
                        $this.attr("data-scroll-load-page", page * 1 + 1);
                        bind_widgets($this);
                        if (!(response && !$response.find(".scroll-load-last-one").length && !$response.filter(".scroll-load-last-one").length)) {
                            $this.addClass("scroll-loading-end");
                            $($this.attr("data-hide-on-last-load")).addClass(inactive_class);
                        }
                        scroll_load_after($this);

                        if ($('.js-section').length === 1 && $('.js-section').data('removePages').toString() === 'true') {
                            let currentPage = $('.js-pagination').data('currentPage') ? $('.js-pagination').data('currentPage') : $('.icards__inner').data('scrollLoadPage') - 1;
                            let totalPage = $('.js-pagination').data('totalPage') ? $('.js-pagination').data('totalPage') : $('.icards__inner').data('scrollLoadPage') - 1;
                            let state = {'page': currentPage};
                            let title = document.title;
                            title = title.replace(/ – Страница \d+ из \d+/, '');
                            title += ' – Страница ' + currentPage + ' из ' + totalPage;
                            let link = window.location.origin + window.location.pathname;
                            link = link.replace(/\/page-\d+/, '');
                            link = link + 'page-' + currentPage + '/' + window.location.search;
                            document.title = title;
                            window.history.pushState(state, title, link);
                        }
                    },
                    error: function () {
                        console.log('Ошибка при загрузке');
                    }
                });
            } else {
                $expand_container = $this.find(".expand-it-container");
                if ($expand_container.length) {
                    removeCSSRule("rule-" + $expand_container.attr("id"));
                }
                $this.addClass("scroll-loading-end");
                $($this.attr("data-hide-on-last-load")).addClass(inactive_class);
                scroll_load_after($this);
                if ($expand_container.length) {
                    setTimeout(function () {
                        if ($expand_container.length) {
                            expand_it_init_prepare($expand_container);
                        }
                    }, 500);
                }
            }
        }
    });

    function scroll_load_after($this) {
        $this.find(".scroll-to-activate").not(".active").each(function (i) {
            $(this).addClass("scroll-to-activate-delay-" + i).removeClass("hidden");
            $(this)[0].offsetHeight;
        });
        $this.find(".scroll-to-activate").not(".active").addClass("active");
    }
}


/*

Expanded Blocks Functionality

 */

function expand_it_init() {
    // $(document).ajaxStop(function () {
    //     expand_it_init_prepare();
    // });

    window['expand_it_window_width'] = $(window).width();
    expand_it_init_prepare(null, true);
    $(window).on("resize", function () {
        if ($(this).width() != window['expand_it_window_width']) {
            expand_it_init_prepare(null, true);
            window['expand_it_window_width'] = $(this).width();
        }
    });

    $(document).on("click expand-it", ".expand-it", function (e) {
        e.preventDefault();
        var $o = $($(this).data("expand-selector"));
        if (!$o.length) {
            $o = $(this).closest(".expand-it-wrapper").find(".expand-it-container").eq(0);
        }
        if (!$o.length) {
            $o = $(this).closest(".expand-it-container");
        }
        if (!$o.length) {
            $o = $($(this).attr("href"));
        }
        if (!$o.length) return;

        expand_it_trigger($(this), $o, e.type === "expand-it");
    });

    $(document).on("-webkit-transitionend transitionend", ".expand-it-container", function (e) {
        var $o = $(e.target);
        if ($o.hasClass('expand-it-container')) {
            if ($o.hasClass("before-transition")) {
                expand_it_height_check($o);
            }
            expand_it_init_prepare($o.closest('.expand-it-container'), true);
            $(e.target).removeClass("before-transition");
            $(e.target).trigger("expandAfter");
        }
    });

    if (location.hash) {
        expand_it_open_by_hash(location.hash);
    }
}

function expand_it_height_check($o) {
    if ($o.hasClass("expand-it-container") && !$o.hasClass("expand-it-container-overflow-hidden")) {
        var height_default = 0;
        var current_height = parseInt($o.css("max-height"), 10);
        if ($o.find(".expand-it-container-height-default").length) {
            height_default = $o.find(".expand-it-container-height-default").height();
        }
        $o.toggleClass("overflow-visible", current_height > height_default);
    }
    if ($o.hasClass("expand-it-container") && $o.hasClass("expand-it-container-max-height-auto")) {
        var id = $o.attr("id");
        setTimeout(function () {
            removeCSSRule("rule-" + id);
        }, 300);
    }
}

function expand_it_trigger($handler, $o, soft) {

    var id = $o.attr("id");
    if (!id) {
        id = "id" + (new Date()).getTime() + $o.text().length;
        $o.attr("id", id);
    }
    height = $o.find(".expand-it-inner").eq(0).outerHeight(true);
    $o[0].offsetHeight;
    $o.addClass("no-transition-only-this");
    $o[0].offsetHeight;
    if (!$o.hasClass("expand-it-container-overflow-hidden")) {
        $o.removeClass("overflow-visible");
    }
    if ($o.hasClass("active")) {
        $o.removeClass("overflow-visible");
    }
    $o[0].offsetHeight;
    $o.removeClass("no-transition-only-this");
    if (!$o.hasClass("active") && !$("#rule-" + id).length) {
        addCSSRule("rule-" + id, "#" + id + ".active { max-height: " + height + "px; }");
    }
    $o[0].offsetHeight;

    var $label = $handler;
    if ($handler.data("expand-label")) {
        var $label = $handler.find($handler.data("expand-label"));
    }
    if ($handler.data("expand-change-label")) {
        var label = $label.html();
        $label.html($handler.attr("data-expand-change-label"));
        $handler.attr("data-expand-change-label", label);
    } else if ($handler.attr("data-label")) {
        var label = $handler.html();
        $handler.html($handler.attr("data-label"));
        $handler.attr("data-label", label);
    }
    $handler.toggleClass("active");
    $(".expand-it.active[href='#" + $o.attr("id") + "']").not($handler).toggleClass("active");

    var $wrapper = $o.closest(".expand-it-wrapper");

    if (!soft) {
        $o.trigger("expandBefore");
        $o.addClass("before-transition").toggleClass("active").siblings(".expand-it-container").each(function () {
            $(".expand-it.active[href='#" + $handler.attr("id") + "']").trigger("expand-it");
            $handler.addClass("before-transition").removeClass("active");
        });
        var is_active = $o.hasClass("active");
        $wrapper.toggleClass("active", is_active);
        if ($wrapper.hasClass("expand-it-wrapper-collapse-siblings")) {
            $wrapper.siblings(".expand-it-wrapper").each(function () {
                var $this = $(this).find(".expand-it-container").first();
                if ($(this).find(".expand-it").length) {
                    $(this).find(".expand-it.active").trigger("expand-it");
                } else {
                    var $this_other = $(".expand-it.active[href='#" + $this.attr("id") + "']");
                    if ($this_other.length) {
                        $this_other.trigger("expand-it");
                    } else {
                        var $this_other = $(this).find('.expand-it-pseudo')/*.filter(function() {
                            return $(this).parent($this).length === 0;
                        })*/;
                        if ($this_other.length) {
                            expand_it_trigger($this_other, $this, true);
                        }
                    }
                    if ($this_other.length) {
                        $this_other.removeClass("active");
                    }
                }
                $this.addClass("before-transition").removeClass("active");
                $(this).removeClass("active");
            });
            if ($wrapper.hasClass("active")) {
                setTimeout(function () {
                    if ($wrapper.offset().top < $(window).scrollTop() + $(".header").outerHeight()) {
                        goto_object($wrapper, null, $(".header").outerHeight() * -1);
                    }
                }, 550);
            }
        }
        if (($o.hasClass("active") || $o.hasClass("expand-it-container--scroll-to-always")) && $handler.hasClass("expand-it-scroll-to")) {
            goto_object($o, 900, 'easeInOutQuad');
        }
        if ($handler.hasClass("expand-it-hash-change")) {
            if (is_active) {
                if ($handler.attr("href") && $handler.attr("href").length > 1) {
                    location_hash_update($handler.attr("href"));
                } else if ($wrapper.attr("id")) {
                    location_hash_update("#" + $wrapper.attr("id"));
                }
            } else {
                var $tabpane = $handler.closest(".tab-pane");
                if ($tabpane.length && $tabpane.attr("id")) {
                    location_hash_update("#" + $tabpane.attr("id"));
                } else {
                    location_hash_remove();
                }
            }
        }
        $o.trigger('expand-it-' + ((is_active) ? 'open' : 'close'));
    }
}

function expand_it_init_prepare($c, force) {
    if (typeof $c === "undefined" || !$c) $c = $(".expand-it-container");
    if (!force) {
        $c = $c.not(".expand-it-container-prepared");
    }
    var rules = '';
    $c.each(function () {
        var $o = $(this);
        var id = $o.attr("id");
        if (!id) {
            id = "id" + (new Date()).getTime() + $o.text().length;
            $o.attr("id", id);
        }
        height = $o.find(".expand-it-inner")[0].clientHeight;
        rules += " #" + id + ".active { max-height: " + height + "px; } ";
        $o.addClass("expand-it-container-prepared");
    });
    if (rules) {
        addCSSRule("rule-expand-it", rules);
    }
}

function expand_it_open_by_hash(hash) {
    if ($(hash).filter(".expand-it-wrapper").length) {
        var $o = $(hash);
        var $loc_link = $(".expand-it[href='" + hash + "']");
        if (!$loc_link.length) {
            $loc_link = $o.filter(".expand-it-wrapper").find(".expand-it");
        }
        if ($loc_link.length) {
            goto_object($o);
            setTimeout(function () {
                $loc_link.trigger("click");
            }, 300)
        }
    }
}


/*

Hide/Show blocks

 */


function toggle_element_init() {
    $(document).on("click click-pseudo change", ".js-toggle-element, .js-show-element, .js-hide-element", function (e) {
        if ($(this).is("a")) e.preventDefault();
        if (e.type != "change" && ($(this).prop("type") == 'checkbox' || $(this).prop("type") == 'radio')) {
            return true;
        }
        var $o = $();
        if ($(this).attr("href") && $(this).attr("href").length > 1) {
            $o = $($(this).attr("href"));
        }
        if (!$o.length) {
            $o = $($(this).data("toggle-selector"));
        }
        if (!$o.length) {
            $o = $(this).siblings('.js-toggle-block');
        }
        if (!$o.length) {
            $o = $(this).closest('.js-toggle-container').find('.js-toggle-block');
        }
        $o.trigger("toggle-element-before");
        var class_name = "hidden";
        if (typeof $(this).data("toggle-class") !== "undefined") {
            class_name = $(this).data("toggle-class");
        }
        var element_class_name = "active";
        if (typeof $(this).data("toggle-element-class") !== "undefined") {
            element_class_name = $(this).data("toggle-element-class");
        }
        var change_label = false;
        //var action_scroll_pos = $(this).offset().top - $(window).scrollTop();
        if ($(this).hasClass("js-toggle-element")) {
            change_label = true;
            if ($(this).prop("type") == 'checkbox' || $(this).prop("type") == 'radio') {
                if (e.type == "change") {
                    $o.toggleClass(class_name, !$(this).prop("checked"));
                }
            } else {
                $(this).toggleClass(element_class_name);
                $o.toggleClass(class_name);
            }
            // if ($o.hasClass(class_name)) {
            //     if ($(this).offset().top < $(window).scrollTop()) {
            //         $(window).scrollTop($(this).offset().top - action_scroll_pos);
            //     }
            // }
            $o.trigger("toggle-element", [$(this)]);
        }
        if ($(this).hasClass("js-show-element")) {
            $o_s = $($(this).data("selector-show"));
            if ($o_s.length) {
                $o = $o_s;
            }
            if (!$(this).hasClass(element_class_name)) change_label = true;
            $(this).addClass(element_class_name);
            $o.toggleClass(class_name, $(this).data("toggle-reverse"));
            $o.trigger("show-element", [$(this)]);
        }
        if ($(this).hasClass("js-hide-element")) {
            $o_h = $($(this).data("selector-hide"));
            if ($o_h.length) {
                $o = $o_h;
            }
            if ($(this).hasClass(element_class_name)) change_label = true;
            $(this).addClass(element_class_name);
            $o.toggleClass(class_name, !$(this).data("toggle-reverse"));
            $o.toggleClass(class_name, !$(this).data("toggle-reverse"));
            $o.trigger("hide-element", [$(this)]);
        }
        var $label = $(this);
        if ($(this).data("toggle-label")) {
            var $label = $(this).find($(this).data("toggle-label"));
        }
        if (change_label && $(this).data("toggle-change-label")) {
            var label = $label.html();
            $label.html($(this).attr("data-toggle-change-label"));
            $(this).attr("data-toggle-change-label", label);
        }
        var $siblings = $();
        if ($(this).data("toggle-siblings-selector")) {
            $siblings = $(this).closest($(this).data("toggle-siblings-selector")).siblings();
        }
        if ($(this).data("toggle-current-selector")) {
            $siblings = $siblings.find($(this).data("toggle-current-selector"));
        }
        if ($siblings.length) {
            $siblings.removeClass(element_class_name);
        }
    });
}


/*

Copy to clipboard

 */

function copy_init($o) {

    if (!$("html").hasClass("copy-inited")) {

        $(document).on('click', '.js-copy', function (e) {
            e.preventDefault();
            var $this = $(this);
            tooltip_init($this, null, {"interactive": false, "trigger": "custom"});
            $this.tooltipster('open');
            clearTimeout($this.data('timeout'));
            $this.data('timeout', setTimeout(function () {
                $this.tooltipster('close');
            }, 1000));
        });

        $("html").addClass("copy-inited");
    }
    if (typeof $o === "undefined") $o = $(".js-copy");
    $o.not(".js-copy-inited").each(function () {
        new Clipboard(this);
        $(this).addClass("js-copy-inited");
    });
}


/*

Image Zoom like map

 */

function image_zoom_map_init($o, context) {
    var settings = {
        'viewportWidth': '100%',
        'viewportHeight': '100%',
        'fitToViewportShortSide': true,
        'contentSizeOver100': false,
        'startScale': 1,
        'startX': 0,
        'startY': 0,
        'animTime': 500,
        'draggInertia': 10,
        'zoomLevel': 1,
        'zoomStep': 0.1,
        'contentUrl': '',
        'intNavEnable': false,
        'intNavPos': 'R',
        'intNavAutoHide': true,
        'intNavMoveDownBtt': true,
        'intNavMoveUpBtt': true,
        'intNavMoveRightBtt': true,
        'intNavMoveLeftBtt': true,
        'intNavZoomBtt': true,
        'intNavUnzoomBtt': true,
        'intNavFitToViewportBtt': true,
        'intNavFullSizeBtt': true,
        'intNavBttSizeRation': 1,
        'mapEnable': false,//(isWindowsPhone)?false:true,
        'mapThumb': '',
        'mapPos': 'TR',
        'popupShowAction': 'click',
        'testMode': false
    };

    if (typeof $o === "undefined" || !$o) $o = $(".js-image-zoom-map", context);
    $o.not(".js-image-zoom-map-inited").each(function () {
        var $this = $(this);
        var $img = $this.find('img');
        settings.contentUrl = $img.attr('src');
        var map_small = $(this.element).attr('data-zoom-map');
        if (map_small) {
            settings.mapThumb = map_small;
        } else {
            settings.mapThumb = $img.attr('src');
        }
        if ($this.data('start-x') !== undefined) {
            settings.startX = $(this).data('start-x');
        }
        if ($this.data('start-y') !== undefined) {
            settings.startY = $(this).data('start-y');
        }
        var lhp = $(this).lhpMegaImgViewer(settings);

        setTimeout(function () {
            $this.find(".lhp_miv_content_holder").unbind("mousewheel.lhpMIV").off("pinch");
            $this.find(".lhp_miv_content").unbind("click.lhpMIV").unbind("touchstart.lhpMIV");
            $this.find(".lhp_miv_content").on('mousedown touchstart', function () {
                var instances = $.tooltipster.instances();
                $.each(instances, function (i, instance) {
                    instance.close();
                    $(instance.elementOrigin()).removeClass('tooltip-active');
                });
            });
        }, 500);
        $this.find(".lhp_miv_content_holder").append($($this.attr("data-append-to")));
        $this.addClass("js-image-zoom-map-inited");
    });

}

/*

 Textfields (with reset icon, adaptive placeholders etc)

 */

function textfield_init($o) {
    if (typeof $o === "undefined") $o = $(".textfield");

    if (!$("body").hasClass("textfield-inited-globally")) {

        $(document).on("keydown keyup focus blur textfield-filled", ".textfield", function (e) {
            var is_filled = !!$(this).val();
            // if (e.type === "textfield-filled") { // remove inline attribute value for CSS [value] selector purpose
            //     if ($(this).val().length) $(this).prop("value", $(this).val());
            //     $(this).removeAttr("value");
            // }
            if (e.type == "focusin" || e.type == "focusout") {
                var $placeholder = $(this).siblings(".textfield-placeholder").first();
                if ($placeholder.length && $placeholder.prop("data-label-short")) {
                    var label;
                    if (e.type == "focusin") {
                        label = $placeholder.prop("data-label-short");
                        if (!$placeholder.prop("data-label-long")) {
                            $placeholder.prop("data-label-long", $placeholder.html());
                        }
                    }
                    if (e.type == "focusout" && !is_filled) {
                        if ($placeholder.prop("data-label-long")) {
                            label = $placeholder.prop("data-label-long");
                        }
                    }
                    $placeholder.html(label);
                }
            }
            $(this).toggleClass("filled", is_filled);
        });

        $(document).on("click", ".textfield-reset", function (e) {
            var $input = $(this).siblings(".textfield").not("[disabled],[readonly]").first();
            $input.val("").trigger("blur").trigger("focus").trigger("keyup").trigger("change");
            $(this).removeClass("active");
        });

        $(document).on("blur keyup change textfield-reset-init", ".textfield", function (e) {
            var $reset = $(this).not("[disabled]").siblings(".textfield-reset").first();
            if (e.type == "textfield-reset-init" && $reset.length) {
                $(this).addClass("textfield-reset-inited");
            }
            $reset.toggleClass("active", !!$(this).val());
        });

        $(document).on("change textfield-reset-init", ".textfield", function (e) {
            $(this).closest(".textfield-wrapper").toggleClass("textfield-wrapper--disabled", $(this).prop("disabled"));
        });

        $(document).on("textfield-after-init", ".textfield", function (e) {
            if (e.type == "textfield-after-init") $(this).addClass("textfield-after-inited");
            // var $after = $(this).siblings(".textfield-after").first();
            // if ($after.length) {
            //     var $reset = $(this).siblings(".textfield-reset").first();
            //     var reset_width = 0;
            //     var after_width = 0;
            //     // var after_width = $after[0].clientWidth;
            //     // if ($reset.length) {
            //     //     reset_width = $reset[0].clientWidth - 20;
            //     // }
            //     if (after_width) {
            //         //$(this).css("padding-right", after_width + reset_width);
            //     }
            // }
        });


        $(".textfield").trigger("textfield-filled");
        $(".textfield").trigger("textfield-reset-init");
        $(".textfield").trigger("textfield-after-init");
        $(document).ajaxStop(function () {
            setTimeout(function () {
                $(".textfield").trigger("textfield-filled");
                $(".textfield").trigger("textfield-reset-init");
                $(".textfield").trigger("textfield-after-init");
            }, 50);
        });

        $(window).on("resize", function () {
            $(".textfield").trigger("textfield-after-init");
        });

        $("body").addClass("textfield-inited-globally")
    }

    $o.trigger("textfield-filled");

}


/*

Custom Checkboxes

 */

function checkbox_plain_init(context) {
    var $o = context ? $('.checkbox-plain-js', context) : $('.checkbox-plain-js');
    $o.find("[type='checkbox'], [type='radio']").not(".checkbox-plain-js-inited").on("change change-pseudo", function (e) {
        var $o = $(this).closest(".checkbox-plain-js");
        var name = $(this).attr("name");
        if ($(this).prop("type") == 'radio') {
            var $radios = $(this).closest("form").find("[name='" + name + "']");
            if (!$radios.length) $radios = $("input[name='" + name + "']");
            $radios = $radios.not(':checked');
            $radios.closest(".checkbox-plain-js").removeClass("checked");
        }
        if ($(this).prop("checked")) $o.addClass("checked");
        else $o.removeClass("checked");
        if ($(this).prop("disabled")) $o.addClass("disabled");
        else $o.removeClass("disabled");
    }).on("focus", function (e) {
        var $o = $(this).closest(".checkbox-plain-js");
        if (!$(this).prop("disabled")) $o.addClass("focused");
    }).on("blur", function (e) {
        var $o = $(this).closest(".checkbox-plain-js");
        $o.removeClass("focused");
    }).each(function () {
        var $o = $(this).closest(".checkbox-plain-js");
        if ($(this).prop("checked")) $o.addClass("checked");
        if ($(this).prop("disabled")) $o.addClass("disabled");
        // $o.find("input:text").on("focus", function(){
        //     $(this).closest(".checkbox-plain-js").find(":checkbox,:radio").prop("checked", true).trigger("change");
        // });
    }).addClass("checkbox-plain-js-inited");
}

function textfield_autosize_init() {
    $(".js-autosize:not(.js-autosize-inited)").each(function () {
        autosize($(this));
        $(this).addClass("js-autosize-inited");
    });
}

function resize_google_recaptcha_init() {
    resize_google_recaptcha();
    $(window).on('resize', function () {
        delay_resize_google_recaptcha(function () {
            resize_google_recaptcha();
        }, 300);
    });
}

function resize_google_recaptcha() {
    var width = $('.js-google-recaptcha-size').parent().width();
    var scale = width / 304;
    // if (scale > 1) {
    //     scale = 1;
    // }
    $('.js-google-recaptcha-size').css('transform', 'scale(' + scale + ')');
    $('.js-google-recaptcha-size').css('-webkit-transform', 'scale(' + scale + ')');
    $('.js-google-recaptcha-size').css('transform-origin', '0 0');
    $('.js-google-recaptcha-size').css('-webkit-transform-origin', '0 0');
    $('.js-google-recaptcha-size').addClass('js-google-recaptcha-size-inited');
}

var delay_resize_google_recaptcha = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();


/*
* Запрос и выдача элементов дропдауна при поиске внутри поля ввода дропдауна
* */

function ddbox_textfield_query($input) {

    var method = "get";
    var data = null;
    var url = $input.attr("data-action-url");
    if ($input.attr("data-action-method")) {
        method = $input.attr("data-action-method");
    }
    var $form = $input.closest('form')
    if ($form.length) {
        data = $form.serialize();
    }

    if ($input.data('xhr')) {
        var xhr = $input.data('xhr');
        if (xhr && xhr.readyState != 4) {
            xhr.abort();
        }
    }
    var xhr = $.ajax({
        url: url,
        type: method,
        data: data,
        dataType: 'json',
        cache: false,
        contentType: false,
        processData: false,
        beforeSend: function () {
        },
        complete: function (response) {
            $input.trigger("ajax-complete");
        },
        success: function (response) {
            if (response.html) {
                var $ddbox = $input.closest('.ddbox');
                $ddbox.find('.ddbox__dropdown').html(response.html);
                bind_widgets();
                $ddbox.removeClass('opened-blocked');
                ddbox_open($ddbox);
                ddbox_select($ddbox);
            }
            $input.trigger("ajax-success", response);
        },
        error: function (jqXHR) {
            $input.trigger("ajax-error");
        }
    });
    $input.data('xhr', xhr);
}


/*
* Инициализация дропдаунов
* */

function ddbox_init(context) {
    _ddbox_init(context);

    if (!$("body").hasClass("ddbox-inited")) {
        ddbox_events();
        $("body").addClass("ddbox-inited");
    }
}

function _ddbox_init(context) {
    var $o = context ? $('.js-ddbox', context) : $('.js-ddbox');
    $o.not('.js-ddbox-inited').each(function () {
        ddbox_select($(this));
        if ($(this).closest('.js-filter').length) {
            var back_title = $(this).data('ddbox-back-title');
            $(this).prepend('' +
                '<div class="ddbox__back js-ddbox-close">\n' +
                '    <svg class="icon icon--arrow-left">\n' +
                '        <use xlink:href="#icon-arrow-left"></use>\n' +
                '    </svg>\n' +
                '    <span class="filter__section-title-link link--ib link--dotted">\n' +
                '        ' + ((back_title) ? back_title : 'Все фильтры') + '\n' +
                '    </span>\n' +
                '</div>');
            icons_init($(this).find('.ddbox__back'));
        }
        $(this).addClass('js-ddbox-inited');
    });
}


/*
* Подключение событий
* */

function ddbox_events() {

    $(document).on('click focus', '.js-ddbox .ddbox__selection', function (e) {
        var $o = $(this).closest('.ddbox');
        if (!$o.hasClass('disabled')) {
            ddbox_close($(".ddbox.opened").not($o));
            if (!$o.hasClass('ddbox--textfield')) {
                ddbox_toggle($o);
            }
        }
    });

    $(document).on('click focus', '.js-ddbox .ddbox__reset', function (e) {
        var $o = $(this).closest('.ddbox');
        e.stopPropagation();
        if (!$o.hasClass('disabled')) {
            ddbox_reset($o);
        }
    });

    $(document).on('click', '.js-ddbox-close', function (e) {
        var $o = $(this).closest('.ddbox');
        if (!$o.hasClass('disabled')) {
            ddbox_close($(".ddbox.opened"));
        }
    });

    $(document).on('click', '.js-ddbox-close-all', function (e) {
        ddbox_close($(".ddbox.opened"));
    });

    $(document).on('mousedown', '*', function (e) {
        var $o = $(e.target).closest('.ddbox');
        if (!$o.length && $('.ddbox-is-opened .ddbox.opened').first().css('position') != 'fixed') {
            ddbox_close($(".ddbox.opened"));
        }
    });

    $(document).on('change', '.js-ddbox :input', function (e) {
        var $o = $(e.target).closest('.ddbox');
        ddbox_select($o);
    });

    $(document).on("keyup", function (e) {
        if (e.keyCode == 27) { //27 = keycode for escape
            ddbox_close($(".ddbox.opened"));
        }
    });
}

/*
* Получение значения (in_input - true, если нужно получить значение в виде списка value атрибутов, а не визуально привлекательного для дропдауна)
* */

function ddbox_value_get($o, in_input) {
    var value = '';
    var values = [];
    var input_values = [];
    var $inputs = $o.find('.js-ddbox-input');
    $inputs.each(function () {
        var $input = $(this);
        if ($input.prop('type') != 'text') {
            $input = $input.find('input').first();
        }
        if ($input.length) {
            if ((['checkbox', 'radio'].indexOf($input.prop('type')) !== -1 && $input.prop('checked')) || $input.prop('type') == 'text') {
                input_values.push(ddbox_input_value_get($input));
                values.push(ddbox_input_visual_value_get($input));
            }
        }
    });
    $o.attr('data-ddbox-values-count', values.length);
    var aggregate = $o.data('ddbox-aggregate');
    if (aggregate && aggregate <= values.length) {
        value = 'Выбрано: ' + values.length;
    } else {
        var sep = $o.data('ddbox-value-separator');
        value = values.join(sep !== undefined ? sep : ', ');
    }
    if (in_input) {
        if (input_values.length < 2) {
            return input_values.pop();
        }
        return input_values;
    }
    return value;
}

function ddbox_input_visual_value_get($input) {
    var value = null;
    var $ddbox_input = $input.closest('.js-ddbox-input');
    var $v1 = $input.attr('data-ddbox-value');
    var $v2 = $ddbox_input.find('[data-ddbox-value]');
    var $v3 = $ddbox_input.find('.js-ddbox-value');
    if ($v1) {
        value = $v1;
    } else if ($v2.length) {
        value = $v2.attr('data-ddbox-value');
    } else if ($v3.length) {
        value = $v3.html();
    } else if ($input.prop('type') == 'text') {
        var input_format = $input.data('input-format');
        var input_format_function = $input.data('input-format-function');
        if (input_format_function && typeof window[input_format_function] === 'function') {
            value = window[input_format_function]($input.val());
        } else if (input_format) {
            value = input_format.to($input.val());
        } else {
            value = $input.val();
        }
    }
    return value;
}

function ddbox_input_value_get($input) {
    return $input.val();
}

function ddbox_toggle($o) {
    if ($o.hasClass('opened')) {
        ddbox_close($o);
    } else {
        ddbox_open($o);
    }
}

function ddbox_open($o) {
    scrollbar_init($o.find('.js-ddbox-scrollbar'));
    var $o_b = $o.not('.opened').not('.opened-blocked');
    if ($o_b.length) {
        $o_b.addClass('opened');
        $('html').addClass('ddbox-is-opened');
    }
    $o.trigger('ddbox-open');
}

function ddbox_close($o) {
    var $o_b = $o.filter('.opened').not('.opened-blocked');
    if ($o_b.length) {
        $o_b.removeClass('opened');
        $('html').removeClass('ddbox-is-opened');
    }
    $o.trigger('ddbox-close');
}

function ddbox_select($o) {
    $o = $o.not('.disabled');
    $o_sel = $o.find('.js-ddbox-selection');
    var value = ddbox_value_get($o);
    var input_value = ddbox_value_get($o, true);
    var value_default = $o_sel.data('default-value');
    var is_default = input_value == value_default;
    if (Array.isArray(input_value) && Array.isArray(value_default)) {
        is_default = input_value.equals(value_default);
    }
    if (value && !is_default) {
        $o_sel.addClass('active').html(value);
        $o.find('.js-ddbox-placeholder').removeClass('active');
        $o.addClass('selected').trigger('ddbox-select');
    } else {
        $o_sel.removeClass('active').html('');
        $o.find('.js-ddbox-placeholder').addClass('active');
        $o.removeClass('selected').trigger('ddbox-deselect');
    }
    if ($o.data('ddbox-close-on-select')) {
        ddbox_close($o);
    }
}

// function ddbox_deselect($o) {
//     var value = ddbox_value_get($o);
//     var is_default = value == $o.find('.js-ddbox-selection').attr('data-default-value');
//     if (!value || is_default) {
//         $o.find('.js-ddbox-selection').removeClass('active').html('');
//         $o.find('.js-ddbox-placeholder').addClass('active');
//         $o.removeClass('selected').trigger('ddbox-deselect');
//     }
// }

function ddbox_disable($o) {
    ddbox_close($o);
    $o.addClass('disabled').trigger('ddbox-disable');
}

function ddbox_enable($o) {
    $o.removeClass('disabled').trigger('ddbox-enable');
}

function ddbox_reset($o) {
    $o = $o.not('.disabled');
    $o.each(function () {
        var $o = $(this);
        input_reset($o);
        ddbox_select($o);
        ddbox_close($o);
        $o.trigger('ddbox-reset');
    });
}


function input_reset($o) {

    $o.find('input').each(function (i, item) {
        var $input = $(this);
        if (!$input.prop('disabled')) {
            // if (!$input.prop('type') == 'text') {
            //     $input.val($input.attr('data-default-value'));
            // }
            /*else */
            if (['checkbox', 'radio'].indexOf($input.prop('type')) !== -1) {
                var new_state = $input.data('default-checked') !== undefined;
                var changed = $input.prop('checked') !== new_state;
                $input.prop('checked', new_state);
                if (changed) {
                    $input.trigger('change');
                }
            }
        }
    });

    $o.find(':text').not('[disabled]').each(function (i, item) {
        var new_value = $(this).attr('data-default-value');
        var changed = $(this).val() !== new_value;
        $(this).val(new_value);
        if (changed) {
            $(this).trigger('change');
        }
    });
}


// Warn if overriding existing method
if (Array.prototype.equals) {
    console.warn("Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.");
}
// attach the .equals method to Array's prototype to call it on any array
Array.prototype.equals = function (array) {
    // if the other array is a falsy value, return
    if (!array)
        return false;

    // compare lengths - can save a lot of time
    if (this.length != array.length)
        return false;

    for (var i = 0, l = this.length; i < l; i++) {
        // Check if we have nested arrays
        if (this[i] instanceof Array && array[i] instanceof Array) {
            // recurse into the nested arrays
            if (!this[i].equals(array[i]))
                return false;
        } else if (this[i] != array[i]) {
            // Warning - two different object instances will never be equal: {x:20} != {x:20}
            return false;
        }
    }
    return true;
}
// Hide method from for-in loops
Object.defineProperty(Array.prototype, "equals", {enumerable: false});


/*
* Range Slider
* */

function nouislider_init() {

    // $(document).on("click", ".js-range-input", function () {
    //     $(this).addClass("user-input");
    //     $(this).find("input").focus();
    // });

    // $(document).on("blur", ".js-range-input input", function () {
    //     $(this).closest(".js-range-input").removeClass("user-input");
    // });

    if (!$("body").hasClass("nouislider-inited-globally")) {

        $(document).on("change", ".js-range-input input", function (e) { //  keyup
            if (e.type == 'keyup' && $(this).val() === '') {
                return true;
            }
            $range = $(this).closest(".js-range");
            $slider = $range.find(".js-range-slider");
            $inputs = $range.find(".js-range-input input");
            if ($slider.length && $inputs.length > 1) {
                var values = [];
                $inputs.each(function (i) {
                    if (!i && $(this).val() * 1 > $inputs.eq(1).val() * 1) { // если вбито значение во первый инпут больше или равное значению во втором инпуте
                        $(this).val(-9999999999);
                    }
                    if (i && !($(this).val() * 1)) { // если не вбито значение во второй инпут
                        $(this).val(9999999999);
                    }
                    values.push($(this).val());
                });
                $slider[0].noUiSlider.set(values);
            }
        });

        $("body").addClass("nouislider-inited-globally")
    }


    $(".js-range-slider").not('.nouislider-inited').each(function () {

        var rangeMin = $(this).data("min") || 0,
            rangeMax = $(this).data("max") || 0,
            rangeStep = $(this).data("step") || 1,
            rangeMargin = $(this).data("margin") || 0,
            rangeDecimals = $(this).data("decimals") || 0,
            rangeReduce = $(this).data("reduce") || 0,
            rangePrefix = $(this).data("prefix") || '',
            rangeSuffix = $(this).data("suffix") || '',
            rangeSnap = $(this).data("snap") || false,
            rangeRange = $(this).data("range") || false,
            rangeFormatFunction = $(this).data("range-format-function") || false;

        var $range = $(this).closest(".js-range");
        var range_slider_element = this;

        var rangeMinData = parseFloat($(this).attr('data-minValue')),
            rangeMaxData = parseFloat($(this).attr('data-maxValue'));

        if (rangeMinData >= rangeMax) {
            rangeMinData = rangeMin;
        }
        if (rangeMaxData <= rangeMin) {
            rangeMaxData = rangeMax;
        }

        if (rangeMin == rangeMax) {
            rangeMin--;
            rangeMax++;
        }

        if (!rangeRange) {
            rangeRange = {
                'min': Number((rangeMin * 1).toFixed(rangeDecimals)),
                'max': Number((rangeMax * 1).toFixed(rangeDecimals))
            };
        }

        def_format = wNumb({
            decimals: rangeDecimals,
            thousand: ' ',
            prefix: rangePrefix,
            suffix: rangeSuffix,
            encoder: function (value) {
                return (value / (Math.pow(10, rangeReduce)));
            }
        });

        noUiSlider.create(range_slider_element, {
            start: [rangeMinData, rangeMaxData],
            connect: true,
            direction: 'ltr',
            orientation: 'horizontal',
            behaviour: 'tap-drag',
            margin: rangeMargin,
            step: rangeStep,
            snap: rangeSnap,
            range: rangeRange,
            tooltips: [def_format, def_format],
            format: {
                to: function (value) {
                    return Number((value * 1).toFixed(rangeDecimals));
                },
                from: function (value) {
                    return Number((value * 1).toFixed(rangeDecimals));
                }
            }
        });

        $range.find(".js-range-input-get-min").val(rangeMinData).data('range-value-changed', rangeMinData).data('input-format', def_format).data('input-format-function', rangeFormatFunction);
        $range.find(".js-range-input-get-max").val(rangeMaxData).data('range-value-changed', rangeMaxData).data('input-format', def_format).data('input-format-function', rangeFormatFunction);

        range_slider_element.noUiSlider.on('update', function (values, handle) {
            var $range = $(range_slider_element).closest(".js-range");
            var $inputs = $range.find(".js-range-input");
            var $input_min = $range.find(".js-range-input-get-min");
            var $input_max = $range.find(".js-range-input-get-max");
            $input_min.val(values[0]).trigger("range-updated").closest(".js-range-input").toggleClass("active", values[0] != this.options.range.min);
            $input_max.val(values[1]).trigger("range-updated").closest(".js-range-input").toggleClass("active", values[1] != this.options.range.max);
            if (rangeFormatFunction && typeof window[rangeFormatFunction] === 'function') {
                $range.find(".js-range-min-set").html(window[rangeFormatFunction](values[0]));
                $range.find(".js-range-max-set").html(window[rangeFormatFunction](values[1]));
            } else {
                $range.find(".js-range-min-set").html(def_format.to(values[0]));
                $range.find(".js-range-max-set").html(def_format.to(values[1]));
            }
        });

        range_slider_element.noUiSlider.on('change', function (values, handle) {
            var $range = $(range_slider_element).closest(".js-range");
            var $input_min = $range.find(".js-range-input-get-min");
            var $input_max = $range.find(".js-range-input-get-max");
            if ($input_min.data('range-value-changed') != values[0]) {
                $input_min.trigger("range-changed");
            }
            if ($input_max.data('range-value-changed') != values[1]) {
                $input_max.trigger("range-changed");
            }
            $input_min.data('range-value-changed', values[0]);
            $input_max.data('range-value-changed', values[1]);
        });

        if (rangeMinData != 0) {
            range_slider_element.noUiSlider.set([rangeMinData, null]);
        }
        if (rangeMaxData != 0) {
            range_slider_element.noUiSlider.set([null, rangeMaxData]);
        }

        $(this).addClass('nouislider-inited');
    });
}


function index_to_month_name(value) {
    var months = [
        'Январь',
        'Февраль',
        'Март',
        'Апрель',
        'Май',
        'Июнь',
        'Июль',
        'Август',
        'Сентябрь',
        'Октябрь',
        'Ноябрь',
        'Декабрь'
    ];
    return months[value];
}


function input_spin_init() {
    $('[data-trigger="spinner"]').not('.input-spin-inited').spinner('changing', function (e, newVal, oldVal) {
        $(this).closest('[data-trigger="spinner"]').find('[data-spin-clone]').html(newVal);
    }).on('mouseleave.spinner', '[data-spin="up"], [data-spin="down"]', function () {
        var data = $(this).closest('[data-trigger="spinner"]').data('spinner');
        clearTimeout(data.spinTimeout);
        clearInterval(data.spinInterval);
    }).on('changing.spinner changing-spinner-init', function () {
        var $wrapper = $(this).closest('[data-trigger="spinner"]');
        var data = $wrapper.data('spinner');
        var val = data.spinning.$el.val();
        $wrapper.find('[data-spin="down"]').toggleClass('active', val > data.spinning.min);
        $wrapper.find('[data-spin="up"]').toggleClass('active', val < data.spinning.max);
    }).trigger('changing-spinner-init').addClass('input-spin-inited');
}

/*
* Обработчики форм
* */


function form_process_init() {

    $(document).on("submit.valid click perform-action", ".js-action", function (e) {
        var $this = $(this);
        if ($this.is("form") && e.type != "submit") {
            return true;
        }
        e.preventDefault();
        var url = $this.attr("href");
        var method = "get";
        var data = null;

        // Добавим уникальный хеш для текущей отправки файлов (можно по нему определить общий пакет файлов)
        $this.find('.js-file-upload-hash').val(new Date().getTime());

        if ($this.is("form")) {
            url = $this.attr("action");
            method = $this.attr("method");
        }
        if ($this.attr("data-action-url")) {
            url = $this.attr("data-action-url");
        }
        if ($this.attr("data-action-method")) {
            method = $this.attr("data-action-method");
        }

        if ($this.is("form")) {
            data = $this.serialize();

            if (method.toLowerCase() != 'get' && window.FormData !== undefined) {
                data = new FormData($this[0]);
            }
            console.log(data);
            $this.data('serialized', data);
            $this.data('serializedArray', $this.serializeArray());
        }

        if ($this.find('.js-file-upload-start').length) {
            // Запускаем загрузку всех файлов (по отдельности)
            form_process_before_send($this);
            $this.find('.js-file-upload-start').trigger('click');
        } else {
            $.ajax({
                url: url,
                type: method,
                data: data,
                dataType: 'json',
                cache: false,
                contentType: false,
                processData: false,
                beforeSend: function () {
                    form_process_before_send($this);
                },
                complete: function (response) {
                    form_process_complete($this, response);
                },
                success: function (response) {
                    form_process_success($this, response);
                },
                error: function (jqXHR) {
                    form_process_errors($this, jqXHR);
                }
            });
        }
    });

    $(document).on("after-action-success", ".js-action-reset-after", function (e) {
        $(this)[0].reset();
    });
}

function form_process_before_send($this) {
    $this.find(":input").prop("disabled", true).closest(".textfield-wrapper").addClass("disabled");
    $this.find(".js-form-disable-on-submit").addClass("disabled");
    var $btn = $this.find(".loader-on-submit");
    loader_add($btn);
}

function form_process_complete($this, response) {
    $this.find(":input").not("[data-disabled]").prop("disabled", false).closest(".textfield-wrapper").removeClass("disabled");
    $this.find(".js-form-disable-on-submit").not("[data-disabled]").removeClass("disabled");
    $this.find(":password").val("");
    var $btn = $this.find(".loader-on-submit");
    loader_remove($btn);
    $this.trigger("after-action-complete", response);
}

function form_process_success($this, response) {
    if (response.popup) {
        if (response.text) {
            $.fancybox.close();
            $.fancybox.open(response.text, $.fancybox.options_modal);
        }
    } else {
        var $message = $this.find(".js-message");
        if (!$message.length) {
            $message = $this.find($this.data("message"));
        }
        if (!$message.length) {
            $message = $($this.data("message"));
        }
        $this.find(".js-message-container").html(response.text);
        bind_widgets($this);
        $message.addClass("active");
        $this.addClass("inactive");
        if ($message.offset().top < $(window).scrollTop() + $(".header").outerHeight()) {
            goto_object($message, null, $(".header").outerHeight() * -1);
        }
        if ($this.data("message-autoclose")) {
            setTimeout(function () {
                $message.removeClass("active");
                $this.removeClass("inactive");
            }, $this.data("message-autoclose"));
        }
    }
    $this.trigger("after-action-success", response);
}

function form_process_errors($this, jqXHR) {
    console.log(jqXHR.status, jqXHR.responseJSON);
    var error_text;
    if (jqXHR.status === 401) {
        error_text = 'Access denied.';
    } else if (jqXHR.status === 422) {
        form_process_errors_show($this, jqXHR.responseJSON);
    } else {
        error_text = 'Произошла ошибка. Попробуйте ещё раз.';
    }
    if (error_text) {
        alert(error_text);
    }
    $this.trigger("after-action-error", jqXHR);
}

function form_process_errors_show($this, response) {
    var index = 0;
    $.each(response, function (field_name, field_errors) {
        $field = $this.find("[name='" + field_name + "']");
        if (!index) {
            $field.trigger("focus");
        }
        $field.addClass("error");
        var $append_to = $field.closest('.form__item-field');
        if (!$append_to.length) {
            $append_to = $field.parent();
        }
        $append_to.find('.form__error').remove();
        $.each(field_errors, function (error_index, error_text) {
            $append_to.append("<div class='form__error form__error--" + error_index + "'>" + error_text + "</div>");
        });
        index++;
    });
}


/*
* Загрузка файлов
* */

function fileupload_init() {

    if (!$('body').data('fileupload-inited')) {

        // // Проверка количества файлов после выбора в окне проводника
        // $('#popup-product-order .js-fileupload').bind('fileuploadchange', function (e, data) {
        //     if(data.files.length > 3){
        //         $form.find('.pproduct__files').append('<div id="main-upload-error" class="form__error">Можно загрузить до 3 файлов.</div>');
        //         return false;
        //     }
        // });

        // // Сбор сообщения об ошибке при добавлении файла
        // $('.js-fileupload').bind('fileuploadadd', function (e, data) {
        //     $('#main-upload-error').remove();
        // });

        // Сбор данных формы в переменную для последующего использования
        $('.js-fileupload').bind('fileuploadsubmit', function (e, data) {
            var $form = $(this).closest('form');
            var form_data = $form.data('serializedArray');
            var added = false;
            for (i in form_data) {
                if (form_data[i] && form_data[i].name == 'files_count') {
                    form_data[i] = {"name": "files_count", "value": $form.find('.fileupload-file__inner').length};
                    added = true;
                }
            }
            if (!added) {
                form_data.push({"name": "files_count", "value": $form.find('.fileupload-file__inner').length});
            }
            data.formData = form_data;
        });

        $('.js-fileupload').bind('fileuploaddone', function (e, data) {
            console.log("fileuploaddone");
            // var overallProgress = $(this).fileupload('progress');
            // console.log("overallProgress", overallProgress);
            if (data.result && data.result.upload_finished) {
                var $form = $(this).closest('form');
                form_process_complete($form, data.result);
                form_process_success($form, data.result);
            }
        });

        $('.js-fileupload').bind('fileuploadfail', function (e, data) {
            console.log("fileuploadfail");
            var $form = $(this).closest('form');
            var $file_list = $($(e.target).data('fileupload-list'));
            $file_list.empty();
            //console.log(e, data._response.jqXHR);
            form_process_complete($form, data._response.jqXHR);
            form_process_errors($form, data._response.jqXHR);
        });

        // Действия после загрузки всех файлов
        // $('.js-fileupload').bind('fileuploadprogressall', function (e, data) {
        //     var $form = $(this).closest('form');
        //     var progress = parseInt(data.loaded / data.total * 100, 10);
        //     if (progress >= 100) {
        //         // Активируем кнопки/поля
        //         console.log(e, data);
        //         form_process_complete($form, data);
        //         form_process_success($form, data);
        //     }
        // });

        $('body').data('fileupload-inited', true);
    }

    // Создаем переменную с кнопкой загрузки файла (потом будем использовать ее в качестве шаблона)
    if (typeof fileupload_init.uploadButton === 'undefined') {
        fileupload_init.uploadButton = $('<button/>')
            .addClass('btn btn-grey-small js-file-upload-start')
            .prop('disabled', true)
            .text('Загрузка...')
            .on('click', function () {
                var $this = $(this),
                    data = $this.data();
                $this
                    .off('click')
                    .text('Прервать')
                    .on('click', function () {
                        $this.remove();
                        data.abort();
                    });
                data.submit().always(function () {
                    $this.remove();
                });
            });
    }
    $('.js-fileupload').not('.js-fileupload-inited').each(function () {
        var $file_list = $($(this).data('fileupload-list'));
        $(this).fileupload({
            url: $(this).data('fileupload-url'),
            dataType: 'json',
            autoUpload: false,
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png|psd)$/i,
            maxFileSize: $(this).data('fileupload-max-file-size') ? $(this).attr('fileupload-url') : 15 * 1024 * 1024,
            // Enable image resizing, except for Android and Opera,
            // which actually support image resizing, but fail to
            // send Blob objects via XHR requests:
            disableImageResize: /Android(?!.*Chrome)|Opera/.test(window.navigator.userAgent),
            previewMaxWidth: 100,
            previewMaxHeight: 100,
            singleFileUploads: true,
            limitMultiFileUploadSize: $(this).data('fileupload-limit-multifile-upload-size') ? $(this).data('fileupload-limit-multifile-upload-size') : 15 * 1024 * 1024,
            previewCrop: true
        }).on('fileuploadadd', function (e, data) {
            data.context = $('<div class="fileupload-file">').appendTo($file_list);
            var label = $(this).data('fileupload-label');
            var $label = $file_list.find('.fileupload-label');
            if (!$label.length) {
                $('<div class="fileupload-label">' + label + '</div>').prependTo($file_list);
            }
            $.each(data.files, function (index, file) {
                var node = $('<div class="fileupload-file__inner">')
                    .append('<span class="fileupload-file__icon color-active">\n' +
                        '                                            <svg class="icon icon--paper">\n' +
                        '                                                <use xlink:href="#icon-paper"></use>\n' +
                        '                                            </svg></span>')
                    .append($('<span class="fileupload-file__name link link--ib link--dotted">').text(file.name))
                    .append('<span class="fileupload-file__remove"><a href="#" class="js-fileupload-cancel">\n' +
                        '                                            <svg class="icon icon--cross">\n' +
                        '                                                <use xlink:href="#icon-cross"></use>\n' +
                        '                                            </svg></a></span>');
                node.find('.js-fileupload-cancel').on('click', function (e) {
                    e.preventDefault();
                    var $item = $(this).closest('.fileupload-file');
                    if (!$item.siblings('.fileupload-file').length) {
                        $item.parent().empty();
                    }
                    $item.remove();
                });
                if (!index) {
                    node.append(fileupload_init.uploadButton.clone(true).data(data));
                }
                node.data('file', file).appendTo(data.context);
                icons_init(node.find('svg.icon'));
            });
        }).prop('disabled', !$.support.fileInput)
            .parent().addClass($.support.fileInput ? undefined : 'disabled');
    }).addClass('js-fileupload-inited');
}


/*

 Input Masks

 */

function mask_init(context) {
    if (typeof Inputmask !== "undefined") {

        if (!$("body").hasClass("inputmask-inited")) {
            Inputmask.extendDefaults({
                showMaskOnHover: false,
                showMaskOnFocus: true,
                onKeyDown: function (event, buffer, caretPos, opts) {
                    if (event && event.target && !$(event.target).inputmask('isComplete')) {
                        $(event.target).removeClass("mask-complete");
                        $(event.target).removeClass("mask-incomplete");
                    }
                },
                oncomplete: function (event) {
                    if (event && event.target) {
                        $(event.target).addClass("mask-complete");
                        $(event.target).removeClass("mask-incomplete");
                    }
                },
                onincomplete: function (event) {
                    if (event && event.target) {
                        $(event.target).removeClass("mask-complete");
                        $(event.target).addClass("mask-incomplete");
                    }
                },
            });

            $("body").addClass("inputmask-inited")
        }

        // $(".mask-int", context).filter(":not(.mask-inited)").inputmask({ alias: "numeric", "rightAlign": false}).addClass("mask-inited");
        //
        $(".mask-phone-ru", context).filter(":not(.mask-inited)").inputmask({
            definitions: {
                '#': {
                    validator: "[0-9]",
                    cardinality: 1
                }
            },
            mask: "+7 (###) ###-##-##",
            placeholder: "_"
        }).addClass("mask-inited");

    }
}


/*

 Input Keys Filter

 */

function keyfilter_init(context) {
    if ($().keyfilter) {
        $(".keyfilter-pint", context).not(".keyfilter-inited").keyfilter(/[\d]/).on('paste', function () {
            var $this = $(this);
            var prev_val = $this.val();
            setTimeout(function () {
                if (!/[\d]/.test($this.val())) {
                    $this.val(prev_val);
                }
            }, 0);
        }).addClass("keyfilter-inited");
    }
}


/*

 Form Validation

 */

function validate_init() {
    if (!$.validator) return;

    if (!$("body").hasClass("validate-inited")) {

        $(document).on("reset", ".form-validate", function () {
            $(this).find(".form__item, :input").removeClass("error");
            setTimeout(function () {
                $(":input").trigger("change");
                $(".checkbox-plain-js input[type='checkbox'], .checkbox-plain-js input[type='radio']").trigger("change-pseudo");
            }, 50);
        })

        $.validator.setDefaults({});

        $.extend($.validator.messages, {
            required: "Обязательное поле.",
            email: "Некорректный E-mail.",
            phonecomplete: "Неполный номер телефона.",
            maskcomplete: "Заполните полностью.",
        });

        $.validator.addMethod("email", function (value, element) {
            return this.optional(element) || /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(value); // /^[a-zA-Z\-\._]+@[a-z0-9\-]+(\.[a-z0-9\-]+)*\.[a-z]+$/i
        });

        $.validator.addMethod("phonecomplete", function (value, element) {
            return this.optional(element) || (value.replace(/\D/, "").length >= 7 && $(element).inputmask('isComplete'));
        });

        $.validator.addMethod("maskcomplete", function (value, element) {
            return this.optional(element) || (value.replace(/\D/, "").length >= 7 && $(element).inputmask('isComplete'));
        });

        $.validator.addMethod("password", function (value, element) {
            return this.optional(element) || value.length >= 6;
        });

        $.validator.addMethod("passwordconfirm", function (value, element) {
            var $password = $($(element).data("rule-passwordconfirm-password"));
            return this.optional(element) || !$password.length || !$password.val() || value === $password.val();
        });

        $.validator.addMethod("recaptcha", function (value, element) {
            return grecaptcha.getResponse() !== '';
        });

        $.each($.validator.methods, function (key, value) {
            $.validator.methods[key] = function () {
                if (arguments.length > 0) {
                    arguments[0] = $.trim(arguments[0]);
                }
                return value.apply(this, arguments);
            };
        });

        $(document).on("keyup blur change check-form", ".form-disabled-until-valid :input", function () {
            var $form = $(this).closest(".form-disabled-until-valid");
            var $button = $form.find(".disabled-until-valid");
            $button.prop('disabled', !$form.validate().checkForm());
        });

        $(document).on("change change-checkbox-valid", "input[type='checkbox'], input[type='radio']", function () {
            var $form = $(this).closest("form");
            var validator = $form.data("validator");
            if (validator) $(this).valid();
        });

        $("body").addClass("validate-inited");
    }

    var $forms = $(".form-validate").not(".form-validate-inited");
    $forms.each(function () {
        $(this).validate({
            onkeyup: false,
            normalizer: function (value) {
                return $.trim(value);
            },
            errorClass: 'form__error',
            validClass: 'valid',
            errorElement: 'div',
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('error').removeClass('valid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).addClass('valid').removeClass('error');
            },
            errorPlacement: function (error, element) {
                $(element).closest(".form__item-field").append(error);
            },
            submitHandler: function (form, e) {
                $(form).trigger("submit.valid");
            }
        });

        $(this).addClass("form-validate-inited")
    });

    $(".form-disabled-until-valid").find(":input").first().trigger("check-form");

}


/*

 Loaders (for buttons)

 */

function loader_init() {
    $btn = $(".loader-on-page-load");
    loader_add($btn);
    $btn.filter(':input').prop("disabled", true);
}

function loader_add($o) {
    $o.each(function () {
        var $o = $(this);
        var loader = '<span class="loader"><svg width=\'48px\' height=\'48px\' xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" class="uil-default"><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(0 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-1s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(30 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.9166666666666666s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(60 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.8333333333333334s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(90 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.75s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(120 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.6666666666666666s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(150 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.5833333333333334s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(180 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.5s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(210 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.4166666666666667s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(240 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.3333333333333333s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(270 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.25s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(300 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.16666666666666666s\' repeatCount=\'indefinite\'/></rect><rect  x=\'46.5\' y=\'40\' width=\'7\' height=\'20\' rx=\'3\' ry=\'3\' fill=\'#9aa9b8\' transform=\'rotate(330 50 50) translate(0 -30)\'>  <animate attributeName=\'opacity\' from=\'1\' to=\'0\' dur=\'1s\' begin=\'-0.08333333333333333s\' repeatCount=\'indefinite\'/></rect></svg></span>';
        if ($o.closest('.btn').length) {
            $o.wrapInner("<div class='btn__loader-inner'>");
        }
        $o.children('.loader').remove();
        $o.append(loader);
        $o[0].offsetHeight;
        $o.children('.loader').addClass('active');
        $o.addClass("loading");
    });
}

function loader_remove($o) {
    $o.each(function () {
        var $o = $(this);
        $o.find(".btn__loader-inner").children().unwrap();
        $o.removeClass("loading");
        var $loader = $o.children(".loader");
        $loader.removeClass('active');
        setTimeout(function () {
            $loader.remove();
        }, 500);
    });
}


/*

Tabs

 */

function tabs_init() {

    $(document).on("click", ".js-tabs a", function (e, eparams) {
        var $tabs = $(this).closest(".js-tabs");

        $(this).parent().siblings().removeClass("active");
        if ($(this).closest(".js-tabs-toggle").length) {
            $(this).parent().toggleClass("active");
        } else {
            $(this).parent().addClass("active");
        }

        tabs_update_pointer($tabs);

        $ostt = $(this).closest(".js-tabs-onclick-scroll-to-tabs");
        if ($ostt.length) {
            $("html, body").stop(true, true).animate({scrollTop: $ostt.offset().top + ($ostt.data("tabs-scroll-offset") ? $ostt.data("tabs-scroll-offset") : 0) - ($ostt.data("tabs-scroll-offset-element") ? $($ostt.data("tabs-scroll-offset-element")).outerHeight() : 0)}, 500);
        }

        if ($(this).hasClass("js-tabs-ignore") || $tabs.hasClass("js-tabs-ignore")) {
            return true;
        }

        var $o = $($(this).attr("href"));

        if ($o.length) {
            e.preventDefault();
            if ($(this).closest(".js-tabs-toggle").length) {
                $o.toggleClass("active");
            } else {
                $o.addClass("active");
            }

            $o.siblings(".tab-pane").removeClass("active");
            if ($o.hasClass("active")) {
                $o.closest(".tab-content-change-height").css("height", 0).css("height", $o.outerHeight());
                $o.trigger('tabs-show');
            } else {
                $o.closest(".tab-content-change-height").css("height", 0);
                $o.trigger('tabs-hide');
            }
            if ($(this).closest(".js-tabs").hasClass("js-tabs-hash-change")) {
                if (typeof eparams === "undefined" || typeof eparams.nohash === "undefined" || !eparams.nohash) {
                    location_hash_update($(this).attr("href"));
                }
            }
            $o.filter(".active").find(":input:first").trigger("check-form");
            $o.siblings(".tab-pane").find(":input.error").each(function () {
                var $form = $(this).closest("form");
                var validator = $form.data("validator");
                if (validator) $(this).valid();
            });
            $(window).trigger("scroll.fixed-hscroll");
        }
    });

    tabs_scroll_init();
    // $(document).ajaxStop(function () {
    //     tabs_scroll_init();
    // });

    if (location.hash) {
        if ($(location.hash).filter(".tab-pane--hidden").length) {
            $(".js-tabs a[href='" + location.hash + "']").trigger("click");
        } else if ($(".tab-pane--hidden").find(location.hash).length) {
            $(".js-tabs a[href='#" + $(".tab-pane--hidden").find(location.hash).closest(".tab-pane--hidden").attr("id") + "']").trigger("click", {nohash: true});
        }
    }

    tabs_update_pointer($(".tabs"));
    $(".js-tabs-fixed-center a").on("click-tabs-fixed-center", function (e) {
        tabs_update_pointer($(this).closest(".tabs"));
    });
    $(window).on("resize orientationchange", function () {
        tabs_update_pointer($(".tabs"));
        $(".js-tabs-fixed-center-scroll").trigger("scroll.emulate");
    });
}

function tabs_scroll_init() {
    $(".js-tabs-fixed-center-scroll").not(".js-tabs-fixed-center-scroll-inited").on("scroll scroll.emulate", function (e) {
        var $tabs = $(this).closest(".js-tabs-fixed-center");
        if ($(this).scrollLeft() <= 0) {
            $tabs.addClass("scroll-in-start");
        } else {
            $tabs.removeClass("scroll-in-start");
        }
        if ($(this).scrollLeft() + $(this).outerWidth() >= $(this)[0].scrollWidth - 1) {
            $tabs.addClass("scroll-in-end");
        } else {
            $tabs.removeClass("scroll-in-end");
        }
    }).addClass("js-tabs-fixed-center-scroll-inited").trigger("scroll.emulate").closest(".js-tabs-fixed-center").addClass('js-tabs-fixed-center-inited');

    $(".js-tabs-fixed-center a").not(".js-tabs-fixed-center-scroll-inited").on("click click-tabs-fixed-center", function (e) {
        var $tabs = $(this).closest(".js-tabs-fixed-center");
        var $ul = $(this).closest(".js-tabs-fixed-center-scroll");
        $ul.stop(true, true).animate({scrollLeft: $(this).parent()[0].offsetLeft - $tabs.width() / 2 + $(this).outerWidth() / 2}, 300);
    }).addClass("js-tabs-fixed-center-scroll-inited");

    $(".js-tabs-scroll-prev").not(".js-tabs-fixed-center-scroll-inited").on("click", function (e) {
        e.preventDefault();
        var $tabs = $(this).closest(".js-tabs-fixed-center");
        var $ul = $tabs.find(".js-tabs-fixed-center-scroll");
        $ul.stop(true, true).animate({scrollLeft: $ul.scrollLeft() - $ul.width() * 0.75}, 300);
    }).addClass("js-tabs-fixed-center-scroll-inited");

    $(".js-tabs-scroll-next").not(".js-tabs-fixed-center-scroll-inited").on("click", function (e) {
        e.preventDefault();
        var $tabs = $(this).closest(".js-tabs-fixed-center");
        var $ul = $tabs.find(".js-tabs-fixed-center-scroll");
        $ul.stop(true, true).animate({scrollLeft: $ul.scrollLeft() + $ul.width() * 0.75}, 300);
    });

    $(".js-tabs-fixed-center li.active a").trigger("click-tabs-fixed-center");
}

function tabs_update_pointer($tabs) {
    $tabs.each(function () {
        var $pointer = $(this).find(".js-tabs-pointer");
        var $scroll = $pointer.closest(".tabs__scroll");
        var scroll_offset = 0;
        if ($pointer.length) {
            if ($scroll.length) {
                scroll_offset = $scroll[0].scrollLeft;
            }
            $pointer.css({
                left: $(this).find("li.active").offset().left - $(this).offset().left + scroll_offset,
                width: $(this).find("li.active").width(),//outerWidth
            }).addClass("active");
        }
    });
}


/*

Slider

 */


function slider_init($s) {
    slider_swiper_init($s);
}

function slider_swiper_init($s) {
    if (typeof Swiper !== "undefined") {
        if (typeof $s === "undefined") $s = $(".swiper-slider").not(".slider-inited");
        $s.each(function () {
            var $this = $(this);
            var swiper = new Swiper($this.find('.swiper-container')[0], {
                init: false,
                direction: (typeof $this.data("slider-direction") !== "undefined") ? $this.data("slider-direction") : 'horizontal',
                loop: (typeof $this.data("slider-loop") !== "undefined") ? $this.data("slider-loop") : false,
                loopAdditionalSlides: $this.find('.swiper-slide').length * 5,
                loopedSlides: $this.find('.swiper-slide').length * 5,
                autoplay: (typeof $this.data("slider-autoplay") !== "undefined") ? {delay: $this.data("slider-autoplay")} : false,
                initialSlide: (typeof $this.data("slider-initial-slide") !== "undefined") ? $this.data("slider-initial-slide") : 0,
                pagination: {
                    el: (typeof $this.data("slider-pagination") !== "undefined") ? $this.data("slider-pagination") : $this.find('.swiper-pagination')[0],
                    type: (typeof $this.data("slider-pagination-type") !== "undefined") ? $this.data("slider-pagination-type") : 'bullets',
                    bulletElement: (typeof $this.data("slider-pagination-element") !== "undefined") ? $this.data("slider-pagination-element") : 'span',
                    clickable: (typeof $this.data("slider-pagination-clickable") !== "undefined") ? $this.data("slider-pagination-clickable") : true,
                    renderBullet: function (index, className) {
                        var $slider = $(this.$el).closest(".swiper-slider");
                        var name = $(this.slides).eq(index).attr("data-pagination-name");
                        var summary = $(this.slides).eq(index).attr("data-pagination-summary");
                        var tag = 'span';
                        if ($slider.length) {
                            if ($slider.data("slider-pagination-element")) {
                                tag = $slider.data("slider-pagination-element");
                            }
                        }
                        if (!name) {
                            name = "";
                        } else {
                            name = "<div class='swiper-pagination-name'>" + name + "</div>";
                        }
                        if (!summary) {
                            summary = "";
                        } else {
                            summary = "<div class='swiper-pagination-summary'>" + summary + "</div>";
                        }
                        return '<' + tag + ' class="' + className + '">' + name + summary + '</' + tag + '>';
                    },
                },
                scrollbar: ($this.find('.swiper-scrollbar').length) ? {el: $this.find('.swiper-scrollbar')[0]} : {},
                scrollbarHide: (typeof $this.data("slider-scrollbar-hide") !== "undefined") ? $this.data("slider-scrollbar-hide") : false,
                scrollbarDraggable: (typeof $this.data("slider-scrollbar-draggable") !== "undefined") ? $this.data("slider-scrollbar-draggable") : true,
                scrollbarSnapOnRelease: (typeof $this.data("slider-scrollbar-snap-on-release") !== "undefined") ? $this.data("slider-scrollbar-snap-on-release") : true,
                freeMode: (typeof $this.data("slider-free-mode") !== "undefined") ? $this.data("slider-free-mode") : false,
                autoHeight: (typeof $this.data("slider-auto-height") !== "undefined") ? $this.data("slider-auto-height") : false,
                centeredSlides: (typeof $this.data("slider-centered-slides") !== "undefined") ? $this.data("slider-centered-slides") : false,
                slidesPerView: (typeof $this.data("slider-slides-per-view") !== "undefined") ? $this.data("slider-slides-per-view") : 1,
                slidesPerGroup: (typeof $this.data("slider-slides-per-group") !== "undefined") ? $this.data("slider-slides-per-group") : 1,
                effect: (typeof $this.data("slider-effect") !== "undefined") ? $this.data("slider-effect") : "slide",
                fadeEffect: {
                    crossFade: true
                },
                preloadImages: (typeof $this.data("slider-lazy-loading") !== "undefined") ? !$this.data("slider-lazy-loading") : true,
                simulateTouch: (typeof $this.data("slider-simulate-touch") !== "undefined") ? $this.data("slider-simulate-touch") : true,
                allowTouchMove: (typeof $this.data("slider-allow-touch-move") !== "undefined") ? $this.data("slider-allow-touch-move") : true,
                spaceBetween: (typeof $this.data("slider-space-between") !== "undefined") ? $this.data("slider-space-between") : 0,
                navigation: {
                    prevEl: (typeof $this.data("slider-prev-button") !== "undefined") ? $this.data("slider-prev-button") : $this.find('.swiper-button-prev'),
                    nextEl: (typeof $this.data("slider-next-button") !== "undefined") ? $this.data("slider-next-button") : $this.find('.swiper-button-next'),
                },
                speed: (typeof $this.data("slider-speed") !== "undefined") ? $this.data("slider-speed") : 300,
                buttonDisabledClass: 'disabled',
                slidesOffsetBefore: (typeof $this.data("slider-slides-offset-before") !== "undefined") ? $this.data("slider-slides-offset-before") : 0,
                slidesOffsetAfter: (typeof $this.data("slider-slides-offset-after") !== "undefined") ? $this.data("slider-slides-offset-after") : 0,
                roundLengths: (typeof $this.data("slider-round-lengths") !== "undefined") ? $this.data("slider-round-lengths") : true,
                lazy: (typeof $this.data("slider-lazy-loading") !== "undefined") ? $this.data("slider-lazy-loading") : false,
                nested: (typeof $this.data("slider-nested") !== "undefined") ? $this.data("slider-nested") : false,
                resistanceRatio: (typeof $this.data("slider-resistance-ratio") !== "undefined") ? $this.data("slider-resistance-ratio") : 0.85,
                breakpoints: (typeof $this.data("slider-breakpoints") !== "undefined") ? $this.data("slider-breakpoints") : null,
                slideToClickedSlide: (typeof $this.data("slider-slide-to-clicked-slide") !== "undefined") ? $this.data("slider-slide-to-clicked-slide") : false,
                mousewheelControl: (typeof $this.data("slider-mousewheel-control") !== "undefined") ? $this.data("slider-mousewheel-control") : false,
                mousewheelReleaseOnEdges: (typeof $this.data("slider-mousewheel-release-on-edges") !== "undefined") ? $this.data("slider-mousewheel-release-on-edges") : false,
                zoom: (typeof $this.data("slider-zoom") !== "undefined") ? $this.data("slider-zoom") : false
            });

            $this.find('.swiper-container')[0].swiper.on('transitionStart', function (e) {
                var $activeSlide = $(this.slides).eq(this.activeIndex);
                $activeSlide.find(".swiper-lazy-preloader").css({
                    top: this.height / 2
                });
                $(this.slides).not($activeSlide).find('video').each(function () {
                    this.pause();
                });
            });


            $this.find('.swiper-container')[0].swiper.on('init progress resize', function (e) {
                if (typeof this.allowTouchMoveRemembered === 'undefined') {
                    this.allowTouchMoveRemembered = this.allowTouchMove;
                }
                if (this.isBeginning && this.isEnd) {
                    $(this.navigation.$prevEl).addClass("swiper-button-unneeded");
                    $(this.navigation.$nextEl).addClass("swiper-button-unneeded");
                    this.allowTouchMove = false;
                } else {
                    $(this.navigation.$prevEl).removeClass("swiper-button-unneeded");
                    $(this.navigation.$nextEl).removeClass("swiper-button-unneeded");
                    if (typeof this.allowTouchMoveRemembered !== 'undefined') {
                        this.allowTouchMove = this.allowTouchMoveRemembered;
                    }
                }
            });

            $this.find('.swiper-container')[0].swiper.on('init transitionStart resize', function (e) {
                var $slider = $(this.$el).closest(".swiper-slider");
                $slider.attr("data-active-slide", this.realIndex);
            });

            $this.find('.swiper-container')[0].swiper.on('progress', function (progress) {
                progressCallback(this);
            });
            progressCallback($this.find('.swiper-container')[0].swiper);


            $this.find('.swiper-container')[0].swiper.on('onLazyImageReady', function (swiper) {
                swiper.setWrapperTransition(swiper.params.speed);
                swiper.updateAutoHeight();
            });

            swiper.init();

        }).addClass("slider-inited");


        $s.each(function () {
            var $this = $(this);

            if (typeof $this.data("slider-control-thumbs") !== "undefined" && typeof $this.find('.swiper-container')[0].swiper !== "undefined") {
                var $thumbs_swiper = $($this.data("slider-control-thumbs"));
                var $thumbs_swiper_cs = $thumbs_swiper.find('.swiper-container');
                if ($thumbs_swiper_cs.length) {

                    $thumbs_swiper_cs.each(function () {
                        var $thumbs_swiper_c = $(this);

                        if (typeof $thumbs_swiper_c[0].swiper !== "undefined") {
                            var thumbs_swiper = $thumbs_swiper_c[0].swiper;
                            thumbs_swiper.thumbs_goal_swiper = $this.find('.swiper-container')[0].swiper;
                            thumbs_swiper.on('tap', function (e) {
                                var clicked = this.clickedIndex;
                                //swiper.activeIndex = clicked; //don't need this
                                //swiper.updateClasses(); //don't need this
                                $(this.slides).removeClass('is-selected');
                                $(this.clickedSlide).addClass('is-selected');
                                this.slideTo(clicked, this.params.speed, false);
                                this.thumbs_goal_swiper.slideTo(clicked, this.thumbs_goal_swiper.params.speed, true);
                            });
                        }

                        $this.find('.swiper-container')[0].swiper.on('transitionStart transitionEnd', function (e) {
                            var $o_cs = $(this.$el.closest(".swiper-slider").data("slider-control-thumbs"));
                            var activeIndex = this.activeIndex;
                            $o_cs.find('.swiper-container').each(function () {
                                var $o = $(this);
                                if (typeof $o[0].swiper !== "undefined") {
                                    var thumbs_swiper = $o[0].swiper;
                                }
                                if (typeof thumbs_swiper !== "undefined") {
                                    $(thumbs_swiper.slides).removeClass('is-selected');
                                    $(thumbs_swiper.slides).eq(activeIndex).addClass('is-selected');
                                    thumbs_swiper.slideTo(activeIndex, thumbs_swiper.params.speed, false);
                                }
                            });
                        });
                        $this.find('.swiper-container')[0].swiper.transitionEnd();
                    });
                }
            }

        });

        function progressCallback(swiper) {
            var $slider = $(swiper.$el).closest(".swiper-slider");
            $slider.removeClass("swiper-slider--start swiper-slider--end");
            if (swiper.isBeginning) {
                $slider.addClass("swiper-slider--start");
            }
            if (swiper.isEnd) {
                $slider.addClass("swiper-slider--end");
            }
        }

        $(window).on("resize orientationchange", function () {
            delay_slider_resize(function () {
                $(".swiper-slider.slider-inited").each(function () {
                    if ($(this).data("reinitialize-on-resize") && typeof $(this).find(".swiper-container")[0].swiper !== "undefined") {
                        var swiper = $(this).find(".swiper-container")[0].swiper;
                        swiper.destroy(true, true);
                        $(this).find('.swiper-slide-duplicate').remove();
                        slider_swiper_init($(this));
                    }
                });
            }, 300);
        });

        $(window).trigger("resize-swiper-wrapper-center-if-less");
    }
}

var delay_slider_resize = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();


/*

Gallery and Modal Popups

 */

function fancybox_init(context) {

    if (!$("body").data("fancybox-inited")) {

        $.fancybox.defaults.i18n.ru = {
            CLOSE: "Закрыть",
            NEXT: "Далее",
            PREV: "Назад",
            ERROR: "Загрузка контента не удалась. <br/> Пожалуйста, попробуйте ещё раз.",
            PLAY_START: "Начать слайдшоу",
            PLAY_STOP: "Приостановить слайдшоу",
            FULL_SCREEN: "Во весь экран",
            THUMBS: "Предпросмотр",
            DOWNLOAD: "Скачать",
            SHARE: "Поделиться",
            ZOOM: "Масштаб"
        };
        $.fancybox.defaults.lang = $('html').attr('lang');

        if ($().fancybox) {
            $.fancybox.options_modal = {
                slideShow: false,
                hash: false,
                clickContent: false,
                closeExisting: true,
                clickSlide: "close",
                clickOutside: "close",
                keyboard: true,
                mobile: {
                    clickSlide: false
                },
                ajax: {
                    settings: {
                        cache: false
                    }
                },
                baseClass: "fancybox-container--popup",
                trapFocus: false,
                autoFocus: false,
                touch: false,
                popup_default: true,
                btnTpl: {
                    smallBtn: '<div data-fancybox-close class="fancybox-close">\
                            <svg class="icon icon--cross">\
                                <use xlink:href="' + $('body').data('svg-sprite-url') + '#icon-cross"></use>\
                            </svg></div>'
                },
                afterLoad: function (instance, current) {
                    current.$content.wrap("<div class='fancybox-content-wrapper container'>");
                    bind_widgets(current.$content);
                    var $small_btn_place = current.$content.find("[data-fancybox-small-btn-place]");
                    if ($small_btn_place.length) {
                        current.$content.find(".fancybox-close").appendTo($small_btn_place);
                    }
                },
            };
            if ($().tooltipster) {
                $.fancybox.defaults.beforeLoad = function (instance, current) {
                    var tooltips = $.tooltipster.instances();
                    $.each(tooltips, function (i, tooltip) {
                        tooltip.close();
                    });
                };
            }
            $.fancybox.defaults.hash = false;
        }

        $(document).on("click", "[data-fancybox-close-current]", function (e) {
            e.preventDefault();
            $.fancybox.close();
        });

        $("body").data("fancybox-inited", true);
    }

    if (jQuery().fancybox) {

        var options = {
            slideShow: false,
            hash: false,
            loop: true,
            idleTime: 10,
            margin: [44, 0],
            gutter: 50,
            keyboard: true,
            animationEffect: "zoom",
            arrows: true,
            infobar: true,
            toolbar: true,
            buttons: [
                'slideShow',
                'fullScreen',
                'thumbs',
                'close'
            ],
            thumbs: {
                autoStart: false,
                hideOnClose: true
            },
        };
        $.fancybox.options_gallery = options;

        $fancybox_links_all = $("[data-fancybox]", context).not(".fancybox-inited");

        $fancybox_links = $fancybox_links_all.not("[data-type='ajax']");
        fancybox_links_by_group = [];
        groups = [];
        $fancybox_links.each(function () {
            var group = $(this).attr("data-fancybox");
            if (!group) group = "";
            if ($.inArray(group, groups) < 0) groups.push(group);
        });
        for (group in groups) {
            options_current = $.extend(true, {}, options);
            var $items = $fancybox_links.filter("[data-fancybox='" + groups[group] + "']");
            var $first = $items.eq(0);
            if (typeof $first.attr("data-fancybox-loop") !== "undefined") {
                options_current["loop"] = $first.data("fancybox-loop");
            }
            $items.fancybox(options_current).addClass("fancybox-inited");
        }

        $fancybox_links_ajax = $fancybox_links_all.filter("[data-type='ajax']");
        $fancybox_links_ajax.each(function () {
            if ($(this).attr("data-type") == "ajax" || $(this).attr("data-src")) {
                options = $.fancybox.options_modal;
            }
            $(this).fancybox(options);
        }).addClass("fancybox-inited");
    }
}


/*
* Custom Scrollbar
* */

function scrollbar_init($o) {
    if (!Modernizr.touchevents) {
        if (typeof $o === 'undefined') {
            $o = $(".js-scrollbar");
        }
        $o.not(".js-scrollbar-inited").each(function () {
            $(this).addClass('ps--reach-start').addClass('ps--reach-start');

            $(this).on('ps-scroll-y', function (e) {
                $(this).removeClass('ps--reach-start').removeClass('ps--reach-end');
            });

            $(this).on('ps-y-reach-start', function (e) {
                $(this).addClass('ps--reach-start');
            });

            $(this).on('ps-y-reach-end', function (e) {
                $(this).addClass('ps--reach-end');
            });

            $(this).on('scroll', function (e) {
                e.stopPropagation();
            });

            var ps = new PerfectScrollbar(this, {
                suppressScrollX: true,
                minScrollbarLength: 40,
            });
            $(this).data('ps', ps);
            $(this).on('mousewheel', function (e) {
                if ($(this).hasClass('ps--active-y') && !$(this).data('scrollbar-allow-page-scroll')) {
                    e.preventDefault();
                }
            });

            $(this).addClass('js-scrollbar-inited');
        });
    }
}


/*

Tooltips

 */

function tooltip_init($o, callback, options) {

    if (!$("body").hasClass("tooltip-inited")) {

        $(document).on("click", ".tooltip-closest-hide", function (e) {
            var $this = $(this);
            var $tooltip = $this.closest(".tooltipster-base");
            if ($tooltip.length) {
                $.each($.tooltipster.instances(), function (k, instance) {
                    if ($tooltip.attr("id") == instance.__namespace) {
                        var $origin = $(instance.elementOrigin());
                        $origin.tooltipster("close");
                        $origin.removeClass('tooltip-active');
                        return false;
                    }
                });
            }
        });

        $(document).on('touchstart touchmove', '.tooltip-popover-for-mobiles.tooltipster-sidetip', function (e) {
            e.stopPropagation();
            $("html").addClass("tooltip-popover-for-mobiles-opened");
        });

        $(document).on("touchstart", ".tooltip-popover-for-mobiles-opened body", function (e) {
            $("html").removeClass("tooltip-popover-for-mobiles-opened");
        });

        $(document).on("scroll", ".tooltipster-content.has-scrollbar", function (e) {
            e.stopPropagation();
        });

        $(document).on("touchmove", ".tooltipster-content.has-scrollbar", function (e) {
            e.stopPropagation();
        });

        $(document).on("wheel", ".tooltipster-content.has-scrollbar", function (e) {
            if (e.originalEvent.wheelDelta < 0) {
                if ((this.scrollHeight - this.clientHeight - this.scrollTop) <= 0) {
                    e.preventDefault();
                }
            } else {
                if (this.scrollTop == 0) {
                    e.preventDefault();
                }
            }
        });

        $(document).on("keyup", function (e) {
            if (e.keyCode == 27) { //27 = keycode for escape
                var instances = $.tooltipster.instances();
                $.each(instances, function (i, instance) {
                    instance.close();
                    $(instance.elementOrigin()).removeClass('tooltip-active');
                });
            }
        });

        $(document).on("keyup", ".fancybox-container :input", function (e) {
            if (e.keyCode == 27) { //Escape button
                var $close = $(this).closest(".fancybox-container").find("[data-fancybox-close]").first();
                if ($close.length) {
                    $close.trigger("click");
                } else {
                    $.fancybox.close();
                }
            }
        });
        //
        // $(window).on("scroll", function(e) {
        //     var instances = $.tooltipster.instances();
        //     $.each(instances, function(i, instance) {
        //         if (instance._$origin.tooltipster('option', 'theme')[0].indexOf("tooltipster-popover") < 0) {
        //             instance.close();
        //         }
        //     });
        // });

        $(window).on("resize", function (e) {
            text_ellipsis_tooltips_update();
        });
        $.tooltipster.on('init', function (e) {

            e.instance.on('state', function (e) {
                var origin = e.origin;
                var instance = e.instance;
                var $scrollbar = $(instance.elementTooltip()).find('.js-scrollbar');
                //
                // var $img = $(instance.elementTooltip()).find('img');
                // console.log('$img.length', $img.length);
                // if ($img.length) {
                //     $img.on('lazy-loaded', function(e){
                //         console.log($(this).height());
                //         instance.reposition();
                //         setTimeout(function(){
                //             instance.reposition();
                //         }, 1000)
                //         console.log(instance);
                //     });
                // }
                scrollbar_init($scrollbar);
            });

        });
        //
        // $(document).on('lazy-loaded', '.tooltipster-content img', function(e){
        //     var instances = $.tooltipster.instances();
        //     $.each(instances, function(i, instance) {
        //         if (instance.status().state !== 'closed') {
        //             instance.reposition();
        //         }
        //     });
        // });

        $("body").addClass("tooltip-inited")
    }

    var options_default = {
        interactive: false,
        interactiveTolerance: 200,
        animationDuration: 200,
        delay: [50, 50],
        distance: 5,
        side: "top",
        contentAsHTML: true,
        repositionOnScroll: false,
        updateAnimation: false,
        theme: ["tooltipster-default"],
        functionInit: function (instance, helper) {
            var $origin = $(helper.origin),
                dataOptions = $origin.attr('data-tooltipster');

            if (dataOptions) {
                dataOptions = JSON.parse(dataOptions);
                if (typeof dataOptions["theme"] !== "undefined") {
                    dataOptions["theme"] = dataOptions["theme"];
                    if (!$origin.hasClass("tooltip-popover")) {
                        dataOptions["theme"] += " tooltipster-default";
                    } else {
                        dataOptions["theme"] += " " + instance.option("theme");
                    }
                }
                $.each(dataOptions, function (name, option) {
                    instance.option(name, option);
                });
            }
            $(this).attr("data-tooltip-text", $(this).attr("title"));
        },
        functionBefore: function (instance, helper) {
            var $origin = $(helper.origin);
            var $tooltip = $(instance.elementTooltip());
            $origin.addClass("tooltip-active");
            if ($origin.hasClass("tooltip-popover-for-mobiles")) {
                $("html").addClass("tooltip-popover-for-mobiles-opened");
            }
            if ($origin.data("tooltip-url")) {
                if ($origin.data('ajax') !== 'cached') {
                    $origin.tooltipster('content', "Загрузка...");
                    $.ajax({
                        type: 'get',
                        cache: false,
                        url: $origin.data("tooltip-url"),
                        success: function (data) {
                            $origin.tooltipster('content', data);
                            $origin.data('ajax', 'cached');
                            $(instance.elementTooltip()).find(".tooltip-hide").on("click.tooltip-hide", function (e) {
                                e.preventDefault();
                                instance.close();
                            });
                        }
                    });
                }
            } else {
                if ($origin.data("title")) {
                    $origin.tooltipster('content', $origin.data("title"));
                } else if ($origin.attr("data-tooltip-text")) {
                    $origin.tooltipster('content', $origin.attr("data-tooltip-text"));
                } else if ($origin.attr("data-tooltip-selector")) {
                    $origin.tooltipster('content', $($origin.attr("data-tooltip-selector")).clone());
                }
            }

            if ($origin.data("tooltip-disable")) {
                $origin.tooltipster('disable');
            }
            if ($origin.data("tooltip-enable")) {
                $origin.tooltipster('enable');
            }

            var instances = $.tooltipster.instances();
            $.each(instances, function (i, instance) {
                instance.close();
            });

        },
        functionReady: function (instance, helper) {
            var $origin = $(instance.elementOrigin());
            var $tooltip = $(instance.elementTooltip());
            $tooltip.find(".tooltipster-content").addClass("js-scrollbar");

            if ($origin.data("tooltip-btn-close")) {
                $tooltip.find(".tooltipster-box").append('<div class="tooltipster-close tooltip-closest-hide"><svg class="icon">\
                                <use xlink:href="' + $('body').data('svg-sprite-url') + '#icon-cross-thin"></use>\
                            </svg></div>');
            }

            if ($origin.filter(".tooltip-disabled").length) {
                $tooltip.addClass("hidden");
            }
            if ($origin.filter(".tooltip-enabled").length) {
                $tooltip.removeClass("hidden");
            }
            $tooltip.find(".tooltip-hide").off("click.tooltip-hide").on("click.tooltip-hide", function (e) {
                e.preventDefault();
                instance.close();
            });
            if (typeof $origin.data("active-index") !== "undefined") {
                $tooltip.find(".menu-list li").eq($origin.data("active-index")).addClass("active").siblings().removeClass("active");
            }
            lazy_load_change($tooltip.find('img'), function () {
                //instance.reposition();
                var $scrollbar = $(instance.elementTooltip()).find('.js-scrollbar');
                scrollbar_init($scrollbar);
            });
        },
        functionAfter: function (instance, helper) {
            var $origin = $(helper.origin);
            var $tooltip = $(instance.elementTooltip());

            $origin.removeClass("tooltip-active");
            if ($origin.hasClass("tooltip-popover-for-mobiles")) {
                $("html").removeClass("tooltip-popover-for-mobiles-opened");
            }
        },
    };

    if (typeof $o === "undefined") $o = $('.tooltip');

    $.extend(options_default, options);

    if (Modernizr.touchevents) $.extend(options_default, {
        trigger: "click"
    });
    if (typeof callback !== "undefined") $.extend(options_default, {
        functionAfter: callback
    });

    $o.not('.tooltip-inited').each(function () {
        var options_current = $.extend({}, options_default);

        if ($(this).hasClass("tooltip-popover")) {
            options_current["functionPosition"] = function (instance, helper, position) {
                var gridBcr = helper.origin.getBoundingClientRect(),
                    $clone = $(helper.tooltipClone).find('.tooltipster-box'),
                    arrowSize = parseInt($clone.css('margin-left'));
                var left_coord = gridBcr.left;
                var top_coord = position.coord.top;
                var dx = 0;
                var dy = 0;
                if ($(helper.origin).hasClass("tooltip-popover-right")) {
                    left_coord = gridBcr.right - $clone.outerWidth();
                }
                if ($(helper.origin).hasClass("tooltip-popover-margin")) {
                    dx = 15;
                    dy = -40;
                    if ($(helper.origin).hasClass("tooltip-popover-right")) {
                        dx = -1 * dx;
                    }
                    if (position.side == "top") {
                        dy = -1 * dy;
                    }
                }
                left_coord += dx;
                top_coord += dy;
                // override these
                position.coord = {
                    // move the tooltip so the arrow overflows the grid
                    left: left_coord - arrowSize,
                    top: top_coord
                };

                return position;
            };
            options_current["side"] = "bottom";
            options_current["trigger"] = "custom";
            if (Modernizr.touchevents) {
                options_current["triggerOpen"] = {
                    tap: true
                };
                options_current["triggerClose"] = {
                    tap: true,
                    scroll: true
                };
            } else {
                options_current["triggerOpen"] = {
                    click: true
                };
                options_current["triggerClose"] = {
                    click: true,
                    scroll: true
                };
            }
            options_current["interactive"] = true;
            options_current["viewportAware"] = false;
            options_current["distance"] = 5;
            options_current["theme"] = "tooltipster-popover";
            var $ds = $(this).closest(".dropdown-selection");
            var $ds_content = $ds.find(".dropdown-selection-content");
            if ($ds.length && $ds_content.length) {
                var $clone = $ds.find(".dropdown-selection-content").clone(true);
                $.extend(options_current, {
                    content: $clone
                });
            }
            $ds.on("click", function (e) {
                e.stopPropagation();
            });
        }

        if ($(this).hasClass("tooltip-popover-for-mobiles")) {
            options_current["theme"] = "tooltipster-popover tooltip-popover-for-mobiles";
        }
        if ($(this).data("tooltip-trigger")) $.extend(options_current, {
            trigger: $(this).data("tooltip-trigger")
        });
        if ($(this).is("input,textarea") && !$(this).data("tooltip-disable-input-behavior")) {
            $.extend(options_current, {
                trigger: "custom",
                autoClose: false
            });
            $(this).on("focus", function () {
                $(':input.tooltip-inited').not(this).tooltipster('hide');
                $(this).tooltipster('show');
            });
        }
        if ($(this).data("tooltip-url")) $.extend(options_current, {
            content: "Загрузка..."
        });
        if (typeof $(this).data("interactive") !== "undefined") $.extend(options_current, {
            interactive: $(this).data("interactive")
        });
        $(this).tooltipster(options_current).addClass("tooltip-inited");

        text_ellipsis_tooltips_update();
    });
}

function text_ellipsis_tooltips_update() {
    $(".js-text-ellipsis-track-size").each(function () {
        if (!$(this).attr("data-tooltip-text")) {
            $(this).attr("data-tooltip-text", $(this).html());
        }
        if ($(this)[0].scrollWidth > $(this)[0].clientWidth) {
            $(this).removeClass("tooltip-disabled").addClass("tooltip-enabled");
            // $(this).removeAttr("data-tooltip-disable");
            // $(this).attr("data-tooltip-enable", true);
        } else {
            $(this).addClass("tooltip-disabled").removeClass("tooltip-enabled");
            // $(this).attr("data-tooltip-disable", true);
            // $(this).removeAttr("data-tooltip-enable");
        }
    });
}


/*
* Images Slider on hover (with pager and image captions)
* */

function images_hover_slider($o) {

    var inited_class = "js-images-hover-slider-inited";

    if (!$("html").hasClass(inited_class)) {

        $("html").addClass(inited_class);

        $(document).on('mouseenter touchstart', '.js-images-hover-slider', function (e) { // 'mouseenter touchstart'
            var $this = $(e.currentTarget);
            delay_images_hover_slider(function () {
                $this.addClass('hover');
            }, 100);
        });

        $(document).on('mouseleave touchend', '.js-images-hover-slider', function (e) { // 'mouseleave touchend'
            $(e.currentTarget).removeClass('hover');
            delay_images_hover_slider(function () {
            }, 0);
        });

        $(document).on('mousemove click', '.js-images-hover-slider', function (e) { // 'mousemove touchmove click'
            var $this = $(this);
            if (e.type == 'mousemove' && !$this.hasClass('hover')) {
                return;
            }
            var $images = $this.find('> img');
            var $overlay = $this.find('.ihs-overlay');
            var $pager = $this.find('.ihs-pager');
            if ($pager.length && $pager[0] !== undefined && $pager[0].offsetParent === null) {
                $(this).data('ihs-allow-fullscreen', true);
                return;
            }
            var rect = this.getBoundingClientRect();
            if (e.type == 'touchmove') {
                var x = e.originalEvent.changedTouches[0].clientX - rect.left;
            } else {
                var x = e.clientX - rect.left;
            }
            var w = rect.right - rect.left;
            var count = $images.length;
            var index = Math.floor(x / w * count);
            var $image = $images.eq(index);
            $this.data('ihs-index-prev', $this.data('ihs-index'));
            $this.data('ihs-allow-fullscreen', $this.data('ihs-index') === index);
            $this.data('ihs-index', index);
            $image.addClass('active').siblings().removeClass('active');
            $overlay.html($image.data('ihs-content'));
            $pager.find('.ihs-pager__item').eq(index).addClass('active').siblings().removeClass('active');
        });

        $(document).on('click', '.js-images-popup-slider, .js-images-popup-slider-open', function (e) {
            var $slider = $(this).closest('.js-images-popup-slider');
            var allow_fullscreen = $slider.data('ihs-allow-fullscreen');
            if ($(this).hasClass('js-images-popup-slider-open')) {
                e.stopPropagation();
                allow_fullscreen = true;
            }
            if (allow_fullscreen) {
                var items = [];
                $slider.find('> img').each(function () {
                    var thumb = $(this).attr('src');
                    var title = $(this).attr('data-ihs-content');
                    var full = $(this).attr('data-src-full');
                    items.push(
                        {
                            src: full ? full : thumb,
                            opts: {
                                caption: title,
                                thumb: thumb
                            }
                        }
                    );
                });
                $.fancybox.open(items, $.fancybox.options_gallery, $slider.data('ihs-index') || 0);
            }
        });
    }

    if (typeof $o === "undefined") $o = $(".js-images-hover-slider");
    $o.not("." + inited_class).each(function () {
        var $this = $(this);
        var $images = $this.find('> img');
        var count = $images.length;
        var $pager = $this.append('<div class="ihs-overlay"></div><div class="ihs-pager"></div>').find('.ihs-pager');
        $images.each(function () {
            var is_active = $(this).hasClass('active');
            $pager.append('<div class="ihs-pager__item' + ((is_active) ? ' active' : '') + '"></div>');
            if (is_active) {
                $this.find('.ihs-overlay').html($(this).data('ihs-content'))
            }
        });
        $(this).addClass(inited_class);
    });
}

var delay_images_hover_slider = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();


/*
* SVG icon url update
* */

function icons_init($o) {
    if (typeof $o === 'undefined') {
        $o = $("svg.icon");
    }
    $o.not('.icon-url-changed').each(function () {
        var $use = $(this).find('use');
        $use.each(function () {
            var href = $(this).attr('xlink:href');
            if (href && href.substr(0, 1) == '#') {
                $(this).attr('xlink:href', $('body').data('svg-sprite-url') + href);
            }
        })
        $(this).addClass('icon-url-changed');
    });
}


/*

Yandex Map UI

 */

function map_load($o) {
    if (typeof $o === 'undefined') {
        $o = $(".map");
    }
    if ($o.length && !$("#api-maps-yandex").length) {
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.id = 'api-maps-yandex';
        script.src = '//api-maps.yandex.ru/2.1/?lang=ru-RU&onload=map_init';
        document.body.appendChild(script);
    } else if ($("#api-maps-yandex").length) {
        map_init($o);
    }
}

function objGetBounds(obj) {
    var minP = [999, 999];
    var maxP = [0, 0];
    for (var i in obj) {
        minP[0] = Math.min(minP[0], obj[i].geometry.getCoordinates()[0]);
        minP[1] = Math.min(minP[1], obj[i].geometry.getCoordinates()[1]);

        maxP[0] = Math.max(maxP[0], obj[i].geometry.getCoordinates()[0]);
        maxP[1] = Math.max(maxP[1], obj[i].geometry.getCoordinates()[1]);
    }
    return [minP, maxP];
}

function map_init($o) {

    if (!$("body").hasClass("map-inited-globally")) {

        $(document).on("click", ".map-point-show", function (e) {
            e.preventDefault();
            var $point = $($(this).data("map-point-selector"));
            if ($point.length) {
                var placemark = $point.data("placemark");
                var map = $point.closest(".map").data("map");
                var clusterer = $point.closest(".map").data("clusterer");
                if (placemark && clusterer) {
                    var geoObjectState = clusterer.getObjectState(placemark);
                    if (geoObjectState.isShown) {
                        if (geoObjectState.isClustered) {
                            map.setBounds(objGetBounds(clusterer.getObjectState(placemark).cluster.properties.get('geoObjects')), {
                                checkZoomRange: true,
                                zoomMargin: 50,
                                duration: 500
                            }).then(function () {
                                placemark.events.fire('click', {
                                    coordPosition: placemark.geometry.getCoordinates(),
                                    target: placemark
                                });
                            }, function (err) {
                            }, this);
                        } else {
                            map.setCenter(placemark.geometry.getCoordinates(), map.getZoom(), {
                                duration: 500
                            });
                            placemark.events.fire('click', {
                                coordPosition: placemark.geometry.getCoordinates(),
                                target: placemark
                            });
                        }
                    }
                } else if (placemark) {
                    map.setCenter(placemark.geometry.getCoordinates(), map.getZoom(), {
                        duration: 500
                    });
                    placemark.events.fire('click', {
                        coordPosition: placemark.geometry.getCoordinates(),
                        target: placemark
                    });
                }
            }
        });

        $("body").addClass("map-inited-globally")
    }

    if (typeof $o === 'undefined' || !($o instanceof jQuery)) {
        $o = $(".map");
    }
    $o.not('.map--inited').each(function () {
        var $map = $(this);
        var point = false;
        if ($map.attr("data-point")) point = $map.attr("data-point").split(",");
        var center = false;
        if ($map.attr("data-center")) center = $map.attr("data-center").split(",");
        var zoom = $(this).attr("data-zoom");
        var map = new ymaps.Map(this, {
            center: (center) ? center : point,
            zoom: zoom,
            controls: [],//["smallMapDefaultSet"]//["smallMapDefaultSet"]
        });

        $map.data("map", map);

        map.behaviors.disable("scrollZoom");

        if ($map.data("point") && point) {
            var placemark = new ymaps.Placemark(point, {
                iconCaption: $map.data("point-caption")
            }, {
                cursor: "arrow",
                preset: 'islands#icon',
                iconColor: '#ff3333'
            });
            map.geoObjects.add(placemark);
        }

        var map_points = [];
        var map_objects = [];
        var map_objects_int;

        customBalloonLayout = ymaps.templateLayoutFactory.createClass(
            '<div class="map__balloon">' +
            '<a class="map__balloon-close" href="#"></a>' +
            '<div class="map__balloon-arrow"></div>' +
            '<div class="map__balloon-inner">' +
            '$[[options.contentLayout]]' +
            '</div>' +
            '</div>', {
                build: function () {
                    this.constructor.superclass.build.call(this);

                    this._$element = $('.map__balloon', this.getParentElement());

                    this.applyElementOffset();

                    this._$element.find('.map__balloon-close')
                        .on('click', $.proxy(this.onCloseClick, this));
                },
                clear: function () {
                    this._$element.find('.map__balloon-close')
                        .off('click');

                    this.constructor.superclass.clear.call(this);
                },
                onSublayoutSizeChange: function () {
                    customBalloonLayout.superclass.onSublayoutSizeChange.apply(this, arguments);

                    if (!this._isElement(this._$element)) {
                        return;
                    }

                    this.applyElementOffset();

                    this.events.fire('shapechange');
                },
                applyElementOffset: function () {
                    this._$element.css({
                        top: -(this._$element[0].offsetHeight) / 2 - 25
                    });
                },
                onCloseClick: function (e) {
                    e.preventDefault();

                    this.events.fire('userclose');
                },
                getShape: function () {
                    if (!this._isElement(this._$element)) {
                        return customBalloonLayout.superclass.getShape.call(this);
                    }

                    var position = this._$element.position();

                    return new ymaps.shape.Rectangle(new ymaps.geometry.pixel.Rectangle([
                        [position.left, -(this._$element[0].offsetHeight) / 2 - 25], [
                            position.left + this._$element[0].offsetWidth,
                            this._$element[0].offsetHeight - (this._$element[0].offsetHeight) / 2 - 25
                        ]
                    ]));
                },
                _isElement: function (element) {
                    return element && element[0] && element.find('.map__balloon-arrow')[0];
                }
            });

        customBalloonContentLayout = ymaps.templateLayoutFactory.createClass(
            '<div class="map__balloon-title">$[properties.balloonHeader]</div>' +
            '<div class="map__balloon-content">$[properties.balloonContent]</div>'
        );

        map.geoObjects_pl = [];

        $(this).find(".map__points li").each(function (i) {
            var $this = $(this);
            $(this).data("index", i);
            if ($(this).data("point")) {
                var point = $(this).data("point").split(",");
                map_add_placemark(map, point, $(this));
            }
        });

        if ($map.data("clusterer") && map.geoObjects_pl.length > 1) {
            var clusterIcons = [
                {
                    size: [31, 41],
                    offset: [-15, -41]
                }];
            var clusterIconLayout = ymaps.templateLayoutFactory.createClass(
                '<div class="map-marker map-marker--cluster"><div class="map-marker__text">$[properties.geoObjects.length]</div></div>');
            var clusterer = new ymaps.Clusterer({
                clusterIcons: clusterIcons,
                clusterIconContentLayout: clusterIconLayout,
                clusterDisableClickZoom: false,
                zoomMargin: 50,
                duration: 500
            });
            clusterer.options.set({
                gridSize: 128,
                openBalloonOnClick: false
            });
            clusterer.add(map.geoObjects_pl);
            map.geoObjects.add(clusterer);
            $map.data("clusterer", clusterer);
        } else {
            $.each(map.geoObjects_pl, function (k, v) {
                map.geoObjects.add(v);
            });
        }

        if ($map.data("auto-bounds") && map.geoObjects_pl.length > 1) {
            map.setBounds(map.geoObjects.getBounds(), {checkZoomRange: true, margin: 20}).then(function () {
                if (map.getZoom() > $map.data("zoom")) map.setZoom($map.data("zoom"));
                if ($map.data("set-initial-params")) {
                    $map.attr("data-center", map.getCenter().join(","));
                    $map.attr("data-zoom", map.getZoom());
                }
                if ($map.data("set-initial-params-by-first")) {
                    $map.attr("data-center", map.geoObjects.get(0).geometry.getCoordinates());
                    map.setCenter(map.geoObjects.get(0).geometry.getCoordinates());
                }
            });
        } else {
            if ($map.data("set-initial-params") || $map.data("set-initial-params-by-first")) {
                $map.attr("data-center", map.geoObjects.get(0).geometry.getCoordinates());
                map.setCenter(map.geoObjects.get(0).geometry.getCoordinates());
            }
        }

        map.events.add('click', function (e) {
            e.get('target').balloon.close();
        });
        $map.addClass("map--inited").data("map", map);
    });
}

function map_add_placemark(map, point, $this) {
    var markerLayout = {
        hideIconOnBalloonOpen: false,
        balloonShadow: false,
        balloonPanelMaxMapArea: 0,
        zIndexActive: 7000,
        pane: 'balloon',
        openBalloonOnClick: false
    };
    markerLayout["balloonLayout"] = customBalloonLayout;
    markerLayout["balloonContentLayout"] = customBalloonContentLayout;
    var iconLayout = ymaps.templateLayoutFactory.createClass("<" + (($this.data("link")) ? "a href='" + $this.data("link") + "'" : "div") + " class='map-marker'>" + (($this.data("marker-text")) ? "<div class='map-marker__text'>" + $this.data("marker-text") + "</div>" : "") + "</" + (($this.data("link")) ? "a" : "div") + ">");
    markerLayout["iconLayout"] = iconLayout;
    var placemark = new ymaps.Placemark(point, {}, markerLayout);
    if ($this.data("cursor")) {
        markerLayout["cursor"] = $this.data("cursor");
    }
    if ($this.data("ajax-url")) {
        if (placemark.options.get('isBalloonContentLoaded')) {
            placemark.balloon.open();
        } else {
            placemark.options.set('openEmptyBalloon', true);
            placemark.properties.set('balloonContent', "Загрузка...");
            placemark.options.set('ajaxUrl', $this.data("ajax-url"));
            placemark.events.add('click', function (e) {
                if (e.get("target").options.get('ajaxUrl')) {
                    $.ajax({
                        url: e.get("target").options.get('ajaxUrl'),
                        type: "get",
                        beforeSend: function () {
                            placemark.properties.set('balloonContent', "Загрузка...");
                        },
                        success: function (response) {
                            placemark.properties.set('balloonContent', response);
                            placemark.options.set('isBalloonContentLoaded', true);
                            placemark.balloon.open();
                        }
                    });
                }
            });
        }
    } else if ($.trim($this.html())) {
        placemark.options.set('balloonContent', $this.html());
        placemark.balloon.open();
    }

    map.geoObjects_pl.push(placemark);
    $this.data("placemark", placemark);
}

$(function () {
    document_ready();
    window_onload();
});

function document_ready() {
    ts = (new Date()).getTime();
    $("body").addClass("ready");
    var ie = detectIE();
    if (ie) {
        $("body").addClass("msie-" + ie);
        if (ie < 12) {
            $("body").addClass("msie");
        } else {
            $("body").addClass("msedge");
        }
    }

    responsive_init();
    init_event_handlers();

    bind_widgets();
    // $(document).ajaxStop(function () {
    //     bind_widgets();
    // });

    te = (new Date()).getTime();
    console.log("On-Ready Load Time: ", te - ts);
}

function window_onload() {
    ts = (new Date()).getTime();
    $("body").addClass("win-loaded").removeClass("win-not-loaded");

    //responsive_update();

    te = (new Date()).getTime();
    console.log("Window Load Time: ", te - ts);
}

$(window).scroll(function () {
    if (typeof $("body").data("scrollval") === "undefined") $("body").data("scrollval", 0);

    scroll_animations();

    $("body").data("scrollval", $(window).scrollTop());
});

$(window).on("resize", function (e) {
    responsive_update();
    scroll_animations();
});

function init_event_handlers() {

    scroll_animations_init();
    fix_100vh_init();
    fix_touch_hovers();
    click_touch_init();
    textfield_init();
    resize_google_recaptcha_init();
    tabs_init();
    goto_init();
    expand_it_init();
    toggle_element_init();
    scroll_load_init();

    menu_overlay_init();
    header_popover_init();

    form_process_init();

    icard.init();

    $(document).on("click", ".js-sort", function (e) {
        var selector = $(this).attr('data-sort-selector');
        var data_attr = $(this).attr('data-sort-data-attr');
        var order = $(this).attr('data-sort-order');
        $(this).removeClass('sort-asc sort-desc').addClass('sort-' + order).attr('data-sort-order', (order == 'desc') ? 'asc' : 'desc').addClass('sort-active').siblings().removeClass('sort-active');
        tinysort(selector, {data: data_attr, order: order});
    });

    $(document).on("toggle-element-before", ".fcard__offers", function (e) {
        var $scroll = $(this).find('.fcard__offers-content');
        var $scroll_parent = $(window);
        var $scroll_popup = $(this).closest('.fancybox-slide');
        if ($scroll_popup) {
            $scroll_parent = $scroll_popup;
        }
        if ($(this).hasClass('active')) {
            var pos = $scroll_parent.scrollTop() - $scroll.offset().top;
            var wpos = $(this).offset().top + $(this).height() - $scroll_parent.scrollTop();
            $scroll.data('pos', pos);
            $scroll.data('wpos', wpos);
        } else {
            var pos = $scroll.scrollTop();
            $scroll.data('pos', pos);
        }
    });

    $(document).on("toggle-element", ".fcard__offers", function (e) {
        var $scroll = $(this).find('.fcard__offers-content');
        var pos = $scroll.data('pos');
        var wpos = $scroll.data('wpos');
        var $scroll_parent = $(window);
        var $scroll_popup = $(this).closest('.fancybox-slide');
        if ($scroll_popup) {
            $scroll_parent = $scroll_popup;
        }
        if (pos) {
            if ($(this).hasClass('active')) {
                $scroll_parent.scrollTop($scroll_parent.scrollTop() + pos);
            } else {
                $scroll_parent.scrollTop($(this).offset().top + $(this).height() - wpos);
                $scroll.scrollTop(pos);
            }
        }
    });

    $(document).on('click', '.js-goto', function () {
        var $this = $(this);
        $this.addClass('just-activated').closest("li").addClass("just-activated").siblings().removeClass("just-activated").find('.js-goto').removeClass("just-activated");
        setTimeout(function () {
            $this.removeClass('just-activated').closest("li").removeClass("just-activated");
        }, 1000);
    });


    $(document).on('cart-updated', function (e, noupdate) {
        if (!noupdate) {
            dynamic_data_update(null, 'CART');
        }
        var $o = $('.fbar').first();
        fbar_reload($o, {
            url: $o.data('url'),
            method: $o.data('method'),
            //data: $o.closest('form').serialize()
        });
    });
    $(document).trigger('cart-updated', [true]);


    $(document).on('favorites-updated', function (e) {
        dynamic_data_update(null, 'FAVORITE');
        var $page_favorites = $('.js-icards-favorites');
        if ($page_favorites.length) {
            $page_favorites_items = $page_favorites.find('.js-icard');
            if (!$page_favorites_items.length) {
                location.href = $page_favorites.data('location-if-empty');
            }
        }
    });


    fbar_init();

    dtcheckbox_init();

    contacts_init();


    $(document).on('click', '.js-image-zoom-map-lazy .lhp_miv_content_holder img', function (e) {
        console.log('left: ' + (e.offsetX / this.width * 100).toFixed(2) + '%; top: ' + (e.offsetY / this.height * 100).toFixed(2) + '%;');
    });

    $(document).on('lazy-loaded', '.js-image-zoom-map-lazy > img', function (e) {
        image_zoom_map_init($(this).parent());
    });

    $(document).on('click', '.js-tour-map-tooltip-open', function (e) {
        e.preventDefault();
        var $tooltip = $($(this).attr('href')).find('.tooltip');
        if ($tooltip.length) {
            $(this).addClass('active');
            $tooltip.trigger('click');
            $(this).closest('.expand-it-wrapper').find('.expand-it.active').trigger('click');
        }
    });

    $(document).on('click tap', '.tm-marker .tooltip', function (e) {
        e.preventDefault();
        var $this = $(this);
        // if (!$this.attr('data-title')) {
        //     var $c = $($this.attr('data-tooltip-selector')).clone();
        //     $c.find('[data-lazy-src]').each(function(){
        //         $(this).addClass('lazy-loaded').attr('src', $(this).attr('data-lazy-src'));
        //         $(this).removeAttr('data-lazy-src');
        //     });
        //     $this.attr('data-title', $c.html());
        // }
        var $marker = $this.closest('.tm-marker');
        var id = $marker.attr('id');
        $('.js-tour-map-tooltip-open[href="#' + id + '"]').addClass('active');
        var $lhp = $marker.closest('.js-image-zoom-map-inited');
        var lhp_state = $lhp.lhpMegaImgViewer('getCurrentState');
        var w = $lhp.width();
        var h = $lhp.height();
        var l = parseInt($marker.position().left, 10);
        var t = parseInt($marker.position().top, 10);
        var mobile_t = parseInt(t - h / 2 + 80, 10);
        var not_in_viewport =
            l < lhp_state.xPosInCenter - w / 2 + 20 ||
            l > lhp_state.xPosInCenter + w / 2 ||
            t < lhp_state.yPosInCenter - h / 2 + 30 ||
            t > lhp_state.yPosInCenter + h / 2;
        if (window.matchMedia("(max-width: 640px)").matches) {
            if (lhp_state.xPosInCenter != l || lhp_state.yPosInCenter != mobile_t) {
                $lhp.lhpMegaImgViewer('setPosition', l, mobile_t, 1, false);
                delay(function () {
                    tour_map_tooltip_trigger($this);
                }, 400);
            } else {
                tour_map_tooltip_trigger($this);
            }
        } else if (not_in_viewport) {
            if (lhp_state.xPosInCenter != l || lhp_state.yPosInCenter != t) {
                $lhp.lhpMegaImgViewer('setPosition', l, t, 1, false);
                delay(function () {
                    tour_map_tooltip_trigger($this);
                }, 400);
            } else {
                tour_map_tooltip_trigger($this);
            }
        } else {
            tour_map_tooltip_trigger($this);
        }
    });

    function tour_map_tooltip_trigger($this) {
        $this.tooltipster($this.hasClass('tooltip-active') ? 'close' : 'open');
    }

    if ($('.js-tour-map-tooltip-open').length) {
        $.tooltipster.on('init', function (e) {
            var $marker = $(e.origin).closest('.tm-marker');
            if ($marker.length) {
                e.instance.option('trigger', 'custom');
                e.instance.option('triggerOpen', {});
                //e.instance.option('triggerClose', {});
                e.instance.option('functionPosition', null);
                //e.instance.option('trackTooltip', true);
                // e.instance.option('functionPosition', function(instance, helper, position) {
                //     var left_coord = position.coord.left;
                //     var top_coord = position.coord.top;
                //     var $clone = $(helper.tooltipClone).find('.tooltipster-box');
                //     position.coord = {
                //         left: left_coord,
                //         top: top_coord
                //     };
                //     console.log('functionPosition');
                //     console.log($clone.outerHeight());
                //
                //     return position;
                // });

                if (window.matchMedia("(max-width: 640px)").matches) {
                    e.instance.option('side', ['top', 'bottom']);
                } else {
                    e.instance.option('side', 'top');
                }

                // e.instance.on('before', function(e){
                //     var origin = e.origin;
                //     var instance = e.instance;
                //     var $marker = $(origin).closest('.tm-marker');
                // });
                // e.instance.on('position', function(e){
                //     var pos = e.position;
                //     var last_bottom = pos.coord.top + pos.size.height;
                //     //pos.size.height = 'auto';
                //     pos.size.height = 'auto';
                //     e.edit(pos);
                //     setTimeout(function(){
                //         pos.coord.top = last_bottom - e.tooltip.getBoundingClientRect().height;
                //         console.log(e, $(e.tooltip).find('.tooltipster-content').is(':visible'), e.tooltip.getBoundingClientRect());//$(e.helper.tooltip).find('.tooltipster-content > div').outerHeight());
                //         e.edit(pos);
                //     }, 0);
                // });
                e.instance.on('after', function (e) {
                    var $marker = $(e.origin).closest('.tm-marker');
                    var id = $marker.attr('id');
                    $('.js-tour-map-tooltip-open[href="#' + id + '"]').removeClass('active');
                });
            }
        });
    }

}

function contacts_init() {

    $(document).on('tabs-show', '.js-contacts-tab-pane', function (e) {
        var $map = $('.js-contacts-map');
        if ($(this).attr('data-zoom')) {
            $map.attr('data-zoom', $(this).attr('data-zoom'));
        }
        if ($(this).attr('data-point')) {
            $map.attr('data-point', $(this).attr('data-point'));
            $map.attr('data-center', $(this).attr('data-point'));
        }
        if ($(this).attr('data-center')) {
            $map.attr('data-center', $(this).attr('data-center'));
        }
        $map.removeClass('map--inited');
        var map = $map.data("map");
        if (map) {
            map.destroy();
            $map.empty();
        }
        map_init($map);
    });

    $(document).on('popover-open ajax-success', '.header__popover', function (e) {
        var $map = $(this).find('.js-contacts-map');
        contacts_map_resize($map);
    });

    $(window).on('resize', function (e) {
        var $map = $('.header__popover.active .js-contacts-map');
        contacts_map_resize($map);
    });

    function contacts_map_resize($map) {
        if ($map.length) {
            var h = window.innerHeight - ($map.offset().top - $(window).scrollTop());
            $map.css('height', h).css('max-height', h);
            var map = $map.data('map');
            if (map) {
                setTimeout(function () {
                    map.container.fitToViewport();
                }, 0);
            }
        }
    }
}

function dtcheckbox_init() {

    $(document).on('click focus', '.js-dtcheckbox-trigger', function (e) {
        var $o = $(this).siblings('.js-dtcheckbox-dropdown');
        if (!$o.hasClass('disabled') && !$(this).hasClass('disabled')) {
            $(".js-dtcheckbox-dropdown.active").removeClass('active').siblings('.js-dtcheckbox-trigger').not($(this)).removeClass('active');
            $(this).toggleClass('active');
            $o.toggleClass('active', $(this).hasClass('active'));
            // if ($(this).hasClass('active')) {
            //     var $o_c = $o.clone();
            //     var $s = $o.closest('.js-tcheckboxes-scroll');
            //     $o.data('clone', $o_c);
            //     $o_c.css('left', $s[0].offsetLeft + $o[0].offsetLeft);
            //     $o_c.css('right', 'auto');
            //     $o_c.css('top', $o[0].offsetTop);
            //     $o_c.css('width', $o.width());
            //     $('.js-dtcheckbox-container-place').empty().append($o_c);
            // }
        }
    });

    $(document).on('mousedown', '*', function (e) {
        var $o = $(e.target).closest('.js-dtcheckbox-dropdown, .js-dtcheckbox-trigger');
        if (!$o.length) {
            $(".js-dtcheckbox-dropdown.active").removeClass('active').siblings('.js-dtcheckbox-trigger').removeClass('active');
        }
    });

    $(document).on('change', '.js-tcheckboxes input', function (e) {
        if ($(this).prop('checked')) {
            $(this).closest('.js-tcheckboxes').find('.js-dtcheckbox-dropdown').removeClass('checked').siblings('.js-dtcheckbox-trigger').removeClass('checked');
        }
        $('.js-dtcheckbox-trigger.tooltipstered').tooltipster("close");
    });

    $(document).on('change tcheckbox-update', '.js-dtcheckbox-dropdown input', function (e) {
        var $dd = $(this).closest('.js-dtcheckbox-dropdown');
        if ($(this).prop('checked')) {
            $dd.addClass('checked').siblings('.js-dtcheckbox-trigger').addClass('checked');
        }
        if ($(this).prop('type') == 'radio') {
            $dd.removeClass('active').siblings('.js-dtcheckbox-trigger').removeClass('active');
        }
        var $this = $(this);
        var $tooltip = $this.closest(".tooltipster-base");
        if ($tooltip.length) {
            $.each($.tooltipster.instances(), function (k, v) {
                if ($tooltip.attr("id") == v.__namespace) {
                    var $origin_dd = v._$origin.next('.js-dtcheckbox-dropdown');
                    $origin_dd.find('input[name="' + $this.attr('name') + '"][value="' + $this.attr('value') + '"]').prop('checked', $this.prop('checked')).trigger('change');
                    if ($this.prop('checked')) {
                        $origin_dd.addClass('checked').siblings('.js-dtcheckbox-trigger').addClass('checked');
                    }
                    if ($this.prop('type') == 'radio') {
                        $origin_dd.removeClass('active').siblings('.js-dtcheckbox-trigger').removeClass('active');
                    }
                    v._$origin.tooltipster("close");
                    return false;
                }
            });
        }
    });

    $.tooltipster.on('init', function (e) {
        if ($(e.origin).hasClass('js-dtcheckbox-trigger')) {

            e.instance.on('created', function (e) {
                var $tooltip = $(e.instance.elementTooltip());
                var $origin_dd = $(e.origin).next('.js-dtcheckbox-dropdown');
                e.instance.content($origin_dd.clone(true));
                // var $origin_dd_checked = $origin_dd.find('input:checked');
                // $tooltip.find('input').prop('checked', false).trigger('change-pseudo');
                // if ($origin_dd_checked.length) {
                //     var $tooltip_dd = $tooltip.find('input[name="'+$origin_dd_checked.attr('name')+'"][value="'+$origin_dd_checked.attr('value')+'"]').prop('checked', $origin_dd_checked.prop('checked')).trigger('change-pseudo');
                // }
            });
        }
    });

}

function tcheckbox_update() {
    $('.js-tcheckboxes input').trigger('tcheckbox-update');
}

function tcheckbox_scroll_init() {


    if (!$("body").hasClass("js-tcheckboxes-scroll-inited-globally")) {

        $(window).on("resize orientationchange", function () {
            $(".js-tcheckboxes-scroll").trigger("scroll.emulate");
        });

        $("body").addClass("js-tcheckboxes-scroll-inited-globally")
    }


    $(".js-tcheckboxes-scroll").not(".js-tcheckboxes-scroll-inited").on("scroll scroll.emulate", function (e) {
        var $c = $(this).closest(".js-tcheckboxes");
        if ($(this).scrollLeft() <= 0) {
            $c.addClass("scroll-in-start");
        } else {
            $c.removeClass("scroll-in-start");
        }
        if ($(this).scrollLeft() + $(this).outerWidth() >= $(this)[0].scrollWidth - 1) {
            $c.addClass("scroll-in-end");
        } else {
            $c.removeClass("scroll-in-end");
        }
    }).addClass("js-tcheckboxes-scroll-inited").trigger("scroll.emulate").closest(".js-tcheckboxes").addClass('js-tcheckboxes-inited');

    $(".tcheckbox-wrapper").not(".js-tcheckboxes-scroll-inited").on("js-tcheckboxes-scroll-center", function (e, speed) {
        var $c = $(this).closest(".js-tcheckboxes");
        var $s = $(this).closest(".js-tcheckboxes-scroll");
        $s.stop(true, true).animate({scrollLeft: $(this)[0].offsetLeft - $c.width() / 2 + $(this).outerWidth() / 2}, (typeof speed !== 'undefined') ? speed : 300);
    }).addClass("js-tcheckboxes-scroll-inited");

    $(".js-tcheckboxes-scroll .tcheckbox.checked").closest('.tcheckbox-wrapper').trigger("js-tcheckboxes-scroll-center", 0);
}


function bind_widgets(context) {
    dynamic_data_update(context);
    loader_init();
    checkbox_plain_init(context);
    textfield_autosize_init();
    img_to_bg(null, context);
    slider_init();
    images_hover_slider();
    nouislider_init();
    input_spin_init();
    filter_init();
    ddbox_init(context);
    scrollbar_init();
    validate_init();
    fancybox_init(context);
    lazy_init(null, context);
    mask_init(context);
    keyfilter_init(context);
    tooltip_init();
    copy_init();
    tcheckbox_update();
    tcheckbox_scroll_init();
    map_load();
    fileupload_init();
    image_zoom_map_init(null, context);
}


/*
* Filter Init and Events
* */

function filter_init() {

    if (!$("body").hasClass("js-filter-inited-globally")) {

        filter_check_state_initial();

        $(document).on("change range-changed", ".js-filter :input", function (e) {
            var $this = $(this);
            if ($this.closest('.ddbox__textfield').length) {
                return true;
            }
            delay_filter_apply_action(function () {
                filter_apply($this);
            }, 50);
        });

        $(document).on("click", ".ddbox__textfield :input", function (e) {
            e.stopPropagation();
        });

        $(document).on("keyup", ".ddbox__textfield :input", function (e) {
            var $this = $(this);
            var $ddbox = $this.closest('.ddbox');
            var val = $this.val();
            if (val && val.length > 1) {
                delay(function () {
                    ddbox_textfield_query($this);
                }, 200);
            } else {
                // delay(function(){
                //     ddbox_close($ddbox);
                //     $ddbox.find('.ddbox__dropdown').empty();
                //     $ddbox.addClass('opened-blocked');
                // }, 50);
            }
        });

        $(document).on("ddbox-select", ".js-filter .js-ddbox-query", function (e) {
            $(this).find('.js-ddbox-selection').append('<span class="link--ib link--dotted">Изменить</span>');
        });

        $(document).on("ddbox-open", ".js-filter .js-ddbox", function (e) {
            var $o_b = $(this).not('.opened-blocked');
            if ($o_b.length) {
                $('html').addClass('filter-ddbox-is-opened');
            }
        });

        $(document).on("ddbox-close", ".js-filter .js-ddbox", function (e) {
            var $o_b = $(this).not('.opened-blocked');
            if ($o_b.length) {
                $('html').removeClass('filter-ddbox-is-opened');
            }
        });

        $(document).on("click", ".js-ddbox-open-blocked", function (e) {
            e.preventDefault();
            var $ddbox = $(this).closest('.ddbox');
            $ddbox.removeClass('opened-blocked');
            ddbox_open($ddbox);
            $ddbox.find('.ddbox__textfield :input').focus();
        });

        $(document).on("ddbox-select ddbox-deselect change", ".js-filter .js-ddbox, .js-filter :input", function (e) {
            var $this = $(this);
            delay_filter_reset_action(function () {
                var $filter = $this.closest('.js-filter-section');
                var $filter_group = $filter.find('.js-filter-group');
                $filter_group.each(function () {
                    var count = $(this).find('.js-ddbox:not(.disabled).selected').length;
                    $(this).find('.js-filter-group-reset').toggleClass('active', !!count);
                });
                var count = $filter.find('.js-ddbox:not(.disabled).selected').length;
                var count_others = $filter.find('.js-filter-not-ddbox').find(':input:not(disabled):checked').length;
                $filter.closest('.js-filter-section-wrapper').find('.js-filter-reset').toggleClass('active', !!(count + count_others));
            }, 5);
        });

        $(document).on("mouseenter", ".js-filter .checkbox .count", function (e) {
            var $this = $(this);
            var value = parseInt($(this).text(), 10);
            if (value) {
                $this.attr('data-title', 'Предложений станет <span class="font-semibold">' + ((value > 0) ? 'больше' : 'меньше') + '</span><br> на указанное число');
                tooltip_init($this, null, {"interactive": false, "trigger": "custom"});
                $this.tooltipster('open');
            }
        });

        $(document).on("mouseleave", ".js-filter .checkbox .count", function (e) {
            $(this).tooltipster('close');
        });

        // Сброс большей части фильтров
        $(document).on("click", ".js-filter-reset", function (e) {
            var $wrapper = $(this).closest('.js-filter-section-wrapper');
            var inputs = $(this).attr('data-ddbox-reset-inputs');
            var $o = $(inputs);
            if (!inputs || !$o.length) {
                var $o = $wrapper.find('.js-filter-section-inputs');
            }
            //Cookies.set('filter_active', 0); // Можно скрыть, допфильтры выставив куку в ноль
            input_reset($o);
            ddbox_reset($o.find('.js-ddbox'));
        });

        // Сброс группы фильтров
        $(document).on("click", ".js-filter-group-reset", function (e) {
            var $o = $(this).closest('.js-filter-group');
            input_reset($o);
            ddbox_reset($o.find('.js-ddbox'));
        });

        // Сброс нужных инпутов при изменении текущего
        $(document).on("change", ".js-ddbox[data-ddbox-reset-inputs] .ddbox__dropdown :input", function (e) {
            var $ddbox = $(this).closest('.js-ddbox');
            var $o = $($ddbox.attr('data-ddbox-reset-inputs'));
            if ($o.length && !$('body').data('ddbox-lock-reset-inputs')) {
                $('body').data('ddbox-lock-reset-inputs', true);
                $('body').data('ddbox-query-lock-resets', true);
                delay_filter_reset_inputs(function () {
                    input_reset($o);
                    ddbox_reset($o.find('.js-ddbox'));
                    $('body').removeData('ddbox-lock-reset-inputs');
                    $('body').removeData('ddbox-query-lock-resets');
                }, 5);
            }
        });

        // Отображение выбранного значения при изменении ползунков
        $(document).on("range-changed", ".js-ddbox :input", function (e) {
            var $this = $(this);
            var $ddbox = $(this).closest('.ddbox');
            ddbox_select($ddbox);
        });

        // Сброс инпута с поиском при выборе любого другого фильтра
        $(document).on("change", ".js-filter :input", function (e) {
            if (!$(this).closest('.js-ddbox-query').length) {
                var $o = $('.js-ddbox-query');
                if ($o.length && !$('body').data('ddbox-query-lock-resets')) {
                    $('body').data('ddbox-lock-reset-inputs', true);
                    setTimeout(function () {
                        input_reset($o);
                        ddbox_reset($o);
                        $('body').removeData('ddbox-lock-reset-inputs');
                    }, 5);
                }
            }
        });


        $(document).on("touchmove", ".filter__popup", function (e) {
            if (window.matchMedia("(max-width: 640px)").matches) {
                e.stopPropagation();
            }
        });

        $(document).on("touchmove", ".filter .ddbox.opened", function (e) {
            if (window.matchMedia("(max-width: 640px)").matches) {
                e.stopPropagation();
            }
        });

        $(document).on("expand-it-open", ".filter__popup .filter__section-content", function (e) {
            //$("html").addClass('filter-active');
            filter_check_state();
        });

        $(document).on("expand-it-close", ".filter__popup .filter__section-content", function (e) {
            //$("html").removeClass('filter-active');
            filter_check_state();
        });

        $(document).on("click", ".js-filter-show-results", function (e) {
            e.preventDefault();
            var $o = $($(this).data("expand-selector"));
            if ($o.hasClass('active')) {
                expand_it_trigger($(this), $o, false);
            }
            $("html").removeClass('ddbox-is-opened');
        });

        $("body").addClass("js-filter-inited-globally")
    }
}


/*
* Filter request logic
* */

var delay_filter_reset_action = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();
var delay_filter_reset_inputs = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();
var delay_filter_apply_action = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();
var delay_filter_complete = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();
var delay_filter_success = (function () {
    var timer = 0;
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();
var filter_response_delay = 0;

function filter_apply($input) {

    var $count = $input.closest('.checkbox').find('.count');
    var count_val = parseInt($count.text(), 10) * -1;
    if (count_val > 0) {
        count_val = "+" + count_val;
    }
    $count.html(count_val);

    var $form = $input.closest('.js-filter');
    var url = $form.attr("href");
    var method = "get";
    var data = null;
    if ($form.is("form")) {
        data = $form.serialize();

        url = $form.attr("action");
        method = $form.attr("method");
    }
    if ($form.attr("data-action-url")) {
        url = $form.attr("data-action-url");
    }
    if ($form.attr("data-action-method")) {
        method = $form.attr("data-action-method");
    }

    if ($form.data('xhr')) {
        var xhr = $form.data('xhr');
        if (xhr && xhr.readyState != 4) {
            xhr.abort();
        }
    }
    var xhr = $.ajax({
        url: url,
        type: method,
        data: data,
        dataType: 'json',
        cache: false,
        contentType: false,
        processData: false,
        beforeSend: function () {
            var $counts_with_loader = $form.find('.ddbox.opened, .js-filter-not-ddbox').find('.checkbox .count').not($count);
            loader_remove($counts_with_loader);
            loader_add($counts_with_loader);
            loader_remove($('.js-filter-results, .js-filter-total-value, .js-filter-w-loader'));
            loader_add($('.js-filter-results, .js-filter-total-value, .js-filter-w-loader'));
        },
        complete: function (response) {
            delay_filter_complete(function () {
                loader_remove($('.js-filter-results, .js-filter-total-value, .js-filter-w-loader'));
                var $counts_with_loader = $form.find('.ddbox.opened, .js-filter-not-ddbox').find('.checkbox .count').not($count);
                loader_remove($counts_with_loader);
            }, filter_response_delay);
            $form.trigger("ajax-complete");
        },
        success: function (response) {
            if ($('.js-section').length === 1 && $('.js-section').data('removePages').toString() === 'true') {
                $('.js-pagination').remove();
                $('.js-more').remove();
                $('.js-section-text').remove();
            }
            delay_filter_success(function () {
                var is_mobile = window.matchMedia("(max-width: 640px)").matches;

                if (response.page_url) {
                    history.replaceState({
                        time: (new Date()).getTime()
                    }, null, response.page_url);
                }
                if (response.results_html) {
                    let $results_html = $(response.results_html).find('.js-filter-results').html();
                    let $breadcrumb = $(response.results_html).find('.js-breadcrumb-to-replace');
                    let $more_button = $(response.results_html).find('.js-more');
                    let $pagination = $(response.results_html).find('.js-pagination');
                    let $text = $(response.results_html).find('.js-section-text');
                    if ($breadcrumb.length) {
                        icons_init($breadcrumb.find('svg.icon'));
                        $('.js-breadcrumb-to-replace').replaceWith($breadcrumb.clone());
                    } else {
                        $('.js-breadcrumb-to-replace').addClass('hidden');
                    }
                    $('.js-filter-results').empty().append($results_html);
                    if ($more_button.length) {
                        $('.js-filter-results').parent().append($more_button);
                    }
                    if ($pagination.length) {
                        $('.js-filter-results').parent().append($pagination);
                    }
                    if ($text.length) {
                        $('.js-filter-results').parent().append($text);
                    }
                    $breadcrumb.remove();
                }
                if (response.filter_html) {
                    var $ddbox_opened = $('.js-filter .ddbox.opened').first();
                    var ddbox_opened_id = $ddbox_opened.attr('id');
                    var ddbox_opened_scroll_pos = $ddbox_opened.find('.ddbox__dropdown-inner').scrollTop();
                    var filter_content_scroll_pos = $form.find('.filter__section-content').scrollTop();

                    let filter_html = $(response.filter_html).find('.js-filter');

                    $('.js-filter').replaceWith(filter_html);
                }
                bind_widgets();
                responsive_update(true);
                if (response.filter_html) {

                    var $ddbox_to_open = $("#" + ddbox_opened_id);
                    if (ddbox_opened_id && !$ddbox_to_open.closest('.js-filter-section').length && is_mobile) { // скрываем доп.фильтры, если открыт дропдаун вне доп.фильтров (на мобильных)
                        var $exp = $('.js-filter-section');
                        if ($exp.hasClass('active')) {
                            expand_it_trigger($('.js-filter-show-results'), $exp, false);
                        }
                    }

                    filter_check_state();

                    if ($input.prop('type') != 'radio' || is_mobile) {
                        $ddbox_to_open.find('.ddbox__dropdown-inner').scrollTop(ddbox_opened_scroll_pos);
                        $ddbox_to_open.removeClass('opened-blocked');
                        ddbox_open($ddbox_to_open);
                    }
                    $('.filter__section-content').scrollTop(filter_content_scroll_pos);
                }
                $form.trigger("ajax-success", response);
            }, filter_response_delay);
        },
        error: function (jqXHR) {
            $form.trigger("ajax-error");
        }
    });
    $form.data('xhr', xhr);
}

function filter_check_state() {
    var is_active = $(".js-filter-section").hasClass('active');
    $("html").toggleClass('filter-active', is_active);
    Cookies.set('filter_active', +is_active);
}

function filter_check_state_initial() {
    var is_mobile = window.matchMedia("(max-width: 640px)").matches;
    var is_active = $("html").hasClass('filter-active');
    if (is_mobile && !is_active) {
        var $exp = $('.js-filter-section');
        if ($exp.hasClass('active')) {
            expand_it_trigger($('.js-filter-show-results'), $exp, false);
        }
    }
}


/*
* icard logic
* */

var icard = {
    init: function () {

        icard.offers.init();
        icard.actions.init();

    },
    offers: {
        init: function () {

            $(document).on('click', '.js-icard-offer-change', function (e) {
                var $icard = $(this).closest('.js-icard');
                if (!$(this).hasClass('loading')) {
                    icard.offers.load($icard, $(this).data('action'));
                }
            });

        },
        load: function ($icard, direction) {

            if ($icard.hasClass('icard-offers-loaded')) {
                icard.offers.change($icard, direction);
            } else {
                var url = location.href;
                var method = "get";
                var data = null;
                if ($icard.attr("data-offers-url")) {
                    url = $icard.attr("data-offers-url");
                }
                if ($icard.attr("data-offers-method")) {
                    method = $icard.attr("data-offers-method");
                }

                if ($icard.data('offers-xhr')) {
                    var xhr = $icard.data('offers-xhr');
                    if (xhr && xhr.readyState != 4) {
                        xhr.abort();
                    }
                }
                var $images = $icard.find('.js-icard-offer-images');
                var $params = $icard.find('.js-icard-offer-params');
                var $actions = $icard.find('.js-icard-offer-actions');
                var $loader_areas = $icard.find('.js-icard-offer-change')
                    .add($images.parent())
                    .add($params.parent())
                    .add($actions.parent());
                var xhr = $.ajax({
                    url: url,
                    type: method,
                    data: data,
                    dataType: 'json',
                    cache: false,
                    contentType: false,
                    processData: false,
                    beforeSend: function () {
                        loader_remove($loader_areas);
                        loader_add($loader_areas);
                    },
                    complete: function (response) {
                        loader_remove($loader_areas);
                        $icard.trigger("ajax-complete");
                    },
                    success: function (response) {
                        $icard.addClass('icard-offers-loaded');
                        $images.append(response.html.images);
                        $params.append(response.html.params);
                        $actions.append(response.html.actions);
                        bind_widgets($icard);
                        $icard.find('.js-icard-spinner').trigger('changing.spinner', [true]);
                        $icard[0].offsetHeight;
                        icard.offers.change($icard, direction);
                        $icard.trigger("ajax-success", response);
                    },
                    error: function (jqXHR) {
                        $icard.trigger("ajax-error");
                    }
                });
                $icard.data('offers-xhr', xhr);
            }
        },
        change: function ($icard, direction) {
            var $images = $icard.find('.js-icard-offer-images').children();
            var $params = $icard.find('.js-icard-offer-params').children();
            var $actions = $icard.find('.js-icard-offer-actions').children();
            var $pager = $icard.find('.js-icard-offer-number');
            var count = $images.length;
            var index = $images.filter('.active').prevAll().length;
            if (count) {
                if (direction == 'prev') {
                    index--;
                } else {
                    index++;
                }
                if (index > count - 1) {
                    index = 0;
                } else if (index < 0) {
                    index = count - 1;
                }
                $icard.removeClass('icard-offer-dir-prev icard-offer-dir-next').addClass('icard-offer-dir-' + direction);
                $.each([$images, $params, $actions], function () {
                    $(this).removeClass('prev next').eq(index).addClass('next').addClass('active').siblings('.active').addClass('prev').removeClass('active');
                });
                $icard.attr('data-offer-index', index);
                $pager.text(index + 1);
            }
        }
    },
    actions: {
        init: function () {

            $(document).on("click", ".js-favorites-toggle", function (e) {
                e.preventDefault();
                var $this = $(this);
                $this.toggleClass('active');
                var $icard = $this.closest('.js-icard');
                var $actions = $this.closest('[data-cart-data]');

                if ($this.closest('.js-favorites-popover, .js-favorites-to-remove').length) {
                    $icard.animate({opacity: 0, height: 0}, 300, function () {
                        favorites_item_apply($this, {
                            data: $.extend($actions.data('cart-data'), {
                                quantity: +$this.hasClass('active'),
                            }),
                            url: $('body').data('favorites-url')
                        });
                        $(this).remove();
                    });

                    var $actions_all = $('[data-cart-data]').filter('[data-id="' + $actions.attr('data-id') + '"]');
                    $actions_all.each(function () {
                        var $icard = $(this).closest('.js-icard');
                        if ($(this).closest('.js-favorites-popover, .js-favorites-to-remove').length) {
                            $icard.animate({opacity: 0, height: 0}, 300, function () {
                                $(this).remove();
                            });
                        }
                    });
                } else {
                    favorites_item_apply($this, {
                        data: $.extend($actions.data('cart-data'), {
                            quantity: +$(this).hasClass('active'),
                        }),
                        url: $('body').data('favorites-url')
                    });
                }
            });

            $(document).on("click", ".js-cart-add", function (e) {
                e.preventDefault();
                icard.actions.cart_add($(this));
            });

            $(document).on("click", ".js-cart-remove", function (e, dont_change) {
                e.preventDefault();
                icard.actions.cart_remove($(this), dont_change);
            });

            $(document).on('changing.spinner', '.js-icard-spinner', function (e, val) {
                var $icard = $(this).closest('.js-icard');
                icard.actions.value_change($icard, $(this), val);
            });
        },
        cart_add: function ($this) {
            if ($this.hasClass('success')) {
                return false;
            }
            var $actions = $this.closest('[data-cart-data]');
            var $spinner = $actions.find('.js-icard-spinner');
            var label = $this.attr('data-label');
            $this.addClass('success');
            $cbtn_title = $this.find('.btn__title').html(label);
            $this.nextAll('.js-cart-remove').removeClass('hidden');
            cart_item_apply({
                data: $.extend($actions.data('cart-data'), {
                    quantity: $spinner.val(),
                }),
                url: $('body').data('cart-url')
            });
        },
        cart_remove: function ($this, dont_change) {
            var $icard = $this.closest('.js-icard');
            if ($this.closest('.js-cart-popover, .js-icard-to-remove').length) {
                $icard.animate({opacity: 0, height: 0}, 300, function () {
                    _cart_remove($this, $icard);
                    $(this).remove();
                });
            } else {
                _cart_remove($this, $icard, dont_change);
            }

            function _cart_remove($this, $icard, dont_change) {
                var $actions = $this.closest('[data-cart-data]');
                var $actions_all = $('[data-cart-data]').find('[data-id="' + $actions.attr('data-id') + '"]');
                var $spinner = $actions.find('.js-icard-spinner');
                if (!dont_change) {
                    $this.data('ignore_remove_click', true);
                    var value = 0;
                    $spinner.val(value).trigger('change');
                    icard.actions.value_change($icard, $spinner);
                }
                $actions_all.each(function () {
                    icard.actions.update($(this));
                });
                icard.actions.value_change_delay(function () {
                    cart_item_apply({
                        data: $.extend($actions.data('cart-data'), {
                            quantity: $spinner.val(),
                        }),
                        url: $('body').data('cart-url')
                    });
                }, 200);
            }
        },
        value_change: function ($icard, $input, no_ajax) {
            var offer_index = $icard.attr('data-offer-index');
            if (!offer_index) {
                offer_index = 0;
            }
            var $actions = $icard.find('.js-icard-offer-actions').children().eq(offer_index);
            var $remove_action = $actions.find('.js-cart-remove');
            var $input = $actions.find('.js-icard-spinner');
            var value = $input.val();
            var selected = parseInt(value, 10) > 0;
            var in_cart = !$remove_action.hasClass('hidden');
            icard.actions.update($actions, !in_cart);
            if (!selected && $input.closest('.js-cart-popover, .js-icard-to-remove').length) {
                $icard.animate({opacity: 0, height: 0}, 300, function () {
                    $(this).remove();
                });
            }
            if (in_cart && no_ajax !== true) {
                icard.actions.value_change_delay(function () {
                    cart_item_apply({
                        data: $.extend($actions.data('cart-data'), {
                            quantity: value,
                        }),
                        url: $('body').data('cart-url')
                    });
                }, 200);
            }
        },
        value_change_delay: (function () {
            var timer = 0;
            return function (callback, ms) {
                clearTimeout(timer);
                timer = setTimeout(callback, ms);
            };
        })(),
        update: function ($actions, before_add) {
            var $icard = $actions.closest('.js-icard');
            var $input = $actions.find('.js-icard-spinner');
            var id = $actions.attr('data-id');
            var value = $input.val();
            var selected = parseInt(value, 10) > 0;

            var $params = $icard.find('.js-icard-offer-params').find('[data-id="' + id + '"]');

            var $cbtn = $actions.find('.js-cart-add');
            var label = $cbtn.attr('data-label');
            var label_empty = $cbtn.attr('data-label-empty');
            $cbtn.prop('disabled', !selected);
            if (!before_add) {
                $cbtn.toggleClass('success', selected);
                $cbtn.find('.btn__title').html(selected ? label : label_empty);
                $actions.find('.js-cart-remove').toggleClass('hidden', !selected);
            }
            $input.toggleClass('inactive', !selected).toggleClass('filled', selected);

            var use_discounts = $icard.hasClass('js-icard-use-discounts');
            var $price = $actions.add($params).find('.js-icard-price');
            var price = parseInt($price.first().text().replace(/\s/, ''), 10);
            var $price_discount = $actions.add($params).find('.js-icard-price-discount');
            var $price_wrapper = $actions.add($params).find('.js-icard-price-wrapper');
            var $price_discount_wrapper = $actions.add($params).find('.js-icard-price-discount-wrapper');
            var $total = $actions.find('.js-icard-price-total');
            $total.parent().toggleClass('inactive', !selected);
            $total.text(wNumb({
                decimals: 0,
                thousand: ' '
            }).to(price * value));
            if (obDynamicData['CART'][id]) {
                var price = parseInt(obDynamicData['CART'][id]['price'], 10);
                var price_discount = parseInt(obDynamicData['CART'][id]['price_discount'], 10);
                var total_price = parseInt(obDynamicData['CART'][id]['summ'], 10);
                var total_price_discount = parseInt(obDynamicData['CART'][id]['summ_discount'], 10);
                var price_set = price;
                if (use_discounts && !!total_price && !!total_price_discount) {
                    var price_discount_set = price_discount;
                    var total_price_set = total_price_discount;
                } else {
                    var price_discount_set = price;
                    var total_price_set = total_price;
                }
                $price_discount.text(wNumb({
                    decimals: 0,
                    thousand: ' '
                }).to(price_discount_set));
                $price.text(wNumb({
                    decimals: 0,
                    thousand: ' '
                }).to(price_set));
                $total.text(wNumb({
                    decimals: 0,
                    thousand: ' '
                }).to(total_price_set));
            }
            var show_discount = use_discounts && !!total_price && !!total_price_discount && total_price !== total_price_discount;
            if (!selected) {
                $total.text(0);
                show_discount = false;
            }
            $price_wrapper.toggleClass('hidden', show_discount);
            $price_discount_wrapper.toggleClass('hidden', !show_discount);

            if (!selected && $actions.closest('.js-cart-popover, .js-icard-to-remove').length) {
                setTimeout(function () {
                    $icard.animate({opacity: 0, height: 0}, 300, function () {
                        $(this).remove();
                    });
                }, 100);
            }
        }
    }
};


/*

Menu Overlay Init

 */

function menu_overlay_init() {

    $(document).on("click", ".js-menu-switcher", function (e) {
        e.preventDefault();
        $("html").toggleClass("menu-overlay-active");
    });

    $(document).on("click", ".js-menu-hide", function (e) {
        e.preventDefault();
        $("html").removeClass("menu-overlay-active");
    });

    $(document).on("click", "*", function (e) {
        if (!$(e.target).closest(".menu-overlay, .js-menu-switcher").length) {
            $("html").removeClass("menu-overlay-active");
        }
    });

    $(document).on("touchmove", ".menu-overlay, .menu-overlay-bg", function (e) {
        e.stopPropagation();
    });

    $(document).on("click", ".menu-overlay .hmenu .expand-it-pseudo", function (e) {
        var $o = $(this);
        var $exp = $o.closest(".expand-it-wrapper").find(".expand-it-container").eq(0);
        //$o.toggleClass("focused");
        e.preventDefault();
        expand_it_trigger($o, $exp, false);
    });
}


/*

Hide/Show header popovers

 */

function header_popover_init() {
    $(document).on("click", ".js-toggle-popover", function (e) {
        e.preventDefault();
        var $this = $(this);
        var $o = $();
        if ($this.attr("href") && $this.attr("href").length > 1 && $this.attr("href")[0] == '#') {
            $o = $($this.attr("href"));
        }
        if (!$o.length) {
            $o = $($this.data("selector"));
        }
        header_popover_load($o, $this);
        header_popover_toggle($o, $this);
    });

    $(document).on("touchmove", ".header__popover", function (e) {
        e.stopPropagation();
    });

    $(document).on("click", "*", function (e) {
        if (!$(e.target).closest(".header__popover, .js-toggle-popover").length) {
            $(".js-toggle-popover").removeClass("active");
            $(".header__popover").removeClass("active");
        }
    });
}

function header_popover_load($o, $this, force) {

    if (!$o) {
        var $o = $();
        $o = $($this.data("selector"));
        if (!$o.length && $this.attr("href") && $this.attr("href").length > 1) {
            $o = $($this.attr("href"));
        }
    }
    var url = $o.data('popover-url');
    if (url && (!$o.children().length || force)) {
        var method = "get";
        var data = null;
        if ($o.attr("data-popover-method")) {
            method = $o.attr("data-popover-method");
        }

        if ($o.data('xhr')) {
            var xhr = $o.data('xhr');
            if (xhr && xhr.readyState != 4) {
                xhr.abort();
            }
        }
        var $loader_areas = $o;
        var scrollTop = $o.find('.header__popover-content').scrollTop();
        var xhr = $.ajax({
            url: url,
            type: method,
            data: data,
            dataType: 'html',
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                loader_remove($loader_areas);
                loader_add($loader_areas);
            },
            complete: function (response) {
                loader_remove($loader_areas);
                $o.trigger("ajax-complete");
            },
            success: function (response) {
                $o.addClass('popover-loaded');
                if (force) {
                    $o.empty();
                }
                $o.append(response);
                bind_widgets($o);
                $o.find('.js-icard-spinner').trigger('changing.spinner', [true]);
                var $scroll = $o.find('.header__popover-content');
                $scroll.scrollTop(scrollTop);
                if ($scroll.data('ps')) {
                    $scroll.data('ps').update();
                }
                $o.trigger("ajax-success", response);
            },
            error: function (jqXHR) {
                $o.trigger("ajax-error");
            }
        });
        $o.data('xhr', xhr);
    }
}

function header_popover_toggle($o, $this) {
    $(".js-toggle-popover").not($this).removeClass("active");
    $(".header__popover").not($o).removeClass("active");
    $this.toggleClass('active');
    $o.toggleClass('active');
    $o.trigger("popover-" + (($o.hasClass('active')) ? 'open' : 'close'), $this);
    $("html").toggleClass("header-popover-active", $o.hasClass('active'));
}


function dynamic_data_update(context, type) {
    // $.each(obj, function(k,v){
    //     if (k == 'FAVORITE') {
    //         $.each(v, function(i, id){
    //             var $offer = $('[data-cart-data]').filter('[data-id="'+id+'"]');
    //             $offer.find('.js-favorites-toggle').addClass('active');
    //         });
    //         var value = Object.keys(v).length;
    //         $('.js-favorites-value').text(value).toggleClass('active', !!value);
    //     }
    //     else if (k == 'CART') {
    //         $.each(v, function(id, count){
    //             var $offer = $('[data-cart-data]').filter('[data-id="'+id+'"]');
    //             $offer.find('.js-icard-spinner').val(count);
    //             icard.actions.update($offer);
    //         });
    //         var value = Object.keys(v).length;
    //         $('.js-cart-value').text(value).toggleClass('active', !!value);
    //     }
    // });
    $.each(obDynamicData, function (k, v) {
        if (k == 'FAVORITE' && (!type || type == k)) {
            var value = Object.keys(v).length;
            $('.js-favorites-value').text(value).toggleClass('active', !!value);
        } else if (k == 'CART' && (!type || type == k)) {
            var value = Object.keys(v).length;
            $('.js-cart-value').text(value).toggleClass('active', !!value);
        }
    });
    $('[data-cart-data]', context).each(function () {
        var $this = $(this);
        var id = $(this).attr('data-id') * 1;
        $.each(obDynamicData, function (k, v) {
            if (k == 'FAVORITE' && (!type || type == k)) {
                $this.find('.js-favorites-toggle').toggleClass('active', v.indexOf(id) !== -1);
            } else if (k == 'CART' && (!type || type == k)) {
                var in_cart_by_html = !$this.find('.js-cart-remove').hasClass('hidden');
                if (v[id] === undefined || v[id].quantity === undefined) {
                    count = 0;
                } else {
                    count = v[id].quantity;
                }
                if (count || in_cart_by_html) {
                    $this.find('.js-icard-spinner').val(count);
                    icard.actions.update($this);
                }
            }
        });
    });
}


function cart_item_apply(params) {
    if (typeof cart_item_apply.xhr == 'undefined') {
        cart_item_apply.xhr = 0;
    }
    if (params && params.url) {
        var method = "get";
        var data = [];
        if (params.method) {
            method = params.method;
        }
        if (params.data) {
            data = params.data;
        }
        if (cart_item_apply.xhr) {
            var xhr = cart_item_apply.xhr;
            if (xhr && xhr.readyState != 4) {
                xhr.abort();
            }
        }
        var $btn = $('.js-cart-header');
        var $popover = $('.js-cart-popover');
        var xhr = $.ajax({
            url: params.url,
            type: method,
            data: $.param(data),
            dataType: 'json',
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                loader_remove($popover);
                loader_add($popover);
            },
            complete: function (response) {
            },
            success: function (response) {
                $btn.addClass('animate-icon');
                setTimeout(function () {
                    $btn.removeClass('animate-icon');
                }, 1000);
                window['obDynamicData'] = response;
                if ($popover.hasClass('active')) {
                    header_popover_load(null, $btn, true);
                } else {
                    $popover.empty();
                }
                $(document).trigger('cart-updated');
            },
            error: function (jqXHR) {
            }
        });
        cart_item_apply.xhr = xhr;
    }
}

function favorites_item_apply($this, params) {
    if (typeof favorites_item_apply.xhr == 'undefined') {
        favorites_item_apply.xhr = 0;
    }
    if (params && params.url) {
        var method = "get";
        var data = [];
        if (params.method) {
            method = params.method;
        }
        if (params.data) {
            data = params.data;
        }
        if (favorites_item_apply.xhr) {
            var xhr = favorites_item_apply.xhr;
            if (xhr && xhr.readyState != 4) {
                xhr.abort();
            }
        }
        var xhr = $.ajax({
            url: params.url,
            type: method,
            data: $.param(data),
            dataType: 'json',
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
            },
            complete: function (response) {
            },
            success: function (response) {
                var $btn = $('.js-favorites-header');
                var $popover = $('.js-favorites-popover');
                $btn.addClass('animate-icon');
                setTimeout(function () {
                    $btn.removeClass('animate-icon');
                }, 1000);
                window['obDynamicData'] = response;
                if ($popover.hasClass('active')) {
                    header_popover_load(null, $btn, true);
                } else {
                    $popover.empty();
                }
                $(document).trigger('favorites-updated');
            },
            error: function (jqXHR) {
            }
        });
        favorites_item_apply.xhr = xhr;
    }
}


function fbar_init() {

    $(document).on('change', '.fbar :input', function () {
        var $o = $('.fbar').first();
        fbar_reload($o, {
            url: $o.data('url'),
            method: $o.data('method'),
        });
    });

    $(document).on('toggle-element', '.fbar .ach-items', function (e, $this) {
        var is_expanded = $(this).hasClass('expanded');
        Cookies.set('fbar_expanded', +is_expanded);
    });

    $(document).on('expandAfter', '.fbar .ach-items__content', function (e, $this) {
        $(window).trigger('fbar-update');
    });
}

function fbar_reload($o, params) {
    if (typeof fbar_reload.xhr == 'undefined') {
        fbar_reload.xhr = 0;
    }
    if (params && params.url) {
        var method = "get";
        var data = [];
        if (params.method) {
            method = params.method;
        }
        if (params.data) {
            data = params.data;
        }
        if (fbar_reload.xhr) {
            var xhr = fbar_reload.xhr;
            if (xhr && xhr.readyState != 4) {
                xhr.abort();
            }
        }
        var $loader_areas = $o.find('.js-fbar-sticky');
        var xhr = $.ajax({
            url: params.url,
            type: method,
            data: $.param(data),
            dataType: 'html',
            cache: false,
            contentType: false,
            processData: false,
            beforeSend: function () {
                loader_remove($loader_areas);
                loader_add($loader_areas);
            },
            complete: function (response) {
                loader_remove($loader_areas);
                $o.trigger("ajax-complete");
            },
            success: function (response) {
                var $no = $(response);
                $o.replaceWith($no);
                bind_widgets($no);
                expand_it_init_prepare($no.find('.expand-it-container'), true);
                $(window).trigger('scroll');
                $no.trigger("ajax-success", response);
            },
            error: function (jqXHR) {
                $o.trigger("ajax-error");
            }
        });
        fbar_reload.xhr = xhr;
    }
}

//# sourceMappingURL=build.js.map

var obHelper = {
    arTranslitRu: ['Я', 'я', 'Ю', 'ю', 'Ч', 'ч', 'Ш', 'ш', 'Щ', 'щ', 'Ж', 'ж', 'А', 'а', 'Б', 'б', 'В', 'в', 'Г', 'г', 'Д', 'д', 'Е', 'е', 'Ё', 'ё', 'З', 'з', 'И', 'и', 'Й', 'й', 'К', 'к', 'Л', 'л', 'М', 'м', 'Н', 'н', 'О', 'о', 'П', 'п', 'Р', 'р', 'С', 'с', 'Т', 'т', 'У', 'у', 'Ф', 'ф', 'Х', 'х', 'Ц', 'ц', 'Ы', 'ы', 'Ь', 'ь', 'Ъ', 'ъ', 'Э', 'э'],
    arTranslitEn: ['Ya', 'ya', 'Yu', 'yu', 'Ch', 'ch', 'Sh', 'sh', 'Sh', 'sh', 'Zh', 'zh', 'A', 'a', 'B', 'b', 'V', 'v', 'G', 'g', 'D', 'd', 'E', 'e', 'E', 'e', 'Z', 'z', 'I', 'i', 'J', 'j', 'K', 'k', 'L', 'l', 'M', 'm', 'N', 'n', 'O', 'o', 'P', 'p', 'R', 'r', 'S', 's', 'T', 't', 'U', 'u', 'F', 'f', 'H', 'h', 'C', 'c', 'Y', 'y', '`', '`', '\'', '\'', 'E', 'e'],
    transliterateText: function (strText, strDirection) {
        strDirection = strDirection == 'en2ru' ? 'en2ru' : 'ru2en';
        if (strDirection == 'ru2en') {
            for (var i = 0; i < obHelper.arTranslitRu.length; i++) {
                var reg = new RegExp(obHelper.arTranslitRu[i], "g");
                strText = strText.replace(reg, obHelper.arTranslitEn[i]);
            }
        } else if (strDirection == 'en2ru') {
            for (var i = 0; i < obHelper.arTranslitEn.length; i++) {
                var reg = new RegExp(obHelper.arTranslitEn[i], "g");
                strText = strText.replace(reg, obHelper.arTranslitRu[i]);
            }
        }
        return strText;
    },
    transliterate: function (strFrom, strTo, strDirection) {
        strFrom = strFrom || 'NAME';
        strTo = strTo || 'CODE';
        let strText = $("#" + strFrom).val();
        $.ajax({
            method: "POST",
            url: "/local/ajax/system.php",
            dataType: "json",
            data: {action: "translit", strText: strText, strDirection: strDirection}
        }).done(function (obResult) {
            if (obResult.RESULT == 'OK') {
                $("#" + strTo).val(obResult.TEXT);
            }
        });
        return false;
    },
    inObject: function (value, object) {
        for (var i = 0 in object) {
            if (value == object[i]) return true;
        }
        return false;
    },
    processPagerShowMore: function ($obT) {
        let strUrl = $obT.data("url") || '', strContainerID = $obT.data("continer-id") || '';
        if (strUrl.length > 0) {
            $.ajax({method: "GET", url: strUrl}).done(function (strResult) {
                let obLoadedPager = $(strResult).find("#show-more-" + strContainerID);
                let obLoadedItems = $(strResult).find("#container-" + strContainerID).html();
                $("#container-" + strContainerID).append(obLoadedItems);
                $("#show-more-" + strContainerID).replaceWith(obLoadedPager);
                bind_widgets("#container-" + strContainerID);
            });
        }
    },
    processReloadContainer: function () {
        $(".js-reload-container").each(function () {
            let $obT = $(this), strContainerID = $obT.data("container");
            if (!$obT.hasClass("js-reload-container--inited")) {
                $obT.on('click', function () {
                    $.ajax({method: "GET", url: $obT.attr("href")}).done(function (strResult) {
                        $("#" + strContainerID).replaceWith($(strResult).find("#" + strContainerID));
                        obHelper.processReloadContainer();
                        bind_widgets("#" + strContainerID);
                    });
                    return false;
                }).addClass('js-reload-container--inited');
            }
        });
    },
    initPage: function () {
        obHelper.processReloadContainer();
    },
};
$(function () {
    obHelper.initPage();
});

$('body').on('click','.js-sort-param',function(){
    let newSort = $(this).data('value') + '-' + $(this).data('direction');
    document.cookie = 'catalog_order=' + newSort +'; path=/';
    window.location.reload();
});

$('body').on('contextmenu', 'img', function(e){
    return false;
});